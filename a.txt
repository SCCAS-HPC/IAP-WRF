atm/wrf/main/wrf_comp_mct.F.0721:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/wrf_comp_mct.F.0721:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/wrf_comp_mct.F.0721:  type(mct_aVect)   :: x2c_old
atm/wrf/main/wrf_comp_mct.F.0721:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/wrf_comp_mct.F.0721:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/wrf_comp_mct.F.0721:      type(mct_aVect), intent(inout)              :: x2c_c1  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0721:      type(mct_aVect), intent(inout)              :: x2c_c2  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0721:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(a2x_a, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(a2x_a)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(x2a_a, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(x2a_a)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(x2c_c1)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(x2c_c2)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(x2c_old, rList=seq_flds_x2w_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(x2c_old)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0721:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/wrf_comp_mct.F.0721:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0721:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0721:    type(mct_aVect)             ,intent(inout) :: x2c_c1
atm/wrf/main/wrf_comp_mct.F.0721:    type(mct_aVect)             ,intent(inout) :: x2c_c2
atm/wrf/main/wrf_comp_mct.F.0721:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/wrf_comp_mct.F.0721:         call mct_aVect_copy(x2c_c2,x2c_old)  ! record the previous import
atm/wrf/main/wrf_comp_mct.F.0721:       type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0721:       type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0721:     type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/wrf_comp_mct.F.0721:     type(mct_aVect)    , intent(out) :: w2x_w
atm/wrf/main/wrf_comp_mct.F.0513:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/wrf_comp_mct.F.0513:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/wrf_comp_mct.F.0513:  type(mct_aVect)   :: x2c_old
atm/wrf/main/wrf_comp_mct.F.0513:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/wrf_comp_mct.F.0513:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/wrf_comp_mct.F.0513:      type(mct_aVect), intent(inout)              :: x2c_c1  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0513:      type(mct_aVect), intent(inout)              :: x2c_c2  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0513:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(a2x_a, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(a2x_a)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(x2a_a, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(x2a_a)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(x2c_c1)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(x2c_c2)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(x2c_old, rList=seq_flds_x2w_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(x2c_old)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0513:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/wrf_comp_mct.F.0513:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0513:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0513:    type(mct_aVect)             ,intent(inout) :: x2c_c1
atm/wrf/main/wrf_comp_mct.F.0513:    type(mct_aVect)             ,intent(inout) :: x2c_c2
atm/wrf/main/wrf_comp_mct.F.0513:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/wrf_comp_mct.F.0513:         call mct_aVect_copy(x2c_c2,x2c_old)  ! record the previous import
atm/wrf/main/wrf_comp_mct.F.0513:       type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0513:       type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0513:     type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/wrf_comp_mct.F.0513:     type(mct_aVect)    , intent(out) :: w2x_w
atm/wrf/main/wrf_comp_mct.F.xiugai:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/wrf_comp_mct.F.xiugai:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/wrf_comp_mct.F.xiugai:  type(mct_aVect)   :: x2c_old
atm/wrf/main/wrf_comp_mct.F.xiugai:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/wrf_comp_mct.F.xiugai:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/wrf_comp_mct.F.xiugai:      type(mct_aVect), intent(inout)              :: x2c_c1  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.xiugai:      type(mct_aVect), intent(inout)              :: x2c_c2  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.xiugai:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(a2x_a, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(a2x_a)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(x2a_a, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(x2a_a)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(x2c_c1)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(x2c_c2)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(x2c_old, rList=seq_flds_x2w_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(x2c_old)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.xiugai:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/wrf_comp_mct.F.xiugai:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.xiugai:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.xiugai:    type(mct_aVect)             ,intent(inout) :: x2c_c1
atm/wrf/main/wrf_comp_mct.F.xiugai:    type(mct_aVect)             ,intent(inout) :: x2c_c2
atm/wrf/main/wrf_comp_mct.F.xiugai:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/wrf_comp_mct.F.xiugai:         call mct_aVect_copy(x2c_c2,x2c_old)  ! record the previous import
atm/wrf/main/wrf_comp_mct.F.xiugai:       type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.xiugai:       type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.xiugai:     type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/wrf_comp_mct.F.xiugai:     type(mct_aVect)    , intent(out) :: w2x_w
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:      type(mct_aVect), intent(inout)              :: x2c_c  ! wrf/cam coupling
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(a2x_a, rList=seq_flds_a2x_fields, lsize=lsize)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(a2x_a)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(x2a_a, rList=seq_flds_x2a_fields, lsize=lsize) 
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(x2a_a)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(x2c_c, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(x2c_c)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)             ,intent(inout) :: x2c_c
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:          call mct_aVect_copy( a2x_a, a2x_a_SUM )
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:          call mct_aVect_copy( a2x_a, a2x_a_SNAP )
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:          call mct_aVect_accum( aVin=a2x_a_SNAP, aVout=a2x_a_SUM )
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:       call mct_aVect_avg ( a2x_a_SUM, avg_count)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:       call mct_aVect_copy( a2x_a_SUM, a2x_a )
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:       call mct_aVect_zero( a2x_a_SUM)
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/.svn/text-base/wrf_comp_mct.F.svn-base:    type(mct_aVect)    , intent(out) :: c2x_c
atm/wrf/main/wrf_comp_mct.F.0522.right:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/wrf_comp_mct.F.0522.right:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/wrf_comp_mct.F.0522.right:  type(mct_aVect)   :: x2c_old
atm/wrf/main/wrf_comp_mct.F.0522.right:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/wrf_comp_mct.F.0522.right:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/wrf_comp_mct.F.0522.right:      type(mct_aVect), intent(inout)              :: x2c_c1  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0522.right:      type(mct_aVect), intent(inout)              :: x2c_c2  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F.0522.right:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(a2x_a, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(a2x_a)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(x2a_a, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(x2a_a)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(x2c_c1)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(x2c_c2)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(x2c_old, rList=seq_flds_x2w_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(x2c_old)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F.0522.right:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/wrf_comp_mct.F.0522.right:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0522.right:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0522.right:    type(mct_aVect)             ,intent(inout) :: x2c_c1
atm/wrf/main/wrf_comp_mct.F.0522.right:    type(mct_aVect)             ,intent(inout) :: x2c_c2
atm/wrf/main/wrf_comp_mct.F.0522.right:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/wrf_comp_mct.F.0522.right:         call mct_aVect_copy(x2c_c2,x2c_old)  ! record the previous import
atm/wrf/main/wrf_comp_mct.F.0522.right:       type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F.0522.right:       type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/wrf_comp_mct.F.0522.right:     type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/wrf_comp_mct.F.0522.right:     type(mct_aVect)    , intent(out) :: w2x_w
atm/wrf/main/wrf_comp_mct.F:  type(mct_aVect)   :: a2x_a_SNAP
atm/wrf/main/wrf_comp_mct.F:  type(mct_aVect)   :: a2x_a_SUM
atm/wrf/main/wrf_comp_mct.F:  type(mct_aVect)   :: x2c_old
atm/wrf/main/wrf_comp_mct.F:      type(mct_aVect), intent(inout)              :: x2a_a  ! wrf/pop/cice/lnd coupling
atm/wrf/main/wrf_comp_mct.F:      type(mct_aVect), intent(inout)              :: a2x_a  ! wrf/pop/cice/lnd coupling 
atm/wrf/main/wrf_comp_mct.F:      type(mct_aVect), intent(inout)              :: x2c_c1  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F:      type(mct_aVect), intent(inout)              :: x2c_c2  ! wrf/cam coupling
atm/wrf/main/wrf_comp_mct.F:      type(mct_aVect), intent(inout)              :: c2x_c  ! wrf/cam coupling     
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(a2x_a, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(a2x_a)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(x2a_a, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(x2a_a)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(a2x_a_SNAP)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(a2x_a_SUM )         
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(x2c_c1)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2w_fields, lsize=lsize) 
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(x2c_c2)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(x2c_old, rList=seq_flds_x2w_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(x2c_old)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_init(c2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
atm/wrf/main/wrf_comp_mct.F:        call mct_aVect_zero(c2x_c)        
atm/wrf/main/wrf_comp_mct.F:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/wrf/main/wrf_comp_mct.F:    type(mct_aVect)             ,intent(inout) :: x2c_c1
atm/wrf/main/wrf_comp_mct.F:    type(mct_aVect)             ,intent(inout) :: x2c_c2
atm/wrf/main/wrf_comp_mct.F:    type(mct_aVect)             ,intent(inout) :: c2x_c
atm/wrf/main/wrf_comp_mct.F:         call mct_aVect_copy(x2c_c2,x2c_old)  ! record the previous import
atm/wrf/main/wrf_comp_mct.F:       type(mct_aVect)   , intent(inout) :: x2a_a
atm/wrf/main/wrf_comp_mct.F:       type(mct_aVect)    , intent(out) :: a2x_a
atm/wrf/main/wrf_comp_mct.F:     type(mct_aVect)   , intent(inout) :: x2c_c
atm/wrf/main/wrf_comp_mct.F:     type(mct_aVect)    , intent(out) :: w2x_w
atm/datm/datm_comp_mod.F90:  type(mct_avect) :: avstrm   ! av of data from stream
atm/datm/datm_comp_mod.F90:    type(mct_aVect)             , intent(inout) :: x2a, a2x
atm/datm/datm_comp_mod.F90:       k = mct_aVect_indexRA(SDATM%grid%data,'mask')
atm/datm/datm_comp_mod.F90:       k = mct_aVect_indexRA(SDATM%grid%data,'frac')
atm/datm/datm_comp_mod.F90:    call mct_aVect_init(a2x, rList=seq_flds_a2x_fields, lsize=lsize)
atm/datm/datm_comp_mod.F90:    call mct_aVect_zero(a2x)
atm/datm/datm_comp_mod.F90:    kz    = mct_aVect_indexRA(a2x,'Sa_z')
atm/datm/datm_comp_mod.F90:    ku    = mct_aVect_indexRA(a2x,'Sa_u')
atm/datm/datm_comp_mod.F90:    kv    = mct_aVect_indexRA(a2x,'Sa_v')
atm/datm/datm_comp_mod.F90:    ktbot = mct_aVect_indexRA(a2x,'Sa_tbot')
atm/datm/datm_comp_mod.F90:    kptem = mct_aVect_indexRA(a2x,'Sa_ptem')
atm/datm/datm_comp_mod.F90:    kshum = mct_aVect_indexRA(a2x,'Sa_shum')
atm/datm/datm_comp_mod.F90:    kdens = mct_aVect_indexRA(a2x,'Sa_dens')
atm/datm/datm_comp_mod.F90:    kpbot = mct_aVect_indexRA(a2x,'Sa_pbot')
atm/datm/datm_comp_mod.F90:    kpslv = mct_aVect_indexRA(a2x,'Sa_pslv')
atm/datm/datm_comp_mod.F90:    klwdn = mct_aVect_indexRA(a2x,'Faxa_lwdn')
atm/datm/datm_comp_mod.F90:    krc   = mct_aVect_indexRA(a2x,'Faxa_rainc')
atm/datm/datm_comp_mod.F90:    krl   = mct_aVect_indexRA(a2x,'Faxa_rainl')
atm/datm/datm_comp_mod.F90:    ksc   = mct_aVect_indexRA(a2x,'Faxa_snowc')
atm/datm/datm_comp_mod.F90:    ksl   = mct_aVect_indexRA(a2x,'Faxa_snowl')
atm/datm/datm_comp_mod.F90:    kswndr= mct_aVect_indexRA(a2x,'Faxa_swndr')
atm/datm/datm_comp_mod.F90:    kswndf= mct_aVect_indexRA(a2x,'Faxa_swndf')
atm/datm/datm_comp_mod.F90:    kswvdr= mct_aVect_indexRA(a2x,'Faxa_swvdr')
atm/datm/datm_comp_mod.F90:    kswvdf= mct_aVect_indexRA(a2x,'Faxa_swvdf')
atm/datm/datm_comp_mod.F90:    kswnet= mct_aVect_indexRA(a2x,'Faxa_swnet')
atm/datm/datm_comp_mod.F90:    kco2p = mct_aVect_indexRA(a2x,'Sa_co2prog',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    kco2d = mct_aVect_indexRA(a2x,'Sa_co2diag',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    kbid  = mct_aVect_indexRA(a2x,'Faxa_bcphidry')
atm/datm/datm_comp_mod.F90:    kbod  = mct_aVect_indexRA(a2x,'Faxa_bcphodry')
atm/datm/datm_comp_mod.F90:    kbiw  = mct_aVect_indexRA(a2x,'Faxa_bcphiwet')
atm/datm/datm_comp_mod.F90:    koid  = mct_aVect_indexRA(a2x,'Faxa_ocphidry')
atm/datm/datm_comp_mod.F90:    kood  = mct_aVect_indexRA(a2x,'Faxa_ocphodry')
atm/datm/datm_comp_mod.F90:    koiw  = mct_aVect_indexRA(a2x,'Faxa_ocphiwet')
atm/datm/datm_comp_mod.F90:    kdd1  = mct_aVect_indexRA(a2x,'Faxa_dstdry1')
atm/datm/datm_comp_mod.F90:    kdd2  = mct_aVect_indexRA(a2x,'Faxa_dstdry2')
atm/datm/datm_comp_mod.F90:    kdd3  = mct_aVect_indexRA(a2x,'Faxa_dstdry3')
atm/datm/datm_comp_mod.F90:    kdd4  = mct_aVect_indexRA(a2x,'Faxa_dstdry4')
atm/datm/datm_comp_mod.F90:    kdw1  = mct_aVect_indexRA(a2x,'Faxa_dstwet1')
atm/datm/datm_comp_mod.F90:    kdw2  = mct_aVect_indexRA(a2x,'Faxa_dstwet2')
atm/datm/datm_comp_mod.F90:    kdw3  = mct_aVect_indexRA(a2x,'Faxa_dstwet3')
atm/datm/datm_comp_mod.F90:    kdw4  = mct_aVect_indexRA(a2x,'Faxa_dstwet4')
atm/datm/datm_comp_mod.F90:    call mct_aVect_init(x2a, rList=seq_flds_x2a_fields, lsize=lsize)
atm/datm/datm_comp_mod.F90:    call mct_aVect_zero(x2a)
atm/datm/datm_comp_mod.F90:    kanidr = mct_aVect_indexRA(x2a,'Sx_anidr')
atm/datm/datm_comp_mod.F90:    kanidf = mct_aVect_indexRA(x2a,'Sx_anidf')
atm/datm/datm_comp_mod.F90:    kavsdr = mct_aVect_indexRA(x2a,'Sx_avsdr')
atm/datm/datm_comp_mod.F90:    kavsdf = mct_aVect_indexRA(x2a,'Sx_avsdf')
atm/datm/datm_comp_mod.F90:         kfld = mct_aVect_indexRA(SDATM%avs(n),trim(stifld(k)),perrWith='quiet')
atm/datm/datm_comp_mod.F90:    call mct_aVect_init(avstrm, rList=flds_strm, lsize=lsize)
atm/datm/datm_comp_mod.F90:    call mct_aVect_zero(avstrm)
atm/datm/datm_comp_mod.F90:    stbot  = mct_aVect_indexRA(avstrm,'strm_tbot',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    swind  = mct_aVect_indexRA(avstrm,'strm_wind',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sz     = mct_aVect_indexRA(avstrm,'strm_z',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    spbot  = mct_aVect_indexRA(avstrm,'strm_pbot',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sshum  = mct_aVect_indexRA(avstrm,'strm_shum',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    stdew  = mct_aVect_indexRA(avstrm,'strm_tdew',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    srh    = mct_aVect_indexRA(avstrm,'strm_rh',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    slwdn  = mct_aVect_indexRA(avstrm,'strm_lwdn',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sswdn  = mct_aVect_indexRA(avstrm,'strm_swdn',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sswdndf= mct_aVect_indexRA(avstrm,'strm_swdndf',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sswdndr= mct_aVect_indexRA(avstrm,'strm_swdndr',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sprecc = mct_aVect_indexRA(avstrm,'strm_precc',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sprecl = mct_aVect_indexRA(avstrm,'strm_precl',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sprecn = mct_aVect_indexRA(avstrm,'strm_precn',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sco2p  = mct_aVect_indexRA(avstrm,'strm_co2p',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sco2d  = mct_aVect_indexRA(avstrm,'strm_co2d',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sswup  = mct_aVect_indexRA(avstrm,'strm_swup',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    sprec  = mct_aVect_indexRA(avstrm,'strm_prec',perrWith='quiet')
atm/datm/datm_comp_mod.F90:    kmask = mct_aVect_indexRA(ggrid%data,'mask')
atm/datm/datm_comp_mod.F90:    klat = mct_aVect_indexRA(ggrid%data,'lat')
atm/datm/datm_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: x2a        ! driver -> dead
atm/datm/datm_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: a2x        ! dead   -> driver
atm/datm/datm_comp_mod.F90:         lsize = mct_avect_lsize(a2x)
atm/datm/datm_comp_mod.F90:      call mct_aVect_zero(a2x)
atm/datm/datm_comp_mod.F90:      lsize = mct_avect_lsize(a2x)
atm/datm/datm_comp_mod.F90:      lsize = mct_avect_lsize(a2x)
atm/datm/datm_comp_mod.F90:      lsize = mct_avect_lsize(a2x)
atm/datm/datm_shr_mod.F90:   type(mct_avect)  :: avi           ! input attr vect
atm/datm/datm_shr_mod.F90:   type(mct_avect)  :: avo           ! output attr vect
atm/datm/datm_shr_mod.F90:   call mct_aVect_init(avi,rList="wind:windd:qsat",lsize=lsizei)
atm/datm/datm_shr_mod.F90:      call mct_aVect_importRattr(avi,'wind',tempR1D,lsizei)
atm/datm/datm_shr_mod.F90:      call mct_aVect_importRattr(avi,'windd',tempR1D,lsizei)
atm/datm/datm_shr_mod.F90:      call mct_aVect_importRattr(avi,'qsat',tempR1D,lsizei)
atm/datm/datm_shr_mod.F90:         klon = mct_aVect_indexRA(ggridi%data,'lon')
atm/datm/datm_shr_mod.F90:         klat = mct_aVect_indexRA(ggrido%data,'lat')
atm/datm/datm_shr_mod.F90:      call mct_aVect_init(avo,avi,lsizeo)
atm/datm/datm_shr_mod.F90:      call mct_aVect_scatter(avi,avo,gsmapo,0,mpicom)
atm/datm/datm_shr_mod.F90:      call mct_aVect_exportRattr(avo,'wind' ,tempR1D,lsizeo)
atm/datm/datm_shr_mod.F90:      call mct_aVect_exportRattr(avo,'windd',tempR1D,lsizeo)
atm/datm/datm_shr_mod.F90:      call mct_aVect_exportRattr(avo,'qsat' ,tempR1D,lsizeo)
atm/datm/datm_shr_mod.F90:   call mct_aVect_clean(avi)
atm/datm/datm_shr_mod.F90:   call mct_aVect_clean(avo)
atm/datm/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2a, a2x
atm/datm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2a        ! driver -> dead
atm/datm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: a2x        ! dead   -> driver
atm/datm/cpl_esmf/atm_comp_esmf.F90:   type(mct_aVect)     :: x2d
atm/datm/cpl_esmf/atm_comp_esmf.F90:   type(mct_aVect)     :: d2x
atm/datm/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
atm/datm/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
atm/datm/cpl_esmf/atm_comp_mct.F90:      call mct_aVect_zero(x2d)
atm/datm/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
atm/datm/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
atm/satm/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
atm/satm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        
atm/satm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        
atm/satm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
atm/satm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> stub
atm/satm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! stub   -> driver
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(x2o_o)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(o2x_o)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(x2o_o)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(o2x_o)
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect), intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)          , intent(inout) :: x2i_i, i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_zero(x2i_i)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_zero(i2x_i)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)             , intent(inout) :: x2i_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)             , intent(inout) :: i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: x2i_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2i_i, i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(x2i_i)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(i2x_i)
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2i_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: i2x_i
atm/beifen_cam/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2i_i
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(x2o_o)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(o2x_o)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(x2o_o)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(o2x_o)
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/beifen_cam/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect), intent(inout) :: o2x_o
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: a2x      ! temporary
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2a      ! temporary
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2c      ! temporary, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: c2x      ! temporary, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: ca2x      ! temporary, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2ca      ! temporary, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2a, rList=seq_flds_x2a_fields, lsize=1)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(a2x, rList=seq_flds_a2x_fields, lsize=1)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(c2x, rList=seq_flds_c2x_fields, lsize=1)  ! for wrf/cam, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2c, rList=seq_flds_x2c_fields, lsize=1)  ! for wrf/cam, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(ca2x, rList=seq_flds_ca2x_fields, lsize=1)  ! for geatm/cam, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2ca, rList=seq_flds_x2ca_fields, lsize=1)  ! for geatm/cam, juanxiong he
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_avsdr      = mct_avect_indexra(x2a,'Sx_avsdr')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_anidr      = mct_avect_indexra(x2a,'Sx_anidr')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_avsdf      = mct_avect_indexra(x2a,'Sx_avsdf')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_anidf      = mct_avect_indexra(x2a,'Sx_anidf')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_t          = mct_avect_indexra(x2a,'Sx_t')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_t          = mct_avect_indexra(x2a,'So_t')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_snowh      = mct_avect_indexra(x2a,'Sl_snowh')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Si_snowh      = mct_avect_indexra(x2a,'Si_snowh')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_tref       = mct_avect_indexra(x2a,'Sx_tref')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_qref       = mct_avect_indexra(x2a,'Sx_qref')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_ifrac     = mct_avect_indexra(x2a,'Sa_ifrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_ofrac     = mct_avect_indexra(x2a,'Sa_ofrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_lfrac     = mct_avect_indexra(x2a,'Sa_lfrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_ofrac      = mct_avect_indexra(x2a,'Sx_ofrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_ifrac      = mct_avect_indexra(x2a,'Sx_ifrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_lfrac      = mct_avect_indexra(x2a,'Sx_lfrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_u10        = mct_avect_indexra(x2a,'Sx_u10')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_taux     = mct_avect_indexra(x2a,'Faxx_taux')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_tauy     = mct_avect_indexra(x2a,'Faxx_tauy')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_lat      = mct_avect_indexra(x2a,'Faxx_lat')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_sen      = mct_avect_indexra(x2a,'Faxx_sen')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_lwup     = mct_avect_indexra(x2a,'Faxx_lwup')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_evap     = mct_avect_indexra(x2a,'Faxx_evap')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_ustar      = mct_avect_indexra(x2a,'So_ustar')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_re         = mct_avect_indexra(x2a,'So_re')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_ssq        = mct_avect_indexra(x2a,'So_ssq')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_fv         = mct_avect_indexra(x2a,'Sl_fv')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_ram1       = mct_avect_indexra(x2a,'Sl_ram1')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst1  = mct_avect_indexra(x2a,'Fall_flxdst1')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst2  = mct_avect_indexra(x2a,'Fall_flxdst2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst3  = mct_avect_indexra(x2a,'Fall_flxdst3')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst4  = mct_avect_indexra(x2a,'Fall_flxdst4')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fco2_lnd = mct_avect_indexra(x2a,'Faxx_fco2_lnd',perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fco2_ocn = mct_avect_indexra(x2a,'Faxx_fco2_ocn',perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Faxx_fdms_ocn = mct_avect_indexra(x2a,'Faxx_fdms_ocn',perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fdms_ocn  = mct_avect_indexra(x2a,'Faxx_fdms'    ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc1  = mct_avect_indexra(x2a,'Fall_flxvoc1' ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc2  = mct_avect_indexra(x2a,'Fall_flxvoc2' ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc3  = mct_avect_indexra(x2a,'Fall_flxvoc3' ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc4  = mct_avect_indexra(x2a,'Fall_flxvoc4' ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc5  = mct_avect_indexra(x2a,'Fall_flxvoc5' ,perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:       index_x2a_Sx_ddvel   = mct_avect_indexra(x2a, trim(drydep_fields_token))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soildepth(k) = mct_avect_indexra(x2a,'Sx_soildepth'//slayer(k))  ! soil layer  depth
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilthick(k) = mct_avect_indexra(x2a,'Sx_soilthick'//slayer(k))! soil layer  thickness
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilt(k) = mct_avect_indexra(x2a,'Sx_soilt'//slayer(k))! soil layer  temperature
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilm(k) = mct_avect_indexra(x2a,'Sx_soilm'//slayer(k))! soil layer  moisture
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dudt(k)     = mct_avect_indexra(x2c,'Fcxx_dudt'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dvdt(k)      = mct_avect_indexra(x2c,'Fcxx_dvdt'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dtdt(k)      = mct_avect_indexra(x2c,'Fcxx_dtdt'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dqdt(k)     = mct_avect_indexra(x2c,'Fcxx_dqdt'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_u3d(k)      = mct_avect_indexra(x2c,'Sx_u3d'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_v3d(k)      = mct_avect_indexra(x2c,'Sx_v3d'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_t3d(k)      = mct_avect_indexra(x2c,'Sx_t3d'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_q3d(k)      = mct_avect_indexra(x2c,'Sx_q3d'//clev(k))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_ps      = mct_avect_indexra(x2c,'Sx_ps')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_z3d(k)          = mct_avect_indexra(c2x,'Sc_z3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_u3d(k)          = mct_avect_indexra(c2x,'Sc_u3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_v3d(k)       = mct_avect_indexra(c2x,'Sc_v3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_t3d(k)         = mct_avect_indexra(c2x,'Sc_t3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_w3d(k)        = mct_avect_indexra(c2x,'Sc_w3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_q3d(k)          = mct_avect_indexra(c2x,'Sc_q3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_p3d(k)          = mct_avect_indexra(c2x,'Sc_p3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_utend(k)          = mct_avect_indexra(c2x,'Fcxc_utend'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_vtend(k)          = mct_avect_indexra(c2x,'Fcxc_vtend'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_ttend(k)          = mct_avect_indexra(c2x,'Fcxc_ttend'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_qtend(k)          = mct_avect_indexra(c2x,'Fcxc_qtend'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ps        = mct_avect_indexra(c2x,'Sc_ps')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_phis        = mct_avect_indexra(c2x,'Sc_phis')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_lat        = mct_avect_indexra(c2x,'Sc_lat')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_lon        = mct_avect_indexra(c2x,'Sc_lon')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ts        = mct_avect_indexra(c2x,'Sc_ts')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_sst        = mct_avect_indexra(c2x,'Sc_sst')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_snowhland  = mct_avect_indexra(c2x,'Sc_snowhland')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_snowhice  = mct_avect_indexra(c2x,'Sc_snowhice')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_seaice  = mct_avect_indexra(c2x,'Sc_seaice')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ocnfrac  = mct_avect_indexra(c2x,'Sc_ocnfrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soildepth(k)   = mct_avect_indexra(c2x,'Sc_soildepth'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilthick(k)   = mct_avect_indexra(c2x,'Sc_soilthick'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilt(k)   = mct_avect_indexra(c2x,'Sc_soilt'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilm(k)   = mct_avect_indexra(c2x,'Sc_soilm'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_z3d(k)          = mct_avect_indexra(ca2x,'Sca_z3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_u3d(k)          = mct_avect_indexra(ca2x,'Sca_u3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_v3d(k)          = mct_avect_indexra(ca2x,'Sca_v3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_t3d(k)          = mct_avect_indexra(ca2x,'Sca_t3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rh3d(k)          = mct_avect_indexra(ca2x,'Sca_rh3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qv3d(k)          = mct_avect_indexra(ca2x,'Sca_qv3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qi3d(k)          = mct_avect_indexra(ca2x,'Sca_qi3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qc3d(k)          = mct_avect_indexra(ca2x,'Sca_qc3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_p3d(k)          = mct_avect_indexra(ca2x,'Sca_p3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_taucldi3d(k)          = mct_avect_indexra(ca2x,'Sca_taucldi3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_taucldv3d(k)          = mct_avect_indexra(ca2x,'Sca_taucldv3d'//clev(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ps        = mct_avect_indexra(ca2x,'Sca_ps')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_phis      = mct_avect_indexra(ca2x,'Sca_phis')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_lat       = mct_avect_indexra(ca2x,'Sca_lat')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_lon       = mct_avect_indexra(ca2x,'Sca_lon')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ts        = mct_avect_indexra(ca2x,'Sca_ts')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_sst        = mct_avect_indexra(ca2x,'Sca_sst')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_snowhland  = mct_avect_indexra(ca2x,'Sca_snowhland')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_snowhice  = mct_avect_indexra(ca2x,'Sca_snowhice')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_seaice  = mct_avect_indexra(ca2x,'Sca_seaice')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ocnfrac  = mct_avect_indexra(ca2x,'Sca_ocnfrac')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_t2  = mct_avect_indexra(ca2x,'Sca_t2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_q2  = mct_avect_indexra(ca2x,'Sca_q2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rh2  = mct_avect_indexra(ca2x,'Sca_rh2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_u10  = mct_avect_indexra(ca2x,'Sca_u10')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_v10  = mct_avect_indexra(ca2x,'Sca_v10')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ust  = mct_avect_indexra(ca2x,'Sca_ust')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rmol  = mct_avect_indexra(ca2x,'Sca_rmol')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_pblh  = mct_avect_indexra(ca2x,'Sca_pblh')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rainncv  = mct_avect_indexra(ca2x,'Sca_rainncv')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_swdown  = mct_avect_indexra(ca2x,'Sca_swdown')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clflo  = mct_avect_indexra(ca2x,'Sca_clflo')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clfmi  = mct_avect_indexra(ca2x,'Sca_clfmi')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clfhi  = mct_avect_indexra(ca2x,'Sca_clfhi')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soildepth(k)   = mct_avect_indexra(ca2x,'Sca_soildepth'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilthick(k)   = mct_avect_indexra(ca2x,'Sca_soilthick'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilt(k)   = mct_avect_indexra(ca2x,'Sca_soilt'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilm(k)   = mct_avect_indexra(ca2x,'Sca_soilm'//slayer(k) )
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2ca_Fcaxx_tracer(k,i)          = mct_avect_indexra(x2ca,'Fcaxx_tracer'//clev(k)//ctracer(i))
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_z          = mct_avect_indexra(a2x,'Sa_z')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_u          = mct_avect_indexra(a2x,'Sa_u')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_v          = mct_avect_indexra(a2x,'Sa_v')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_tbot       = mct_avect_indexra(a2x,'Sa_tbot')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_ptem       = mct_avect_indexra(a2x,'Sa_ptem')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_pbot       = mct_avect_indexra(a2x,'Sa_pbot')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_pslv       = mct_avect_indexra(a2x,'Sa_pslv')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_shum       = mct_avect_indexra(a2x,'Sa_shum')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_dens       = mct_avect_indexra(a2x,'Sa_dens')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swnet    = mct_avect_indexra(a2x,'Faxa_swnet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_lwdn     = mct_avect_indexra(a2x,'Faxa_lwdn')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_rainc    = mct_avect_indexra(a2x,'Faxa_rainc')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_rainl    = mct_avect_indexra(a2x,'Faxa_rainl')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_snowc    = mct_avect_indexra(a2x,'Faxa_snowc')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_snowl    = mct_avect_indexra(a2x,'Faxa_snowl')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swndr    = mct_avect_indexra(a2x,'Faxa_swndr')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swvdr    = mct_avect_indexra(a2x,'Faxa_swvdr')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swndf    = mct_avect_indexra(a2x,'Faxa_swndf')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swvdf    = mct_avect_indexra(a2x,'Faxa_swvdf')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphidry = mct_avect_indexra(a2x,'Faxa_bcphidry')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphodry = mct_avect_indexra(a2x,'Faxa_bcphodry')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphiwet = mct_avect_indexra(a2x,'Faxa_bcphiwet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphidry = mct_avect_indexra(a2x,'Faxa_ocphidry')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphodry = mct_avect_indexra(a2x,'Faxa_ocphodry')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphiwet = mct_avect_indexra(a2x,'Faxa_ocphiwet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry1  = mct_avect_indexra(a2x,'Faxa_dstdry1')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry2  = mct_avect_indexra(a2x,'Faxa_dstdry2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry3  = mct_avect_indexra(a2x,'Faxa_dstdry3')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry4  = mct_avect_indexra(a2x,'Faxa_dstdry4')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet1  = mct_avect_indexra(a2x,'Faxa_dstwet1')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet2  = mct_avect_indexra(a2x,'Faxa_dstwet2')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet3  = mct_avect_indexra(a2x,'Faxa_dstwet3')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet4  = mct_avect_indexra(a2x,'Faxa_dstwet4')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_co2prog    = mct_avect_indexra(a2x,'Sa_co2prog',perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_co2diag    = mct_avect_indexra(a2x,'Sa_co2diag',perrWith='quiet')
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2a)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(a2x)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(c2x)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2c)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(ca2x)
atm/beifen_cam/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2ca)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:  type(mct_aVect)   :: a2x_a_SNAP
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:  type(mct_aVect)   :: a2x_a_SUM
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2a_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: a2x_a   
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2c_c1 !juanxiong he, for wrf/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2c_c2 !juanxiong he, for wrf/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: c2x_c1 !juanxiong he, for wrf/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: c2x_c2 !juanxiong he, for wrf/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca1 !juanxiong he, for geatm/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca2 !juanxiong he, for geatm/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca1 !juanxiong he, for geatm/cam
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca2 !juanxiong he, for geatm/cam 
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a, rList=seq_flds_a2x_fields, lsize=lsize)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2a_a, rList=seq_flds_x2a_fields, lsize=lsize) 
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2a_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a_SNAP)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a_SUM )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(c2x_c1, rList=seq_flds_c2x_fields, lsize=lsize) !juaxniong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(c2x_c1) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(c2x_c2, rList=seq_flds_c2x_fields, lsize=lsize) !juaxniong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(c2x_c2) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2c_c1, rList=seq_flds_x2c_fields, lsize=lsize) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2c_c1) !juanxiong he      
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2c_c2, rList=seq_flds_x2c_fields, lsize=lsize) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2c_c2) !juanxiong he   
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(ca2x_caca1, rList=seq_flds_ca2x_fields, lsize=lsize) !juaxniong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(ca2x_caca1) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(ca2x_caca2, rList=seq_flds_ca2x_fields, lsize=lsize) !juaxniong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(ca2x_caca2) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2ca_caca1, rList=seq_flds_x2ca_fields, lsize=lsize) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2ca_caca1) !juanxiong he      
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2ca_caca2, rList=seq_flds_x2ca_fields, lsize=lsize) !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2ca_caca2) !juanxiong he   
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2c_c1  !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2c_c2  !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: c2x_c1  !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: c2x_c2  !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca1 !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca2 !juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca1 !juanxiong he  
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca2 !juanxiong he     
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:         call mct_aVect_copy( c2x_c1, c2x_c2 ) ! juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:         call mct_aVect_copy( c2x_c2, c2x_c1 ) ! juanxiong he
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SUM )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SNAP )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_accum( aVin=a2x_a_SNAP, aVout=a2x_a_SUM )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SUM )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SNAP )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_accum( aVin=a2x_a_SNAP, aVout=a2x_a_SUM )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_avg ( a2x_a_SUM, avg_count)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_copy( a2x_a_SUM, a2x_a )
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_zero( a2x_a_SUM) 
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect),    intent(inout) :: x2a_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect),     intent(out) :: a2x_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2a_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: a2x_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2a = mct_aVect_nRattr(x2a_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2a_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_a2x = mct_aVect_nRattr(a2x_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,a2x_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2a_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: a2x_a
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2a = mct_aVect_nRattr(x2a_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2a_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_a2x = mct_aVect_nRattr(a2x_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,a2x_a)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2c_c, c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)    , intent(out) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2c_c, c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)    , intent(out) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/beifen_cam/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/beifen_cam/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
atm/beifen_cam/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
atm/beifen_cam/cam/src/cpl_esmf/atm_comp_mct.F90:      call mct_aVect_zero(x2d)
atm/beifen_cam/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
atm/beifen_cam/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(x2o_o)
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(o2x_o)
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/cam/src/utils/cam_dom/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: o2x_o
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(x2o_o)
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(o2x_o)
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/cam/src/utils/cam_dom/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect), intent(inout) :: o2x_o
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)          , intent(inout) :: x2i_i, i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_zero(x2i_i)
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize)
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    call mct_aVect_zero(i2x_i)
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)             , intent(inout) :: x2i_i
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect)             , intent(inout) :: i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/.svn/text-base/ice_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: x2i_i
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2i_i, i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(x2i_i)
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize)
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(i2x_i)
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2i_i
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: i2x_i
atm/cam/src/utils/cam_csim4/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2i_i
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(x2o_o)
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    call mct_aVect_zero(o2x_o)
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/cam/src/utils/cam_aqua/cpl_mct/.svn/text-base/ocn_comp_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: o2x_o
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect),              intent(inout) :: x2o_o, o2x_o
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(x2o_o)
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(o2x_o)
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: x2o_o
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)     , intent(inout) :: o2x_o
atm/cam/src/utils/cam_aqua/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect), intent(inout) :: o2x_o
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: a2x      ! temporary
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2a      ! temporary
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2c      ! temporary, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: c2x      ! temporary, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: ca2x      ! temporary, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    type(mct_aVect) :: x2ca      ! temporary, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2a, rList=seq_flds_x2a_fields, lsize=1)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(a2x, rList=seq_flds_a2x_fields, lsize=1)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(c2x, rList=seq_flds_c2x_fields, lsize=1)  ! for wrf/cam, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2c, rList=seq_flds_x2c_fields, lsize=1)  ! for wrf/cam, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(ca2x, rList=seq_flds_ca2x_fields, lsize=1)  ! for geatm/cam, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_init(x2ca, rList=seq_flds_x2ca_fields, lsize=1)  ! for geatm/cam, juanxiong he
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_avsdr      = mct_avect_indexra(x2a,'Sx_avsdr')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_anidr      = mct_avect_indexra(x2a,'Sx_anidr')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_avsdf      = mct_avect_indexra(x2a,'Sx_avsdf')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_anidf      = mct_avect_indexra(x2a,'Sx_anidf')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_t          = mct_avect_indexra(x2a,'Sx_t')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_t          = mct_avect_indexra(x2a,'So_t')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_snowh      = mct_avect_indexra(x2a,'Sl_snowh')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Si_snowh      = mct_avect_indexra(x2a,'Si_snowh')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_tref       = mct_avect_indexra(x2a,'Sx_tref')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_qref       = mct_avect_indexra(x2a,'Sx_qref')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_ifrac     = mct_avect_indexra(x2a,'Sa_ifrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_ofrac     = mct_avect_indexra(x2a,'Sa_ofrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Sa_lfrac     = mct_avect_indexra(x2a,'Sa_lfrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_ofrac      = mct_avect_indexra(x2a,'Sx_ofrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_ifrac      = mct_avect_indexra(x2a,'Sx_ifrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sa_lfrac      = mct_avect_indexra(x2a,'Sx_lfrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sx_u10        = mct_avect_indexra(x2a,'Sx_u10')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_taux     = mct_avect_indexra(x2a,'Faxx_taux')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_tauy     = mct_avect_indexra(x2a,'Faxx_tauy')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_lat      = mct_avect_indexra(x2a,'Faxx_lat')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_sen      = mct_avect_indexra(x2a,'Faxx_sen')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_lwup     = mct_avect_indexra(x2a,'Faxx_lwup')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_evap     = mct_avect_indexra(x2a,'Faxx_evap')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_ustar      = mct_avect_indexra(x2a,'So_ustar')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_re         = mct_avect_indexra(x2a,'So_re')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_So_ssq        = mct_avect_indexra(x2a,'So_ssq')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_fv         = mct_avect_indexra(x2a,'Sl_fv')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Sl_ram1       = mct_avect_indexra(x2a,'Sl_ram1')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst1  = mct_avect_indexra(x2a,'Fall_flxdst1')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst2  = mct_avect_indexra(x2a,'Fall_flxdst2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst3  = mct_avect_indexra(x2a,'Fall_flxdst3')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Fall_flxdst4  = mct_avect_indexra(x2a,'Fall_flxdst4')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fco2_lnd = mct_avect_indexra(x2a,'Faxx_fco2_lnd',perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fco2_ocn = mct_avect_indexra(x2a,'Faxx_fco2_ocn',perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    !index_x2a_Faxx_fdms_ocn = mct_avect_indexra(x2a,'Faxx_fdms_ocn',perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_fdms_ocn  = mct_avect_indexra(x2a,'Faxx_fdms'    ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc1  = mct_avect_indexra(x2a,'Fall_flxvoc1' ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc2  = mct_avect_indexra(x2a,'Fall_flxvoc2' ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc3  = mct_avect_indexra(x2a,'Fall_flxvoc3' ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc4  = mct_avect_indexra(x2a,'Fall_flxvoc4' ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2a_Faxx_flxvoc5  = mct_avect_indexra(x2a,'Fall_flxvoc5' ,perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:       index_x2a_Sx_ddvel   = mct_avect_indexra(x2a, trim(drydep_fields_token))
atm/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soildepth(k) = mct_avect_indexra(x2a,'Sx_soildepth'//slayer(k))  ! soil layer  depth
atm/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilthick(k) = mct_avect_indexra(x2a,'Sx_soilthick'//slayer(k))! soil layer  thickness
atm/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilt(k) = mct_avect_indexra(x2a,'Sx_soilt'//slayer(k))! soil layer  temperature
atm/cam/src/cpl_share/cam_cpl_indices.F90:      index_x2a_Sx_soilm(k) = mct_avect_indexra(x2a,'Sx_soilm'//slayer(k))! soil layer  moisture
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dudt(k)     = mct_avect_indexra(x2c,'Fcxx_dudt'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dvdt(k)      = mct_avect_indexra(x2c,'Fcxx_dvdt'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dtdt(k)      = mct_avect_indexra(x2c,'Fcxx_dtdt'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Fcxx_dqdt(k)     = mct_avect_indexra(x2c,'Fcxx_dqdt'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_u3d(k)      = mct_avect_indexra(x2c,'Sx_u3d'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_v3d(k)      = mct_avect_indexra(x2c,'Sx_v3d'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_t3d(k)      = mct_avect_indexra(x2c,'Sx_t3d'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_q3d(k)      = mct_avect_indexra(x2c,'Sx_q3d'//clev(k))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2c_Sx_ps      = mct_avect_indexra(x2c,'Sx_ps')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_z3d(k)          = mct_avect_indexra(c2x,'Sc_z3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_u3d(k)          = mct_avect_indexra(c2x,'Sc_u3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_v3d(k)       = mct_avect_indexra(c2x,'Sc_v3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_t3d(k)         = mct_avect_indexra(c2x,'Sc_t3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_w3d(k)        = mct_avect_indexra(c2x,'Sc_w3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_q3d(k)          = mct_avect_indexra(c2x,'Sc_q3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_p3d(k)          = mct_avect_indexra(c2x,'Sc_p3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_utend(k)          = mct_avect_indexra(c2x,'Fcxc_utend'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_vtend(k)          = mct_avect_indexra(c2x,'Fcxc_vtend'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_ttend(k)          = mct_avect_indexra(c2x,'Fcxc_ttend'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Fcxc_qtend(k)          = mct_avect_indexra(c2x,'Fcxc_qtend'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ps        = mct_avect_indexra(c2x,'Sc_ps')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_phis        = mct_avect_indexra(c2x,'Sc_phis')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_lat        = mct_avect_indexra(c2x,'Sc_lat')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_lon        = mct_avect_indexra(c2x,'Sc_lon')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ts        = mct_avect_indexra(c2x,'Sc_ts')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_sst        = mct_avect_indexra(c2x,'Sc_sst')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_snowhland  = mct_avect_indexra(c2x,'Sc_snowhland')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_snowhice  = mct_avect_indexra(c2x,'Sc_snowhice')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_seaice  = mct_avect_indexra(c2x,'Sc_seaice')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_ocnfrac  = mct_avect_indexra(c2x,'Sc_ocnfrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soildepth(k)   = mct_avect_indexra(c2x,'Sc_soildepth'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilthick(k)   = mct_avect_indexra(c2x,'Sc_soilthick'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilt(k)   = mct_avect_indexra(c2x,'Sc_soilt'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_c2x_Sc_soilm(k)   = mct_avect_indexra(c2x,'Sc_soilm'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_z3d(k)          = mct_avect_indexra(ca2x,'Sca_z3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_u3d(k)          = mct_avect_indexra(ca2x,'Sca_u3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_v3d(k)          = mct_avect_indexra(ca2x,'Sca_v3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_t3d(k)          = mct_avect_indexra(ca2x,'Sca_t3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rh3d(k)          = mct_avect_indexra(ca2x,'Sca_rh3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qv3d(k)          = mct_avect_indexra(ca2x,'Sca_qv3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qi3d(k)          = mct_avect_indexra(ca2x,'Sca_qi3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_qc3d(k)          = mct_avect_indexra(ca2x,'Sca_qc3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_p3d(k)          = mct_avect_indexra(ca2x,'Sca_p3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_taucldi3d(k)          = mct_avect_indexra(ca2x,'Sca_taucldi3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_taucldv3d(k)          = mct_avect_indexra(ca2x,'Sca_taucldv3d'//clev(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ps        = mct_avect_indexra(ca2x,'Sca_ps')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_phis      = mct_avect_indexra(ca2x,'Sca_phis')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_lat       = mct_avect_indexra(ca2x,'Sca_lat')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_lon       = mct_avect_indexra(ca2x,'Sca_lon')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ts        = mct_avect_indexra(ca2x,'Sca_ts')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_sst        = mct_avect_indexra(ca2x,'Sca_sst')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_snowhland  = mct_avect_indexra(ca2x,'Sca_snowhland')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_snowhice  = mct_avect_indexra(ca2x,'Sca_snowhice')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_seaice  = mct_avect_indexra(ca2x,'Sca_seaice')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ocnfrac  = mct_avect_indexra(ca2x,'Sca_ocnfrac')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_t2  = mct_avect_indexra(ca2x,'Sca_t2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_q2  = mct_avect_indexra(ca2x,'Sca_q2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rh2  = mct_avect_indexra(ca2x,'Sca_rh2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_u10  = mct_avect_indexra(ca2x,'Sca_u10')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_v10  = mct_avect_indexra(ca2x,'Sca_v10')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_ust  = mct_avect_indexra(ca2x,'Sca_ust')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rmol  = mct_avect_indexra(ca2x,'Sca_rmol')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_pblh  = mct_avect_indexra(ca2x,'Sca_pblh')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_rainncv  = mct_avect_indexra(ca2x,'Sca_rainncv')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_swdown  = mct_avect_indexra(ca2x,'Sca_swdown')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clflo  = mct_avect_indexra(ca2x,'Sca_clflo')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clfmi  = mct_avect_indexra(ca2x,'Sca_clfmi')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_clfhi  = mct_avect_indexra(ca2x,'Sca_clfhi')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soildepth(k)   = mct_avect_indexra(ca2x,'Sca_soildepth'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilthick(k)   = mct_avect_indexra(ca2x,'Sca_soilthick'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilt(k)   = mct_avect_indexra(ca2x,'Sca_soilt'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_ca2x_Sca_soilm(k)   = mct_avect_indexra(ca2x,'Sca_soilm'//slayer(k) )
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_x2ca_Fcaxx_tracer(k,i)          = mct_avect_indexra(x2ca,'Fcaxx_tracer'//clev(k)//ctracer(i))
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_z          = mct_avect_indexra(a2x,'Sa_z')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_u          = mct_avect_indexra(a2x,'Sa_u')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_v          = mct_avect_indexra(a2x,'Sa_v')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_tbot       = mct_avect_indexra(a2x,'Sa_tbot')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_ptem       = mct_avect_indexra(a2x,'Sa_ptem')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_pbot       = mct_avect_indexra(a2x,'Sa_pbot')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_pslv       = mct_avect_indexra(a2x,'Sa_pslv')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_shum       = mct_avect_indexra(a2x,'Sa_shum')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_dens       = mct_avect_indexra(a2x,'Sa_dens')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swnet    = mct_avect_indexra(a2x,'Faxa_swnet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_lwdn     = mct_avect_indexra(a2x,'Faxa_lwdn')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_rainc    = mct_avect_indexra(a2x,'Faxa_rainc')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_rainl    = mct_avect_indexra(a2x,'Faxa_rainl')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_snowc    = mct_avect_indexra(a2x,'Faxa_snowc')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_snowl    = mct_avect_indexra(a2x,'Faxa_snowl')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swndr    = mct_avect_indexra(a2x,'Faxa_swndr')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swvdr    = mct_avect_indexra(a2x,'Faxa_swvdr')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swndf    = mct_avect_indexra(a2x,'Faxa_swndf')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_swvdf    = mct_avect_indexra(a2x,'Faxa_swvdf')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphidry = mct_avect_indexra(a2x,'Faxa_bcphidry')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphodry = mct_avect_indexra(a2x,'Faxa_bcphodry')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_bcphiwet = mct_avect_indexra(a2x,'Faxa_bcphiwet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphidry = mct_avect_indexra(a2x,'Faxa_ocphidry')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphodry = mct_avect_indexra(a2x,'Faxa_ocphodry')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_ocphiwet = mct_avect_indexra(a2x,'Faxa_ocphiwet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry1  = mct_avect_indexra(a2x,'Faxa_dstdry1')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry2  = mct_avect_indexra(a2x,'Faxa_dstdry2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry3  = mct_avect_indexra(a2x,'Faxa_dstdry3')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstdry4  = mct_avect_indexra(a2x,'Faxa_dstdry4')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet1  = mct_avect_indexra(a2x,'Faxa_dstwet1')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet2  = mct_avect_indexra(a2x,'Faxa_dstwet2')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet3  = mct_avect_indexra(a2x,'Faxa_dstwet3')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Faxa_dstwet4  = mct_avect_indexra(a2x,'Faxa_dstwet4')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_co2prog    = mct_avect_indexra(a2x,'Sa_co2prog',perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    index_a2x_Sa_co2diag    = mct_avect_indexra(a2x,'Sa_co2diag',perrWith='quiet')
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2a)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(a2x)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(c2x)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2c)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(ca2x)
atm/cam/src/cpl_share/cam_cpl_indices.F90:    call mct_aVect_clean(x2ca)
atm/cam/src/cpl_mct/atm_comp_mct.F90:  type(mct_aVect)   :: a2x_a_SNAP
atm/cam/src/cpl_mct/atm_comp_mct.F90:  type(mct_aVect)   :: a2x_a_SUM
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2a_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: a2x_a   
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2c_c1 !juanxiong he, for wrf/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2c_c2 !juanxiong he, for wrf/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: c2x_c1 !juanxiong he, for wrf/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: c2x_c2 !juanxiong he, for wrf/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca1 !juanxiong he, for geatm/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca2 !juanxiong he, for geatm/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca1 !juanxiong he, for geatm/cam
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca2 !juanxiong he, for geatm/cam 
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a, rList=seq_flds_a2x_fields, lsize=lsize)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2a_a, rList=seq_flds_x2a_fields, lsize=lsize) 
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2a_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a_SNAP, rList=a2x_avg_flds, lsize=lsize)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a_SNAP)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(a2x_a_SUM , rList=a2x_avg_flds, lsize=lsize)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(a2x_a_SUM )
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(c2x_c1, rList=seq_flds_c2x_fields, lsize=lsize) !juaxniong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(c2x_c1) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(c2x_c2, rList=seq_flds_c2x_fields, lsize=lsize) !juaxniong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(c2x_c2) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2c_c1, rList=seq_flds_x2c_fields, lsize=lsize) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2c_c1) !juanxiong he      
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2c_c2, rList=seq_flds_x2c_fields, lsize=lsize) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2c_c2) !juanxiong he   
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(ca2x_caca1, rList=seq_flds_ca2x_fields, lsize=lsize) !juaxniong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(ca2x_caca1) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(ca2x_caca2, rList=seq_flds_ca2x_fields, lsize=lsize) !juaxniong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(ca2x_caca2) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2ca_caca1, rList=seq_flds_x2ca_fields, lsize=lsize) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2ca_caca1) !juanxiong he      
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_init(x2ca_caca2, rList=seq_flds_x2ca_fields, lsize=lsize) !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_zero(x2ca_caca2) !juanxiong he   
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2a_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: a2x_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2c_c1  !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2c_c2  !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: c2x_c1  !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: c2x_c2  !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca1 !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: x2ca_caca2 !juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca1 !juanxiong he  
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout)              :: ca2x_caca2 !juanxiong he     
atm/cam/src/cpl_mct/atm_comp_mct.F90:         call mct_aVect_copy( c2x_c1, c2x_c2 ) ! juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:         call mct_aVect_copy( c2x_c2, c2x_c1 ) ! juanxiong he
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SUM )
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SNAP )
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_accum( aVin=a2x_a_SNAP, aVout=a2x_a_SUM )
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SUM )
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_copy( a2x_a, a2x_a_SNAP )
atm/cam/src/cpl_mct/atm_comp_mct.F90:          call mct_aVect_accum( aVin=a2x_a_SNAP, aVout=a2x_a_SUM )
atm/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_avg ( a2x_a_SUM, avg_count)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_copy( a2x_a_SUM, a2x_a )
atm/cam/src/cpl_mct/atm_comp_mct.F90:    call mct_aVect_zero( a2x_a_SUM) 
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect),    intent(inout) :: x2a_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect),     intent(out) :: a2x_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2a_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: a2x_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2a = mct_aVect_nRattr(x2a_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2a_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_a2x = mct_aVect_nRattr(a2x_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,a2x_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2a_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: a2x_a
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2a = mct_aVect_nRattr(x2a_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2a_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_a2x = mct_aVect_nRattr(a2x_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,a2x_a)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2c_c, c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)    , intent(out) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2c_c, c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)    , intent(out) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(inout) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: x2c_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect), intent(in) :: c2x_c
atm/cam/src/cpl_mct/atm_comp_mct.F90:    type(mct_aVect) :: gData        ! global/gathered bundle data
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_x2c = mct_aVect_nRattr(x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,x2c_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:    nf_c2x = mct_aVect_nRattr(c2x_c)
atm/cam/src/cpl_mct/atm_comp_mct.F90:       call mct_aVect_getRList(mstring,k,c2x_c)
atm/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
atm/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
atm/cam/src/cpl_esmf/atm_comp_mct.F90:      call mct_aVect_zero(x2d)
atm/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
atm/cam/src/cpl_esmf/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
atm/xatm/cpl_mct/atm_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
atm/xatm/cpl_mct/atm_comp_mct.F90:    call mct_aVect_init(d2x, rList=flds_d2x, lsize=lsize)
atm/xatm/cpl_mct/atm_comp_mct.F90:    call mct_aVect_zero(d2x)
atm/xatm/cpl_mct/atm_comp_mct.F90:    call mct_aVect_init(x2d, rList=flds_x2d, lsize=lsize)
atm/xatm/cpl_mct/atm_comp_mct.F90:    call mct_aVect_zero(x2d)
atm/xatm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
atm/xatm/cpl_mct/atm_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
atm/xatm/cpl_mct/atm_comp_mct.F90:    lsize = mct_avect_lsize(x2d)
atm/xatm/cpl_mct/atm_comp_mct.F90:    nflds_d2x = mct_avect_nRattr(d2x)
atm/xatm/cpl_mct/atm_comp_mct.F90:    nflds_x2d = mct_avect_nRattr(x2d)
atm/xatm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
atm/xatm/cpl_esmf/atm_comp_mct.F90:    call mct_aVect_zero(x2d)
atm/xatm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
atm/xatm/cpl_esmf/atm_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c1
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c2
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: c2x_c   
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c1)
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c2)
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_init(c2x_c, rList=seq_flds_ge2x_fields, lsize=lsize)
chem/geatm/src.datamodel/geatm_comp_mct.f90:        call mct_aVect_zero(c2x_c)     
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c1   ! cam -> cpl -> geatm  
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c2   ! cam -> cpl -> geatm
chem/geatm/src.datamodel/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: c2x_c   ! geatm -> cpl -> cam
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c1
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c2
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: c2x_c   
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c1)
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c2)
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_init(c2x_c, rList=seq_flds_ge2x_fields, lsize=lsize)
chem/geatm/src.version1/geatm_comp_mct.f90:        call mct_aVect_zero(c2x_c)     
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c1   ! cam -> cpl -> geatm  
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c2   ! cam -> cpl -> geatm
chem/geatm/src.version1/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: c2x_c   ! geatm -> cpl -> cam
chem/geatm/src.version1/geatm_comp_mct.f90:     type(mct_aVect)   , intent(inout) :: x2c_c
chem/geatm/src.version1/geatm_comp_mct.f90:     type(mct_aVect)   , intent(inout) :: x2ge_ge
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c1
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: x2c_c2
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect), intent(inout)              :: c2x_c   
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c1, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c1)
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_init(x2c_c2, rList=seq_flds_x2ge_fields, lsize=lsize) 
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_zero(x2c_c2)
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_init(c2x_c, rList=seq_flds_ge2x_fields, lsize=lsize)
chem/geatm/src/geatm_comp_mct.f90:        call mct_aVect_zero(c2x_c)     
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c1   ! cam -> cpl -> geatm  
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: x2c_c2   ! cam -> cpl -> geatm
chem/geatm/src/geatm_comp_mct.f90:    type(mct_aVect)             ,intent(inout) :: c2x_c   ! geatm -> cpl -> cam
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avs(nStrMax)
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avRLB(nStrMax)
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avRUB(nStrMax)
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avFUB(nStrMax)
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avFLB(nStrMax)
csm_share/shr/shr_strdata_mod.F90:    type(mct_avect) :: avCoszen(nStrMax)    ! data assocaited with coszen time interp
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_copy(ggrid%data, SDAT%grid%data)
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_init(SDAT%avs(n)  ,rlist=fldList,lsize=SDAT%lsize)
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_init(SDAT%avFLB(n),rlist=fldList,lsize=SDAT%lsize)
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_init(SDAT%avFUB(n),rlist=fldList,lsize=SDAT%lsize)
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_init(SDAT%avRLB(n),rlist=fldList,lsize=SDAT%lsizeR(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_aVect_init(SDAT%avRUB(n),rlist=fldList,lsize=SDAT%lsizeR(n))
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_init(SDAT%avCoszen(n),rlist="tavCosz",lsize=SDAT%lsize)
csm_share/shr/shr_strdata_mod.F90:        k = mct_aVect_indexRA(SDAT%avRLB(n),trim(uname),perrWith='quiet')
csm_share/shr/shr_strdata_mod.F90:        k = mct_aVect_indexRA(SDAT%avRLB(n),trim(vname),perrWith='quiet')
csm_share/shr/shr_strdata_mod.F90:  type(mct_avect) :: avRtmp
csm_share/shr/shr_strdata_mod.F90:  type(mct_avect) :: avRV,avFV
csm_share/shr/shr_strdata_mod.F90:           lsize = mct_aVect_lsize(SDAT%avRLB(n))
csm_share/shr/shr_strdata_mod.F90:           call mct_aVect_init(avRtmp,SDAT%avRLB(n),lsize)
csm_share/shr/shr_strdata_mod.F90:           call mct_aVect_copy(SDAT%avRLB(n),avRtmp)
csm_share/shr/shr_strdata_mod.F90:           call mct_aVect_copy(SDAT%avRUB(n),avRtmp)
csm_share/shr/shr_strdata_mod.F90:           call mct_aVect_clean(avRtmp)
csm_share/shr/shr_strdata_mod.F90:        lsizeR = mct_aVect_lsize(SDAT%avRLB(nu))
csm_share/shr/shr_strdata_mod.F90:        lsizeF = mct_aVect_lsize(SDAT%avFLB(nu))
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_init(avRV,rlist=SDAT%vectors(m),lsize=lsizeR)
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_init(avFV,rlist=SDAT%vectors(m),lsize=lsizeF)
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_exportRattr(SDAT%gridR(nu)%data,'lon',xlon)
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_exportRattr(SDAT%grid  %data,'lon',ylon)
csm_share/shr/shr_strdata_mod.F90:        uvar = mct_aVect_indexRA(SDAT%avRLB(nu),trim(uname))
csm_share/shr/shr_strdata_mod.F90:        vvar = mct_aVect_indexRA(SDAT%avRLB(nv),trim(vname))
csm_share/shr/shr_strdata_mod.F90:!       uvar = mct_aVect_indexRA(SDAT%avFLB(nu),trim(uname))
csm_share/shr/shr_strdata_mod.F90:!       vvar = mct_aVect_indexRA(SDAT%avFLB(nv),trim(vname))
csm_share/shr/shr_strdata_mod.F90:        uvar = mct_aVect_indexRA(SDAT%avRUB(nu),trim(uname))
csm_share/shr/shr_strdata_mod.F90:        vvar = mct_aVect_indexRA(SDAT%avRUB(nv),trim(vname))
csm_share/shr/shr_strdata_mod.F90:!       uvar = mct_aVect_indexRA(SDAT%avFUB(nu),trim(uname))
csm_share/shr/shr_strdata_mod.F90:!       vvar = mct_aVect_indexRA(SDAT%avFUB(nv),trim(vname))
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_clean(avRV)
csm_share/shr/shr_strdata_mod.F90:        call mct_aVect_clean(avFV)
csm_share/shr/shr_strdata_mod.F90:        lsizeF = mct_aVect_lsize(SDAT%avFLB(n))
csm_share/shr/shr_strdata_mod.F90:        kf = mct_aVect_indexRA(SDAT%grid%data,'lat')
csm_share/shr/shr_strdata_mod.F90:        kf = mct_aVect_indexRA(SDAT%grid%data,'lon')
csm_share/shr/shr_strdata_mod.F90:           call mct_avect_importRAttr(SDAT%avCoszen(n),'tavCosz',tavCosz,lsizeF)
csm_share/shr/shr_strdata_mod.F90:           call mct_avect_exportRAttr(SDAT%avCoszen(n),'tavCosz',tavCosz)
csm_share/shr/shr_strdata_mod.F90:        call mct_avect_zero(SDAT%avs(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_avect_clean(SDAT%avs(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_avect_clean(SDAT%avRLB(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_avect_clean(SDAT%avRUB(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_avect_clean(SDAT%avFLB(n))
csm_share/shr/shr_strdata_mod.F90:     call mct_avect_clean(SDAT%avFUB(n))
csm_share/shr/shr_scam_mod.F90:      nfrac = mct_aVect_indexRA(SCAMSDAT%grid%data,'frac')
csm_share/shr/shr_dmodel_mod.F90:     nlon  = mct_aVect_indexRA(gGridRoot%data,'lon')
csm_share/shr/shr_dmodel_mod.F90:     nlat  = mct_aVect_indexRA(gGridRoot%data,'lat')
csm_share/shr/shr_dmodel_mod.F90:     narea = mct_aVect_indexRA(gGridRoot%data,'area')
csm_share/shr/shr_dmodel_mod.F90:     nmask = mct_aVect_indexRA(gGridRoot%data,'mask')
csm_share/shr/shr_dmodel_mod.F90:     nfrac = mct_aVect_indexRA(gGridRoot%data,'frac')
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect)            ,intent(inout) :: avLB
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect)            ,intent(inout) :: avUB
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect) ,intent(inout) :: av  
csm_share/shr/shr_dmodel_mod.F90:  type(mct_avect) :: avG
csm_share/shr/shr_dmodel_mod.F90:  type(mct_avect) :: avtmp
csm_share/shr/shr_dmodel_mod.F90:        call mct_aVect_init(avG,av,gsize)
csm_share/shr/shr_dmodel_mod.F90:        do k = 1,mct_aVect_nRAttr(av)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_scatter(avG,avtmp,gsMap,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_copy(avtmp,av)
csm_share/shr/shr_dmodel_mod.F90:     if (my_task == master_task) call mct_aVect_clean(avG)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_clean(avtmp)
csm_share/shr/shr_dmodel_mod.F90:     do k = 1,mct_aVect_nRAttr(av)
csm_share/shr/shr_dmodel_mod.F90:   type(mct_aVect) :: avG1     ! global av
csm_share/shr/shr_dmodel_mod.F90:   type(mct_aVect) :: avG2     ! global av
csm_share/shr/shr_dmodel_mod.F90:   call mct_aVect_gather(gGrid1%data,avG1,gsmap1,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:   call mct_aVect_gather(gGrid2%data,avG2,gsmap2,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:      gsize = mct_aVect_lsize(avG1)
csm_share/shr/shr_dmodel_mod.F90:      if (gsize /= mct_aVect_lsize(avG2)) then
csm_share/shr/shr_dmodel_mod.F90:         nlon1 = mct_aVect_indexRA(avG1,'lon')
csm_share/shr/shr_dmodel_mod.F90:         nlat1 = mct_aVect_indexRA(avG1,'lat')
csm_share/shr/shr_dmodel_mod.F90:         nlon2 = mct_aVect_indexRA(avG2,'lon')
csm_share/shr/shr_dmodel_mod.F90:         nlat2 = mct_aVect_indexRA(avG2,'lat')
csm_share/shr/shr_dmodel_mod.F90:         nmask1 = mct_aVect_indexRA(avG1,'mask')
csm_share/shr/shr_dmodel_mod.F90:         nmask2 = mct_aVect_indexRA(avG2,'mask')
csm_share/shr/shr_dmodel_mod.F90:   if (my_task == master_task) call mct_avect_clean(avG1)
csm_share/shr/shr_dmodel_mod.F90:   if (my_task == master_task) call mct_avect_clean(avG2)
csm_share/shr/shr_dmodel_mod.F90:    type(mct_aVect) :: AVl
csm_share/shr/shr_dmodel_mod.F90:    type(mct_aVect) :: AVg
csm_share/shr/shr_dmodel_mod.F90:    lsizeS = mct_aVect_lsize(ggridS%data)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_init(AVl,rList='lon:lat:mask',lsize=lsizeS)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_copy(ggridS%data,AVl,rList='lon:lat:mask')
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_gather(AVl,AVg,gsmapS,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:       gsizeS = mct_aVect_lsize(AVg)
csm_share/shr/shr_dmodel_mod.F90:       nlon = mct_avect_indexRA(AVg,'lon')
csm_share/shr/shr_dmodel_mod.F90:       nlat = mct_avect_indexRA(AVg,'lat')
csm_share/shr/shr_dmodel_mod.F90:       nmsk = mct_avect_indexRA(AVg,'mask')
csm_share/shr/shr_dmodel_mod.F90:    if (my_task == master_task) call mct_aVect_clean(AVg)
csm_share/shr/shr_dmodel_mod.F90:    call mct_aVect_clean(AVl)
csm_share/shr/shr_dmodel_mod.F90:    lsizeD = mct_aVect_lsize(ggridD%data)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_init(AVl,rList='lon:lat:mask',lsize=lsizeD)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_copy(ggridD%data,AVl,rList='lon:lat:mask')
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_gather(AVl,AVg,gsmapD,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:       gsizeD = mct_aVect_lsize(AVg)
csm_share/shr/shr_dmodel_mod.F90:       nlon = mct_avect_indexRA(AVg,'lon')
csm_share/shr/shr_dmodel_mod.F90:       nlat = mct_avect_indexRA(AVg,'lat')
csm_share/shr/shr_dmodel_mod.F90:       nmsk = mct_avect_indexRA(AVg,'mask')
csm_share/shr/shr_dmodel_mod.F90:    if (my_task == master_task) call mct_aVect_clean(AVg)
csm_share/shr/shr_dmodel_mod.F90:    call mct_aVect_clean(AVl)
csm_share/shr/shr_dmodel_mod.F90:    type(mct_aVect) :: AVl
csm_share/shr/shr_dmodel_mod.F90:    type(mct_aVect) :: AVg
csm_share/shr/shr_dmodel_mod.F90:    lsizeS = mct_aVect_lsize(ggridS%data)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_init(AVl,rList='lon:lat:mask',lsize=lsizeS)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_copy(ggridS%data,AVl,rList='lon:lat:mask')
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_gather(AVl,AVg,gsmapS,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:       gsizeS = mct_aVect_lsize(AVg)
csm_share/shr/shr_dmodel_mod.F90:       nlon = mct_avect_indexRA(AVg,'lon')
csm_share/shr/shr_dmodel_mod.F90:       nlat = mct_avect_indexRA(AVg,'lat')
csm_share/shr/shr_dmodel_mod.F90:       nmsk = mct_avect_indexRA(AVg,'mask')
csm_share/shr/shr_dmodel_mod.F90:    if (my_task == master_task) call mct_aVect_clean(AVg)
csm_share/shr/shr_dmodel_mod.F90:    call mct_aVect_clean(AVl)
csm_share/shr/shr_dmodel_mod.F90:    lsizeD = mct_aVect_lsize(ggridD%data)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_init(AVl,rList='lon:lat:mask',lsize=lsizeD)
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_copy(ggridD%data,AVl,rList='lon:lat:mask')
csm_share/shr/shr_dmodel_mod.F90:    call mct_avect_gather(AVl,AVg,gsmapD,master_task,mpicom)
csm_share/shr/shr_dmodel_mod.F90:       gsizeD = mct_aVect_lsize(AVg)
csm_share/shr/shr_dmodel_mod.F90:       nlon = mct_avect_indexRA(AVg,'lon')
csm_share/shr/shr_dmodel_mod.F90:       nlat = mct_avect_indexRA(AVg,'lat')
csm_share/shr/shr_dmodel_mod.F90:       nmsk = mct_avect_indexRA(AVg,'mask')
csm_share/shr/shr_dmodel_mod.F90:    if (my_task == master_task) call mct_aVect_clean(AVg)
csm_share/shr/shr_dmodel_mod.F90:    nlon = mct_avect_indexRA(AVl,'lon')
csm_share/shr/shr_dmodel_mod.F90:    nlat = mct_avect_indexRA(AVl,'lat')
csm_share/shr/shr_dmodel_mod.F90:    nmsk = mct_avect_indexRA(AVl,'mask')
csm_share/shr/shr_dmodel_mod.F90:    call mct_aVect_clean(AVl)
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(in)    :: avi       ! input av
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(inout) :: avo       ! output av
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect)  :: avtri,avtro ! translated av on input/output grid
csm_share/shr/shr_dmodel_mod.F90:  nflds = mct_aVect_nRattr(avi)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_getRList(sfld,ka,avi)
csm_share/shr/shr_dmodel_mod.F90:           kc = mct_aVect_indexRA(avo,trim(avofld(kb)),perrWith='quiet')
csm_share/shr/shr_dmodel_mod.F90:     lsize = mct_avect_lsize(avi)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_init(avtri,rlist=olist,lsize=lsize)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_Copy(avi,avtri,rList=ilist,TrList=olist)
csm_share/shr/shr_dmodel_mod.F90:        lsize = mct_avect_lsize(avo)
csm_share/shr/shr_dmodel_mod.F90:        call mct_avect_init(avtro,rlist=olist,lsize=lsize)
csm_share/shr/shr_dmodel_mod.F90:        call mct_avect_zero(avtro)
csm_share/shr/shr_dmodel_mod.F90:        call mct_avect_Copy(avtro,avo)
csm_share/shr/shr_dmodel_mod.F90:        call mct_aVect_clean(avtro)
csm_share/shr/shr_dmodel_mod.F90:        call mct_avect_Copy(avtri,avo)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_clean(avtri)
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(in)    :: avi       ! input av
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(inout) :: avo       ! output av
csm_share/shr/shr_dmodel_mod.F90:  nflds = mct_aVect_nRattr(avi)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_getRList(sfld,ka,avi)
csm_share/shr/shr_dmodel_mod.F90:           kc = mct_aVect_indexRA(avo,trim(avofld(kb)),perrWith='quiet')
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(in)    :: avi       ! input av
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect), intent(inout) :: avo       ! output av
csm_share/shr/shr_dmodel_mod.F90:  type(mct_aVect)  :: avtri,avtro ! translated av on input/output grid
csm_share/shr/shr_dmodel_mod.F90:  lsize = mct_avect_lsize(avi)
csm_share/shr/shr_dmodel_mod.F90:  call mct_avect_init(avtri,rlist=olist,lsize=lsize)
csm_share/shr/shr_dmodel_mod.F90:  call mct_avect_Copy(avi,avtri,rList=ilist,TrList=olist)
csm_share/shr/shr_dmodel_mod.F90:     lsize = mct_avect_lsize(avo)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_init(avtro,rlist=olist,lsize=lsize)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_zero(avtro)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_Copy(avtro,avo)
csm_share/shr/shr_dmodel_mod.F90:     call mct_aVect_clean(avtro)
csm_share/shr/shr_dmodel_mod.F90:     call mct_avect_Copy(avtri,avo)
csm_share/shr/shr_dmodel_mod.F90:  call mct_aVect_clean(avtri)
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect),intent(out), optional :: areasrc         ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect),intent(out), optional :: areadst         ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) :: areasrc_map ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) :: areadst_map ! area of dst grid from mapping file
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_init(areasrc_map, rList=areaAV_field, lsize=lsize)
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_init(areadst_map, rList=areaAV_field, lsize=lsize)
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_copy(aVin=areasrc_map, aVout=areasrc, vector=usevector)
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_copy(aVin=areadst_map, aVout=areadst, vector=usevector)
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_clean(areasrc_map)
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_clean(areadst_map)
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) ,intent(out), optional :: areasrc ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) ,intent(out), optional :: areadst ! area of dst grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) :: areasrc0   ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:   type(mct_Avect) :: areadst0   ! area of src grid from mapping file
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_init(areasrc0,' ',areaAV_field,na)
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_scatter(areasrc0, areasrc, SgsMap, 0, mpicom, rcode)
csm_share/shr/shr_mct_mod.F90:!            write(6,*) subName,'Size of src ',mct_aVect_lSize(areasrc0)
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_clean(areasrc0)
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_init(areadst0,' ',areaAV_field,nb)
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_scatter(areadst0, areadst, DgsMap, 0, mpicom, rcode)
csm_share/shr/shr_mct_mod.F90:!            write(6,*) subName,'Size of dst ',mct_aVect_lSize(areadst0)
csm_share/shr/shr_mct_mod.F90:      call mct_aVect_clean(areadst0)
csm_share/shr/shr_mct_mod.F90:   type(mct_avect) :: AV
csm_share/shr/shr_mct_mod.F90:   call mct_aVect_init(AV,iList='row:col',rList='S',lsize=lsize)
csm_share/shr/shr_mct_mod.F90:   call mct_avect_clean(AV)
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect              => AttrVect
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_init         => init
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_clean        => clean
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_zero         => zero
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_lsize        => lsize
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_indexIA      => indexIA
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_indexRA      => indexRA
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_importRattr  => importRattr
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_exportRattr  => exportRattr
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_getIList     => getIList
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_getRList     => getRList
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_exportIList2c=> exportIListToChar
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_exportRList2c=> exportRListToChar
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_nIAttr       => nIAttr
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_nRAttr       => nRAttr
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_copy         => Copy
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_permute      => Permute
csm_share/shr/mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_unpermute    => Unpermute
csm_share/shr/mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_scatter      => scatter
csm_share/shr/mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_gather       => gather 
csm_share/shr/mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_bcast        => bcast  
csm_share/shr/mct_mod.F90:   public :: mct_aVect_info
csm_share/shr/mct_mod.F90:   public :: mct_aVect_fldIndex
csm_share/shr/mct_mod.F90:   public :: mct_aVect_getRAttr
csm_share/shr/mct_mod.F90:   public :: mct_aVect_putRAttr
csm_share/shr/mct_mod.F90:   public :: mct_aVect_accum
csm_share/shr/mct_mod.F90:   public :: mct_avect_mult
csm_share/shr/mct_mod.F90:   public :: mct_avect_vecmult
csm_share/shr/mct_mod.F90:   public :: mct_aVect_avg
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_info - print out aVect info for debugging
csm_share/shr/mct_mod.F90:subroutine mct_aVect_info(flag,aVect,comm,pe,fld,istr)
csm_share/shr/mct_mod.F90:   type(mct_aVect),intent(in)           :: aVect ! Attribute vector
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = '(mct_aVect_info) '
csm_share/shr/mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_info) ',8a)"
csm_share/shr/mct_mod.F90:   character(*),parameter :: F01 = "('(mct_aVect_info) ',a,i9)"
csm_share/shr/mct_mod.F90:   character(*),parameter :: F02 = "('(mct_aVect_info) ',240a)"
csm_share/shr/mct_mod.F90:   character(*),parameter :: F03 = "('(mct_aVect_info) ',a,2es11.3,i4,2x,a)"
csm_share/shr/mct_mod.F90:   nsize = mct_aVect_lsize(aVect)
csm_share/shr/mct_mod.F90:     ks = mct_aVect_indexRA(aVect,fld,perrWith=subName)
csm_share/shr/mct_mod.F90:     nflds = mct_aVect_nRAttr(aVect)
csm_share/shr/mct_mod.F90:       call mct_aVect_getRList(item,k,aVect)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_info
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_fldIndex - get a real fld index from an AVect
csm_share/shr/mct_mod.F90:!     This is like mct_aVect_indexRA but with a calling interface
csm_share/shr/mct_mod.F90:integer function mct_aVect_fldIndex(aVect,fld)
csm_share/shr/mct_mod.F90:   type(mct_aVect),intent(in)  :: aVect    ! an Attribute vector
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = "(mct_aVect_fldIndex) "
csm_share/shr/mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_fldIndex) ',8a)"
csm_share/shr/mct_mod.F90:   mct_aVect_fldIndex = mct_aVect_indexRA(aVect,trim(fld),perrWith='quiet')
csm_share/shr/mct_mod.F90:end function mct_aVect_fldIndex
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_getRAttr - get real F90 array data out of an aVect
csm_share/shr/mct_mod.F90:subroutine mct_aVect_getRAttr(aVect,str,data,rcode)
csm_share/shr/mct_mod.F90:   type(mct_aVect),intent(in)  :: aVect    ! an Attribute vector
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = "(mct_aVect_getRAttr) "
csm_share/shr/mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_getRAttr) ',8a)"
csm_share/shr/mct_mod.F90:   n = mct_aVect_lsize(aVect)
csm_share/shr/mct_mod.F90:   k = mct_aVect_indexRA(aVect,trim(str) ,perrWith=subName)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_getRAttr
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_putRAttr - put real F90 array data into an aVect
csm_share/shr/mct_mod.F90:subroutine mct_aVect_putRAttr(aVect,str,data,rcode)
csm_share/shr/mct_mod.F90:   type(mct_aVect),intent(out) :: aVect ! Attribute vector
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = "(mct_aVect_putRAttr) "
csm_share/shr/mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_putRAttr) ',8a)"
csm_share/shr/mct_mod.F90:   n = mct_aVect_lsize(aVect)
csm_share/shr/mct_mod.F90:   k = mct_aVect_indexRA(aVect,trim(str) ,perrWith=subName)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_putRAttr
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_accum - accumulate attributes from one aVect to another
csm_share/shr/mct_mod.F90:subroutine mct_aVect_accum(aVin, rList, TrList, iList, TiList, aVout)
csm_share/shr/mct_mod.F90:            inx=mct_aVect_indexRA(aVin,String_toChar(attr),dieWith=myname_//'real aVin')
csm_share/shr/mct_mod.F90:            outx=mct_aVect_indexRA(aVout,String_toChar(attr2),dieWith=myname_//'real aVout')
csm_share/shr/mct_mod.F90:           inx =mct_aVect_indexIA(aVin ,String_toChar(attr) ,dieWith=myname_//'int aVin')
csm_share/shr/mct_mod.F90:           outx=mct_aVect_indexIA(aVout,String_toChar(attr2),dieWith=myname_//'int aVout')
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_accum
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_avect_mult - multiply an attribute vector by a field.
csm_share/shr/mct_mod.F90:subroutine mct_avect_mult(av,av1,fld1,avlist)
csm_share/shr/mct_mod.F90:   type(mct_aVect)      ,intent(inout) :: av       ! attribute vector output
csm_share/shr/mct_mod.F90:   type(mct_aVect)      ,intent(in)    :: av1      ! attribute vector input
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = '(mct_aVect_mult) '
csm_share/shr/mct_mod.F90:   nptsx = mct_aVect_lsize(av1)
csm_share/shr/mct_mod.F90:   npts  = mct_aVect_lsize(av)
csm_share/shr/mct_mod.F90:   kfld  = mct_aVect_indexRA(av1,fld1,perrWith=subName)
csm_share/shr/mct_mod.F90:       kfldin(m) = mct_aVect_indexRA(av,mct_string_toChar(tattr))
csm_share/shr/mct_mod.F90:     nfld  = mct_aVect_nRAttr(av)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_mult
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_avect_vecmult - multiply an attribute vector by a field.
csm_share/shr/mct_mod.F90:subroutine mct_avect_vecmult(av,vec,avlist)
csm_share/shr/mct_mod.F90:   type(mct_aVect)      ,intent(inout) :: av       ! attribute vector output
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = '(mct_aVect_vecmult) '
csm_share/shr/mct_mod.F90:   npts  = mct_aVect_lsize(av)
csm_share/shr/mct_mod.F90:       kfldin(m) = mct_aVect_indexRA(av,mct_string_toChar(tattr))
csm_share/shr/mct_mod.F90:     nfld  = mct_aVect_nRAttr(av)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_vecmult
csm_share/shr/mct_mod.F90:! !IROUTINE: mct_aVect_avg - averages an accumulated attribute vector
csm_share/shr/mct_mod.F90:subroutine mct_aVect_avg(aVect, counter)
csm_share/shr/mct_mod.F90:   type(mct_aVect),intent(inout) :: aVect   ! bundle to read
csm_share/shr/mct_mod.F90:   character(*),parameter :: subName = '(mct_aVect_avg) '
csm_share/shr/mct_mod.F90:   nflds = mct_aVect_nRAttr(aVect)
csm_share/shr/mct_mod.F90:   npts  = mct_aVect_lsize (aVect)
csm_share/shr/mct_mod.F90:end subroutine mct_aVect_avg
csm_share/shr/mct_mod.F90:   type(mct_aVect) , intent(in)  :: avi
csm_share/shr/mct_mod.F90:   type(mct_aVect) , intent(out) :: avo
csm_share/shr/mct_mod.F90:   type(mct_aVect) :: avi_fl
csm_share/shr/mct_mod.F90:   type(mct_aVect) :: avo_fl
csm_share/shr/mct_mod.F90:   lsize = mct_aVect_lsize(avi)
csm_share/shr/mct_mod.F90:   call mct_aVect_init (avi_fl, rlist=fldlist, lsize=lsize)
csm_share/shr/mct_mod.F90:   call mct_aVect_zero (avi_fl)
csm_share/shr/mct_mod.F90:   lsize = mct_aVect_lsize(avo)
csm_share/shr/mct_mod.F90:   call mct_aVect_init (avo_fl, rlist=fldlist, lsize=lsize)
csm_share/shr/mct_mod.F90:   call mct_aVect_zero (avo_fl)
csm_share/shr/mct_mod.F90:   call mct_aVect_copy (aVin=avi, aVout=avi_fl)
csm_share/shr/mct_mod.F90:   call mct_aVect_copy (aVin=avo_fl, aVout=avo, vector=vector)
csm_share/shr/mct_mod.F90:   call mct_aVect_clean(avi_fl)
csm_share/shr/mct_mod.F90:   call mct_aVect_clean(avo_fl)
csm_share/shr/shr_pcdf_mod.F90:  type(mct_aVect)  , optional, intent(inout) :: av1      ! avect 1
csm_share/shr/shr_pcdf_mod.F90:  type(mct_aVect)  , optional, intent(inout) :: av2      ! avect 2
csm_share/shr/shr_pcdf_mod.F90:  type(mct_aVect)  , optional, intent(inout) :: av3      ! avect 3
csm_share/shr/shr_pcdf_mod.F90:  type(mct_aVect)  , optional, intent(inout) :: av4      ! avect 4
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nRattr(av1)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getRList(mstring,n,av1)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nIattr(av1)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getIList(mstring,n,av1)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nRattr(av2)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getRList(mstring,n,av2)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nIattr(av2)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getIList(mstring,n,av2)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nRattr(av3)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getRList(mstring,n,av3)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nIattr(av3)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getIList(mstring,n,av3)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nRattr(av4)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getRList(mstring,n,av4)
csm_share/shr/shr_pcdf_mod.F90:        nf = mct_aVect_nIattr(av4)
csm_share/shr/shr_pcdf_mod.F90:           call mct_aVect_getIList(mstring,n,av4)
dead_share/dead_mct_mod.F90:    call mct_aVect_zero(domain%data)
dead_share/dead_mct_mod.F90:    call mct_aVect_zero(domain%data)
drv/ChangeLog:         !BUG    iList = mct_aVect_ExportIList2c(AVin)
drv/ChangeLog:          call mct_aVect_copy(aVin=a2x_o, aVout=x2o_o, vector=usevector)
drv/ChangeLog:          call mct_aVect_copy(aVin=i2x_o, aVout=x2o_o, vector=usevector)
drv/ChangeLog:          call mct_aVect_copy(aVin=xao_o, aVout=x2o_o, vector=usevector)
drv/ChangeLog:        ko = mct_aVect_indexRA(fractions_o,"afrac") should be
drv/ChangeLog:        ko = mct_aVect_indexRA(fractions_a,"ofrac")	
drv/ChangeLog:         call mct_aVect_copy(aVin=l2x_a, aVout=x2a_a, vector=usevector)
drv/ChangeLog:         call mct_aVect_copy(aVin=o2x_a, aVout=x2a_a, vector=usevector)
drv/ChangeLog:         call mct_aVect_copy(aVin=i2x_a, aVout=x2a_a, vector=usevector) 
drv/ChangeLog:         call mct_aVect_copy(aVin=xao_a, aVout=x2a_a, vector=usevector)
drv/driver/mrg_x2ge_mct.F90:    type(mct_aVect), intent(inout) :: c2x_w
drv/driver/mrg_x2ge_mct.F90:    call mct_aVect_init(c2x_w, rList=seq_flds_ca2x_fields, lsize=lsize)
drv/driver/mrg_x2ge_mct.F90:    call mct_aVect_zero(c2x_w)
drv/driver/mrg_x2ge_mct.F90:    type(mct_aVect), intent(in)     :: c2x_w
drv/driver/mrg_x2ge_mct.F90:    type(mct_aVect), intent(inout)  :: x2w_w
drv/driver/mrg_x2ge_mct.F90:    call mct_avect_zero(x2w_w)
drv/driver/mrg_x2ge_mct.F90:    call mct_aVect_copy(aVin=c2x_w, aVout=x2w_w, vector=usevector)
drv/driver/mrg_x2ge_mct.F90:    lsize = mct_avect_lsize(x2w_w)
drv/driver/mrg_x2i_mct.F90:    type(mct_aVect), intent(inout)  :: a2x_i
drv/driver/mrg_x2i_mct.F90:    type(mct_aVect), intent(inout)  :: o2x_i
drv/driver/mrg_x2i_mct.F90:    call MCT_aVect_init(a2x_i, rList=seq_flds_a2x_fields, &
drv/driver/mrg_x2i_mct.F90:    call MCT_aVect_zero(a2x_i)
drv/driver/mrg_x2i_mct.F90:    call MCT_aVect_init(o2x_i, rList=seq_flds_o2x_fields, &
drv/driver/mrg_x2i_mct.F90:    call MCT_aVect_zero(o2x_i)
drv/driver/mrg_x2i_mct.F90:    type(mct_aVect),intent(in) :: a2x_i
drv/driver/mrg_x2i_mct.F90:    type(mct_aVect),intent(in) :: o2x_i
drv/driver/mrg_x2i_mct.F90:    type(mct_aVect),intent(out):: x2i_i
drv/driver/mrg_x2i_mct.F90:    call mct_aVect_copy(aVin=o2x_i, aVout=x2i_i, vector=usevector)
drv/driver/mrg_x2i_mct.F90:    call mct_aVect_copy(aVin=a2x_i, aVout=x2i_i, vector=usevector)
drv/driver/mrg_x2i_mct.F90:    do i = 1,mct_aVect_lsize(x2i_i)
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_ocnocn_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_ocnocn_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_ocnocn_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_ocnocn_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_ocnocn_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_ocnocn_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_ocnocn_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_ocnocn_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_ocnocn_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_ocnocn_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_a   ! Fractions on atm grid/decomp
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_i   ! Fractions on ice grid/decomp
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_l   ! Fractions on lnd grid/decomp
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_o   ! Fractions on ocn grid/decomp
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_g   ! Fractions on glc grid/decomp
drv/driver/seq_frac_mct.F90:      lSize = mct_aVect_lSize(dom_a%data)
drv/driver/seq_frac_mct.F90:      call mct_aVect_init(fractions_a,rList=fraclist_a,lsize=lsize)
drv/driver/seq_frac_mct.F90:      call mct_aVect_zero(fractions_a)
drv/driver/seq_frac_mct.F90:      ka = mct_aVect_indexRa(fractions_a,"afrac",perrWith=subName)
drv/driver/seq_frac_mct.F90:      lSize = mct_aVect_lSize(dom_g%data)
drv/driver/seq_frac_mct.F90:      call mct_aVect_init(fractions_g,rList=fraclist_g,lsize=lsize)
drv/driver/seq_frac_mct.F90:      call mct_aVect_zero(fractions_g)
drv/driver/seq_frac_mct.F90:      lSize = mct_aVect_lSize(dom_l%data)
drv/driver/seq_frac_mct.F90:      call mct_aVect_init(fractions_l,rList=fraclist_l,lsize=lsize)
drv/driver/seq_frac_mct.F90:      call mct_aVect_zero(fractions_l)
drv/driver/seq_frac_mct.F90:      kk = mct_aVect_indexRA(fractions_l,"lfrin",perrWith=subName)
drv/driver/seq_frac_mct.F90:      kf = mct_aVect_indexRA(dom_l%data ,"frac" ,perrWith=subName)
drv/driver/seq_frac_mct.F90:      lSize = mct_aVect_lSize(dom_i%data)
drv/driver/seq_frac_mct.F90:      call mct_aVect_init(fractions_i,rList=fraclist_i,lsize=lsize)
drv/driver/seq_frac_mct.F90:      call mct_aVect_zero(fractions_i)
drv/driver/seq_frac_mct.F90:      ko = mct_aVect_indexRa(fractions_i,"ofrac",perrWith=subName)	
drv/driver/seq_frac_mct.F90:      kf = mct_aVect_indexRA(dom_i%data ,"frac" ,perrWith=subName)
drv/driver/seq_frac_mct.F90:      lSize = mct_aVect_lSize(dom_o%data)
drv/driver/seq_frac_mct.F90:      call mct_aVect_init(fractions_o,rList=fraclist_o,lsize=lsize)
drv/driver/seq_frac_mct.F90:      call mct_aVect_zero(fractions_o)
drv/driver/seq_frac_mct.F90:         ko = mct_aVect_indexRa(fractions_o,"ofrac",perrWith=subName)	
drv/driver/seq_frac_mct.F90:         kf = mct_aVect_indexRA(dom_o%data ,"frac" ,perrWith=subName)
drv/driver/seq_frac_mct.F90:   ka = mct_aVect_indexRa(fractions_a,"afrac",perrWith=subName)
drv/driver/seq_frac_mct.F90:   ki = mct_aVect_indexRa(fractions_a,"ifrac",perrWith=subName)	
drv/driver/seq_frac_mct.F90:   kl = mct_aVect_indexRa(fractions_a,"lfrac",perrWith=subName)
drv/driver/seq_frac_mct.F90:   ko = mct_aVect_indexRa(fractions_a,"ofrac",perrWith=subName)	
drv/driver/seq_frac_mct.F90:   kk = mct_aVect_indexRa(fractions_a,"lfrin",perrWith=subName)	
drv/driver/seq_frac_mct.F90:   lSize = mct_aVect_lSize(fractions_a)
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(in)    :: i2x_i
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_a   ! Fractions on atm 
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_i   ! Fractions on ice 
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_l   ! Fractions on lnd 
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_o   ! Fractions on ocn 
drv/driver/seq_frac_mct.F90:   type(mct_aVect), intent(inout) :: fractions_g   ! Fractions on glc
drv/driver/seq_frac_mct.F90:      call mct_aVect_copy(i2x_i, fractions_i,"Si_ifrac","ifrac")
drv/driver/seq_frac_mct.F90:      ki = mct_aVect_indexRA(fractions_i,"ifrac")
drv/driver/seq_frac_mct.F90:      ko = mct_aVect_indexRA(fractions_i,"ofrac")
drv/driver/seq_frac_mct.F90:      kf = mct_aVect_indexRA(dom_i%data ,"frac" ,perrWith=subName)
drv/driver/seq_frac_mct.F90:            ki = mct_aVect_indexRA(fractions_a,"ifrac")
drv/driver/seq_frac_mct.F90:            ko = mct_aVect_indexRA(fractions_a,"ofrac")
drv/driver/seq_frac_mct.F90:            kl = mct_aVect_indexRA(fractions_a,"lfrac")
drv/driver/seq_frac_mct.F90:            lSize = mct_aVect_lSize(fractions_a)
drv/driver/seq_frac_mct.F90:   type(mct_aVect) , intent(in) :: fractions   ! Fractions datatype
drv/driver/seq_frac_mct.F90:   lsize = mct_avect_lsize(fractions)
drv/driver/seq_frac_mct.F90:   ka = mct_aVect_indexRA(fractions,"afrac",perrWith='quiet')
drv/driver/seq_frac_mct.F90:   kl = mct_aVect_indexRA(fractions,"lfrac",perrWith='quiet')
drv/driver/seq_frac_mct.F90:   ki = mct_aVect_indexRA(fractions,"ifrac",perrWith='quiet')
drv/driver/seq_frac_mct.F90:   ko = mct_aVect_indexRA(fractions,"ofrac",perrWith='quiet')
drv/driver/seq_frac_mct.F90:   kg = mct_aVect_indexRA(fractions,"gfrac",perrWith='quiet')
drv/driver/seq_frac_mct.F90:   kk = mct_aVect_indexRA(fractions,"lfrin",perrWith='quiet')
drv/driver/seq_domain_mct.F90:    atmsize = mct_avect_lsize(atmdom_a%data)
drv/driver/seq_domain_mct.F90:       lndsize = mct_avect_lsize(lnddom_l%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_zero(lnddom_a%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_exportRAttr(lnddom_a%data, 'mask', maskl, atmsize)
drv/driver/seq_domain_mct.F90:       call mct_aVect_exportRAttr(lnddom_a%data, 'frac', fracl, atmsize)
drv/driver/seq_domain_mct.F90:       ocnsize = mct_avect_lsize(ocndom_o%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_zero(ocndom_a%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_exportRAttr(ocndom_a%data, 'mask', masko, atmsize)
drv/driver/seq_domain_mct.F90:          call mct_aVect_exportRattr(ocndom_a%data, 'frac', fraco, atmsize)
drv/driver/seq_domain_mct.F90:          call mct_aVect_exportRattr(ocndom_a%data, 'mask', fraco, atmsize)
drv/driver/seq_domain_mct.F90:       icesize = mct_avect_lsize(icedom_i%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_zero(icedom_a%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_exportRAttr(icedom_a%data, 'mask', maski, atmsize)
drv/driver/seq_domain_mct.F90:          call mct_aVect_exportRattr(icedom_a%data, 'frac', fraci, atmsize)
drv/driver/seq_domain_mct.F90:          call mct_aVect_exportRattr(icedom_a%data, 'mask', fraci, atmsize)
drv/driver/seq_domain_mct.F90:       glcsize = mct_avect_lsize(glcdom_g%data)
drv/driver/seq_domain_mct.F90:       snosize = mct_avect_lsize(snodom_s%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_zero(snodom_g%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_getRAttr(snodom_g%data,"mask",mask,rcode)
drv/driver/seq_domain_mct.F90:       call mct_aVect_zero(icedom_o%data)
drv/driver/seq_domain_mct.F90:       call mct_aVect_getRAttr(ocndom_o%data,"mask",mask,rcode)
drv/driver/seq_domain_mct.F90:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check ascale')
drv/driver/seq_domain_mct.F90:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check ascale')
drv/driver/seq_domain_mct.F90:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check atm ascale')
drv/driver/seq_domain_mct.F90:       k1 = mct_aVect_indexRa(lnddom_l%data,"ascale",perrWith='domain_check lnd ascale')
drv/driver/seq_domain_mct.F90:    type(mct_aVect) , intent(in) :: dom1
drv/driver/seq_domain_mct.F90:    type(mct_aVect) , intent(in) :: dom2
drv/driver/seq_domain_mct.F90:   npts1 = mct_aVect_lsize(dom1)
drv/driver/seq_domain_mct.F90:   npts2 = mct_aVect_lsize(dom2)
drv/driver/seq_domain_mct.F90:   call mct_aVect_exportRAttr(dom1, trim(attr), data1, npts)
drv/driver/seq_domain_mct.F90:   call mct_aVect_exportRAttr(dom2, trim(attr), data2, npts)
drv/driver/map_rofocn_mct.F90:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/map_rofocn_mct.F90:    type(mct_aVect)          :: areadst           ! rof areas from mapping file
drv/driver/map_rofocn_mct.F90:!       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_rofocn_mct.F90:!       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/map_rofocn_mct.F90:!       ka = mct_aVect_indexRa(dom_o%data, "aream" )
drv/driver/map_rofocn_mct.F90:!       km = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/map_rofocn_mct.F90:!       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_rofocn_mct.F90:!       km = mct_aVect_indexRA(dom_r%data,"aream")
drv/driver/map_rofocn_mct.F90:!       call mct_aVect_clean(areasrc)
drv/driver/map_rofocn_mct.F90:!       call mct_aVect_clean(areadst)      
drv/driver/map_rofocn_mct.F90:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_rofocn_mct.F90:       km = mct_aVect_indexRA(dom_r%data,"aream", perrWith=subName)
drv/driver/map_rofocn_mct.F90:       ka = mct_aVect_indexRA(areasrc   ,"aream", perrWith=subName)
drv/driver/map_rofocn_mct.F90:       call mct_aVect_clean(areasrc)
drv/driver/map_rofocn_mct.F90:    type(mct_aVect),intent(in) :: r2x_r
drv/driver/map_rofocn_mct.F90:    type(mct_aVect),intent(out):: r2x_o
drv/driver/map_rofocn_mct.F90:!tcx    call mct_aVect_zero(r2x_o)
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)          :: areasrc           ! atm areas from mapping file
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)          :: areadst           ! lnd areas set to atm areas
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect), intent(in)  :: av_w
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect), intent(out) :: av_c
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)        :: av_c_f     ! temporary flux attribute vector
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)        :: av_c_s     ! temporary state attribute vector
drv/driver/map_wrfcam_mct.F90:             lsize = mct_aVect_lsize(av_c)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_init (av_c_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_copy (aVin=av_c_f, aVout=av_c, vector=usevector)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_clean(av_c_f)
drv/driver/map_wrfcam_mct.F90:             lsize = mct_aVect_lsize(av_c)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_init (av_c_s, rlist=statelist, lsize=lsize)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_copy (aVin=av_c_s, aVout=av_c, vector=usevector)
drv/driver/map_wrfcam_mct.F90:             call mct_aVect_clean(av_c_s)
drv/driver/map_wrfcam_mct.F90:!    lsize = mct_avect_lsize(av_c)  ! juanxiong he, debug
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect) ,intent(in)  :: av_c
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect) ,intent(out) :: av_w
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_c
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_w
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)          :: av_w_f     ! temporary flux attribute vector
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)          :: av_w_s     ! temporary state attribute vector
drv/driver/map_wrfcam_mct.F90:    type(mct_aVect)          :: temp       ! temporary attribute vector
drv/driver/map_wrfcam_mct.F90:                lsize = mct_aVect_lsize(av_w)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_init (av_w_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_copy (aVin=av_w_f, aVout=av_w, vector=usevector)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_clean(av_w_f)
drv/driver/map_wrfcam_mct.F90:                lsize = mct_aVect_lsize(av_w)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_init (av_w_s, rlist=statelist, lsize=lsize)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_copy (aVin=av_w_s, aVout=av_w, vector=usevector)
drv/driver/map_wrfcam_mct.F90:                call mct_aVect_clean(av_w_s)
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)          :: areasrc           ! atm areas from mapping file
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)          :: areadst           ! lnd areas set to atm areas
drv/driver/map_atmlnd_mct.F90:    call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_atmlnd_mct.F90:    call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/map_atmlnd_mct.F90:       ka = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/map_atmlnd_mct.F90:       km = mct_aVect_indexRa(dom_a%data, "aream" )
drv/driver/map_atmlnd_mct.F90:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_atmlnd_mct.F90:    km = mct_aVect_indexRA(dom_l%data,"aream")
drv/driver/map_atmlnd_mct.F90:    call mct_aVect_clean(areasrc)      
drv/driver/map_atmlnd_mct.F90:    call mct_aVect_clean(areadst)      
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect), intent(in)  :: av_a
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect), intent(out) :: av_l
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)        :: av_l_f     ! temporary flux attribute vector
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)        :: av_l_s     ! temporary state attribute vector
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect) ,intent(in)  :: av_l
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect) ,intent(out) :: av_a
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_l
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_a
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)          :: av_a_f     ! temporary flux attribute vector
drv/driver/map_atmlnd_mct.F90:    type(mct_aVect)          :: av_a_s     ! temporary state attribute vector
drv/driver/mrg_x2l_mct.F90:    type(mct_aVect), intent(inout)  :: a2x_l
drv/driver/mrg_x2l_mct.F90:    call mct_aVect_init(a2x_l, rList=seq_flds_a2x_fields, &
drv/driver/mrg_x2l_mct.F90:    call mct_aVect_zero(a2x_l)
drv/driver/mrg_x2l_mct.F90:    type(mct_aVect), intent(inout)  :: a2x_l  ! input
drv/driver/mrg_x2l_mct.F90:    type(mct_aVect), intent(inout)  :: x2l_l  ! output
drv/driver/mrg_x2l_mct.F90:    call mct_aVect_copy(aVin=a2x_l, aVout=x2l_l, vector=usevector)
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_camcam_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_camcam_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_camcam_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_camcam_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_camcam_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_camcam_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_camcam_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_camcam_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_camcam_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_camcam_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_camcam_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_rofrof_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_rofrof_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_rofrof_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_rofrof_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_rofrof_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_rofrof_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_rofrof_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_rofrof_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_rofrof_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_rofrof_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_rofrof_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_iceocn_mct.F90:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/map_iceocn_mct.F90:    type(mct_aVect)          :: areadst           ! ice areas from mapping file
drv/driver/map_iceocn_mct.F90:    call mct_aVect_init(areasrc, rList="aream", lsize=lsize )
drv/driver/map_iceocn_mct.F90:    call mct_aVect_init(areadst, rList="aream", lsize=lsize )
drv/driver/map_iceocn_mct.F90:    call mct_aVect_zero(areadst)
drv/driver/map_iceocn_mct.F90:    km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/map_iceocn_mct.F90:    ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/map_iceocn_mct.F90:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_iceocn_mct.F90:    km = mct_aVect_indexRA(dom_i%data,"aream")
drv/driver/map_iceocn_mct.F90:    call mct_aVect_clean(areasrc)      
drv/driver/map_iceocn_mct.F90:    call mct_aVect_clean(areadst)      
drv/driver/map_iceocn_mct.F90:    type(mct_aVect),intent(in) :: av_o
drv/driver/map_iceocn_mct.F90:    type(mct_aVect),intent(out):: av_i
drv/driver/map_iceocn_mct.F90:    type(mct_aVect),intent(in) :: av_i
drv/driver/map_iceocn_mct.F90:    type(mct_aVect),intent(out):: av_o
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_geagea_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_geagea_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_geagea_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_geagea_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_geagea_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_geagea_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_geagea_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_geagea_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_geagea_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_geagea_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_geagea_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/mrg_x2g_mct.F90:    type(mct_aVect), intent(inout)  :: s2x_g
drv/driver/mrg_x2g_mct.F90:    call mct_aVect_init(s2x_g, rList=seq_flds_s2x_fields, &
drv/driver/mrg_x2g_mct.F90:    call mct_aVect_zero(s2x_g)
drv/driver/mrg_x2g_mct.F90:    type(mct_aVect), intent(inout)  :: s2x_g  ! input
drv/driver/mrg_x2g_mct.F90:    type(mct_aVect), intent(inout)  :: x2g_g  ! output
drv/driver/mrg_x2g_mct.F90:    call mct_aVect_copy(aVin=s2x_g, aVout=x2g_g, vector=usevector)
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: a2x_ax_avg   ! tavg aVect/bundle
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2a_ax_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: l2x_lx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2l_lx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: r2x_rx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: o2x_ox_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2o_ox_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: i2x_ix_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2i_ix_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: g2x_gx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2g_gx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: s2x_sx_avg
drv/driver/seq_hist_mod.F90:   type(mct_aVect),save  :: x2s_sx_avg
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(a2x_ax)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(a2x_ax_avg,a2x_ax,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(a2x_ax_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2a_ax)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2a_ax_avg,x2a_ax,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2a_ax_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(l2x_lx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(l2x_lx_avg,l2x_lx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(l2x_lx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2l_lx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2l_lx_avg,x2l_lx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2l_lx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(r2x_rx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(r2x_rx_avg,r2x_rx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(r2x_rx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(o2x_ox)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(o2x_ox_avg,o2x_ox,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(o2x_ox_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2o_ox)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2o_ox_avg,x2o_ox,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2o_ox_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(i2x_ix)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(i2x_ix_avg,i2x_ix,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(i2x_ix_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2i_ix)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2i_ix_avg,x2i_ix,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2i_ix_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(g2x_gx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(g2x_gx_avg,g2x_gx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(g2x_gx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2g_gx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2g_gx_avg,x2g_gx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2g_gx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(s2x_sx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(s2x_sx_avg,s2x_sx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(s2x_sx_avg)
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(x2s_sx)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(x2s_sx_avg,x2s_sx,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(x2s_sx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(a2x_ax_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2a_ax_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(l2x_lx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2l_lx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(r2x_rx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(o2x_ox_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2o_ox_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(i2x_ix_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2i_ix_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(g2x_gx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2g_gx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(s2x_sx_avg)
drv/driver/seq_hist_mod.F90:            call mct_aVect_zero(x2s_sx_avg)
drv/driver/seq_hist_mod.F90:   type(mct_aVect) , intent(in) :: av         ! avect
drv/driver/seq_hist_mod.F90:   type(mct_aVect)   ,save :: avavg(maxout)           ! av accumulator if needed
drv/driver/seq_hist_mod.F90:   type(mct_aVect)         :: avflds                  ! non-avg av for a subset of fields
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(av)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(avavg(ntout),av,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(avavg(ntout))
drv/driver/seq_hist_mod.F90:               lsize = mct_aVect_lsize(av)
drv/driver/seq_hist_mod.F90:               call mct_aVect_init(avflds, rList=flds, lsize=lsize)
drv/driver/seq_hist_mod.F90:               call mct_aVect_zero(avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_copy(aVin=avavg(found), aVout=avflds)
drv/driver/seq_hist_mod.F90:            call mct_aVect_copy(aVin=av, aVout=avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_clean(avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_zero(avavg(found))
drv/driver/seq_hist_mod.F90:   type(mct_aVect) , intent(in) :: av         ! avect
drv/driver/seq_hist_mod.F90:   type(mct_aVect)   ,save :: avavg(maxout)           ! av accumulator if needed
drv/driver/seq_hist_mod.F90:   type(mct_aVect)         :: avflds                  ! non-avg av for a subset of fields
drv/driver/seq_hist_mod.F90:         lsize = mct_aVect_lsize(av)
drv/driver/seq_hist_mod.F90:         call mct_aVect_init(avavg(ntout),av,lsize)
drv/driver/seq_hist_mod.F90:         call mct_aVect_zero(avavg(ntout))
drv/driver/seq_hist_mod.F90:               lsize = mct_aVect_lsize(av)
drv/driver/seq_hist_mod.F90:               call mct_aVect_init(avflds, rList=flds, lsize=lsize)
drv/driver/seq_hist_mod.F90:               call mct_aVect_zero(avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_copy(aVin=avavg(found), aVout=avflds)
drv/driver/seq_hist_mod.F90:            call mct_aVect_copy(aVin=av, aVout=avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_clean(avflds)
drv/driver/seq_hist_mod.F90:               call mct_aVect_zero(avavg(found))
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_snosno_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_snosno_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_snosno_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_snosno_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_snosno_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_snosno_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_snosno_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_snosno_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_snosno_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_snosno_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_snosno_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_geacam_mct.F90:    type(mct_aVect)          :: areasrc           ! atm areas from mapping file
drv/driver/map_geacam_mct.F90:    type(mct_aVect)          :: areadst           ! lnd areas set to atm areas
drv/driver/map_geacam_mct.F90:    type(mct_aVect), intent(in)  :: av_w
drv/driver/map_geacam_mct.F90:    type(mct_aVect), intent(out) :: av_c
drv/driver/map_geacam_mct.F90:    type(mct_aVect)        :: av_c_f     ! temporary flux attribute vector
drv/driver/map_geacam_mct.F90:    type(mct_aVect)        :: av_c_s     ! temporary state attribute vector
drv/driver/map_geacam_mct.F90:             lsize = mct_aVect_lsize(av_c)
drv/driver/map_geacam_mct.F90:             call mct_aVect_init (av_c_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_geacam_mct.F90:             call mct_aVect_copy (aVin=av_c_f, aVout=av_c, vector=usevector)
drv/driver/map_geacam_mct.F90:             call mct_aVect_clean(av_c_f)
drv/driver/map_geacam_mct.F90:             lsize = mct_aVect_lsize(av_c)
drv/driver/map_geacam_mct.F90:             call mct_aVect_init (av_c_s, rlist=statelist, lsize=lsize)
drv/driver/map_geacam_mct.F90:             call mct_aVect_copy (aVin=av_c_s, aVout=av_c, vector=usevector)
drv/driver/map_geacam_mct.F90:             call mct_aVect_clean(av_c_s)
drv/driver/map_geacam_mct.F90:!    lsize = mct_avect_lsize(av_c)  ! juanxiong he, debug
drv/driver/map_geacam_mct.F90:    type(mct_aVect) ,intent(in)  :: av_c
drv/driver/map_geacam_mct.F90:    type(mct_aVect) ,intent(out) :: av_w
drv/driver/map_geacam_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_c
drv/driver/map_geacam_mct.F90:    type(mct_aVect) ,intent(in), optional :: fractions_w
drv/driver/map_geacam_mct.F90:    type(mct_aVect)          :: av_w_f     ! temporary flux attribute vector
drv/driver/map_geacam_mct.F90:    type(mct_aVect)          :: av_w_s     ! temporary state attribute vector
drv/driver/map_geacam_mct.F90:    type(mct_aVect)          :: temp       ! temporary attribute vector
drv/driver/map_geacam_mct.F90:                lsize = mct_aVect_lsize(av_w)
drv/driver/map_geacam_mct.F90:                call mct_aVect_init (av_w_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_geacam_mct.F90:                call mct_aVect_copy (aVin=av_w_f, aVout=av_w, vector=usevector)
drv/driver/map_geacam_mct.F90:                call mct_aVect_clean(av_w_f)
drv/driver/map_geacam_mct.F90:                lsize = mct_aVect_lsize(av_w)
drv/driver/map_geacam_mct.F90:                call mct_aVect_init (av_w_s, rlist=statelist, lsize=lsize)
drv/driver/map_geacam_mct.F90:                call mct_aVect_copy (aVin=av_w_s, aVout=av_w, vector=usevector)
drv/driver/map_geacam_mct.F90:                call mct_aVect_clean(av_w_s)
drv/driver/mrg_x2c_mct.F90:    type(mct_aVect), intent(inout) :: w2x_c
drv/driver/mrg_x2c_mct.F90:    call mct_aVect_init(w2x_c, rList=seq_flds_w2x_fields, lsize=lsize)
drv/driver/mrg_x2c_mct.F90:    call mct_aVect_zero(w2x_c)
drv/driver/mrg_x2c_mct.F90:    type(mct_aVect), intent(in)     :: w2x_c
drv/driver/mrg_x2c_mct.F90:    type(mct_aVect), intent(inout)  :: x2c_c
drv/driver/mrg_x2c_mct.F90:    call mct_avect_zero(x2c_c)
drv/driver/mrg_x2c_mct.F90:    call mct_aVect_copy(aVin=w2x_c, aVout=x2c_c, vector=usevector)
drv/driver/mrg_x2c_mct.F90:    lsize = mct_avect_lsize(x2c_c)
drv/driver/mrg_x2ca_mct.F90:    type(mct_aVect), intent(inout) :: w2x_c
drv/driver/mrg_x2ca_mct.F90:    call mct_aVect_init(w2x_c, rList=seq_flds_ge2x_fields, lsize=lsize)
drv/driver/mrg_x2ca_mct.F90:    call mct_aVect_zero(w2x_c)
drv/driver/mrg_x2ca_mct.F90:    type(mct_aVect), intent(in)     :: w2x_c
drv/driver/mrg_x2ca_mct.F90:    type(mct_aVect), intent(inout)  :: x2c_c
drv/driver/mrg_x2ca_mct.F90:    call mct_avect_zero(x2c_c)
drv/driver/mrg_x2ca_mct.F90:    call mct_aVect_copy(aVin=w2x_c, aVout=x2c_c, vector=usevector)
drv/driver/mrg_x2ca_mct.F90:    lsize = mct_avect_lsize(x2c_c)
drv/driver/map_atmice_mct.F90:    type(mct_aVect) ,intent(in)           :: av_a
drv/driver/map_atmice_mct.F90:    type(mct_aVect) ,intent(out)          :: av_i
drv/driver/map_atmice_mct.F90:    type(mct_aVect) :: av_i_f     ! temporary flux attribute vector
drv/driver/map_atmice_mct.F90:    type(mct_aVect) :: av_i_s     ! temporary state attribute vector
drv/driver/map_atmice_mct.F90:    type(mct_aVect) :: av_a_fl    ! temporary av for rearranging
drv/driver/map_atmice_mct.F90:    type(mct_aVect) :: av_i_fl    ! temporary av for rearranging
drv/driver/map_atmice_mct.F90:!            lsize = mct_aVect_lsize(av_i)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_init (av_i_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_copy (aVin=av_i_f, aVout=av_i, vector=usevector)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_clean(av_i_f)
drv/driver/map_atmice_mct.F90:!            lsize = mct_aVect_lsize(av_i)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_init (av_i_s, rlist=statelist , lsize=lsize)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_copy (aVin=av_i_s, aVout=av_i, vector=usevector)
drv/driver/map_atmice_mct.F90:!            call mct_aVect_clean(av_i_s)
drv/driver/map_atmice_mct.F90:    type(mct_AVect) ,intent(in)           :: av_i
drv/driver/map_atmice_mct.F90:    type(mct_AVect) ,intent(out)          :: av_a
drv/driver/map_atmice_mct.F90:    type(mct_AVect) ,intent(in), optional :: fractions_i
drv/driver/map_atmice_mct.F90:    type(mct_AVect) ,intent(in), optional :: fractions_a
drv/driver/map_atmice_mct.F90:    type(mct_aVect)      :: av_a_f, av_a_s ! temporary
drv/driver/map_atmice_mct.F90:!                lsize = mct_aVect_lsize(av_a)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_init (av_a_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_copy (aVin=av_a_f, aVout=av_a, vector=usevector)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_clean(av_a_f)
drv/driver/map_atmice_mct.F90:!                lsize = mct_aVect_lsize(av_a)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_init (av_a_s, rlist=statelist, lsize=lsize)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_copy (aVin=av_a_s, aVout=av_a, vector=usevector)
drv/driver/map_atmice_mct.F90:!                call mct_aVect_clean(av_a_s)
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_wrfwrf_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_wrfwrf_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_wrfwrf_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_wrfwrf_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_wrfwrf_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_wrfwrf_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_wrfwrf_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_wrfwrf_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_wrfwrf_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_wrfwrf_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_atmatm_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_atmatm_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_atmatm_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_atmatm_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_atmatm_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_atmatm_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_atmatm_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_atmatm_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_atmatm_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_atmatm_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_atmatm_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout) :: c2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout), optional :: l2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout), optional :: o2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout), optional :: i2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout), optional :: xao_w
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_init(c2x_w, rList=seq_flds_c2x_fields, lsize=lsize)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_zero(c2x_w)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_init(l2x_w, rList=seq_flds_l2x_fields, lsize=lsize)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_zero(l2x_w)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_init(o2x_w, rList=seq_flds_o2x_fields, lsize=lsize)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_zero(o2x_w)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_init(i2x_w, rList=seq_flds_i2x_fields, lsize=lsize)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_zero(i2x_w)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_init(xao_w, rList=seq_flds_xao_fields, lsize=lsize)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_zero(xao_w)
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)     :: c2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(inout)  :: x2w_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)   , optional  :: l2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)   , optional  :: o2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)   , optional  :: xao_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)   , optional  :: i2x_w
drv/driver/mrg_x2w_mct.F90:    type(mct_aVect), intent(in)   , optional  :: fractions_w
drv/driver/mrg_x2w_mct.F90:    call mct_avect_zero(x2w_w)
drv/driver/mrg_x2w_mct.F90:    call mct_aVect_copy(aVin=c2x_w, aVout=x2w_w, vector=usevector)
drv/driver/mrg_x2w_mct.F90:    lsize = mct_avect_lsize(x2w_w)
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_iceice_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_iceice_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_iceice_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_iceice_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_iceice_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_iceice_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_iceice_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_iceice_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_iceice_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_iceice_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_iceice_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_aa%dom%data,"area"  ,perrWith='aa area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_aa%dom%data,"aream" ,perrWith='aa aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_aa%dom%data,"ascale",perrWith='aa ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ll%dom%data,"area"  ,perrWith='ll area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ll%dom%data,"aream" ,perrWith='ll aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ll%dom%data,"ascale",perrWith='ll ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_rr%dom%data,"area"  ,perrWith='rr area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_rr%dom%data,"aream" ,perrWith='rr aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_rr%dom%data,"ascale",perrWith='rr ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ss%dom%data,"area"  ,perrWith='ss area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ss%dom%data,"aream" ,perrWith='ss aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ss%dom%data,"ascale",perrWith='ss ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_oo%dom%data,"area"  ,perrWith='oo area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_oo%dom%data,"aream" ,perrWith='oo aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_oo%dom%data,"ascale",perrWith='oo ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ii%dom%data,"area"  ,perrWith='ii area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ii%dom%data,"aream" ,perrWith='ii aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ii%dom%data,"ascale",perrWith='ii ascale')
drv/driver/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_gg%dom%data,"area"  ,perrWith='gg area ')
drv/driver/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_gg%dom%data,"aream" ,perrWith='gg aream')
drv/driver/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_gg%dom%data,"ascale",perrWith='gg ascale')
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2a_aa)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2l_ll)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_init(r2xacc_rx%data, r2x_rx, mct_aVect_lsize(r2x_rx))
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2s_ss)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2i_ii)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2g_gg)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2o_oo)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_init(x2oacc_ox%data, x2o_ox, mct_aVect_lsize(x2o_ox))
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2c_cc1)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2c_cc2)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2m_mm1)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2m_mm2)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2ca_caca1)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2ca_caca2)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2chem_chemchem1)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_zero(x2chem_chemchem2)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_aVect_init(xao_ox, rList=seq_flds_xao_fields, lsize=mct_aVect_lsize(o2x_ox))
drv/driver/ccsm_comp_mod.F90:         call mct_aVect_zero(xao_ox)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
drv/driver/ccsm_comp_mod.F90:      call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/ccsm_comp_mod.F90:                  call mct_aVect_copy(aVin=r2x_ox, aVout=x2oacc_ox%data)
drv/driver/ccsm_comp_mod.F90:         if (ocn_prognostic) call mct_avect_vecmult(x2o_oo,drv2mdl_oo,seq_flds_x2o_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         if (ice_prognostic) call mct_avect_vecmult(x2i_ii,drv2mdl_ii,seq_flds_x2i_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
drv/driver/ccsm_comp_mod.F90:            call mct_avect_vecmult(x2l_ll,drv2mdl_ll,seq_flds_x2l_fluxes)
drv/driver/ccsm_comp_mod.F90:            call mct_avect_vecmult(x2s_ss,drv2mdl_ss,seq_flds_x2s_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
drv/driver/ccsm_comp_mod.F90:            call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
drv/driver/ccsm_comp_mod.F90:            call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         if (atm_prognostic) call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         if (glc_prognostic) call mct_avect_vecmult(x2g_gg,drv2mdl_gg,seq_flds_x2g_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
drv/driver/ccsm_comp_mod.F90:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: l2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: o2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: i2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: xao_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_init(l2x_a, rList=seq_flds_l2x_fields, lsize=lsize)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_zero(l2x_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_init(o2x_a, rList=seq_flds_o2x_fields, lsize=lsize)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_zero(o2x_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_init(i2x_a, rList=seq_flds_i2x_fields, lsize=lsize)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_zero(i2x_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_init(xao_a, rList=seq_flds_xao_fields, lsize=lsize)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_zero(xao_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(in)     :: l2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(in)     :: o2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(in)     :: xao_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(in)     :: i2x_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(in)     :: fractions_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: x2a_a
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_avect_zero(x2a_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:!    lSize = mct_avect_lSize(x2a_a)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    ki=mct_aVect_indexRA(fractions_a,"ifrac")
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    kl=mct_aVect_indexRA(fractions_a,"lfrac")
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    ko=mct_aVect_indexRA(fractions_a,"ofrac")
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_copy(aVin=l2x_a, aVout=x2a_a, vector=usevector)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_copy(aVin=o2x_a, aVout=x2a_a, vector=usevector)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_copy(aVin=i2x_a, aVout=x2a_a, vector=usevector) 
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    call mct_aVect_copy(aVin=xao_a, aVout=x2a_a, vector=usevector)
drv/driver/.svn/text-base/mrg_x2a_mct.F90.svn-base:    lsize = mct_avect_lsize(x2a_a)
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: fractions_ax   ! Fractions on atm grid
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: fractions_lx   ! Fractions on lnd grid 
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: fractions_ix   ! Fractions on ice grid
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: fractions_ox   ! Fractions on ocn grid
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: fractions_gx   ! Fractions on glc grid
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2a_aa    ! Atm import, atm grid, atm pes - defined in atm gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: a2x_aa    ! Atm export, atm grid, atm pes - defined in atm gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2a_ax    ! Atm import, atm grid, cpl pes - defined in map_atmatm
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: a2x_ax    ! Atm export, atm grid, cpl pes - defined in map_atmatm
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: a2x_lx    ! Atm export, lnd grid, cpl pes - defined in mrg_x2l
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: a2x_ix    ! Atm export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: a2x_ox    ! Atm export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2l_ll    ! Lnd import, lnd grid, lnd pes - defined in lnd gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: l2x_ll    ! Lnd export, lnd grid, lnd pes - defined in lnd gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2l_lx    ! Lnd import, lnd grid, cpl pes - defined in map_lndlnd
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: l2x_lx    ! Lnd export, lnd grid, cpl pes - defined in map_lndlnd
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: l2x_ax    ! Lnd export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: r2x_rr    ! Rof export, rof grid, lnd pes - defined in lnd gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: r2x_rx    ! Rof export, rof grid, cpl pes - defined in map_rofrof
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: r2x_ox    ! Rof export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2s_ss    ! Sno import, sno grid, sno pes - defined in lnd gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: s2x_ss    ! Sno export, sno grid, sno pes - defined in lnd gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2s_sx    ! Sno import, sno grid, cpl pes - defined in map_snosno
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: s2x_sx    ! Sno export, sno grid, cpl pes - defined in map_snosno
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: s2x_gx    ! Sno export, glc grid, cpl pes - defined in mrg_x2g
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2i_ii    ! Ice import, ice grid, ice pes - defined in ice gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: i2x_ii    ! Ice export, ice grid, ice pes - defined in ice gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2i_ix    ! Ice import, ice grid, cpl pes - defined in map_iceice
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: i2x_ix    ! Ice export, ice grid, cpl pes - defined in map_iceice
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: i2x_ax    ! Ice export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: i2x_ox    ! Ice export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2o_oo    ! Ocn import, ocn grid, ocn pes - defined in ocn gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: o2x_oo    ! Ocn export, ocn grid, ocn pes - defined in ocn gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2o_ox    ! Ocn import, ocn grid, cpl pes - defined in map_ocnocn
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: o2x_ox    ! Ocn export, ocn grid, cpl pes - defined in map_ocnocn
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: o2x_ax    ! Ocn export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: o2x_ix    ! Ocn export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: xao_ox    ! Atm-ocn fluxes, ocn grid, cpl pes - defined in flux_ao gc 
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: xao_ax    ! Atm-ocn fluxes, atm grid, cpl pes - defined in flux_ao gc 
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2g_gg    ! Glc import, glc grid, ice pes - defined in glc gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: g2x_gg    ! Glc export, glc grid, ice pes - defined in glc gc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: x2g_gx    ! Glc import, glc grid, cpl pes - defined in map_glcglc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: g2x_gx    ! Glc export, glc grid, cpl pes - defined in map_glcglc
drv/driver/.svn/text-base/seq_avdata_mod.F90.svn-base:   type(mct_aVect) :: g2x_sx    ! Glc export, sno grid, cpl pes - defined in mrg_x2s
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! ice areas from mapping file
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    call mct_aVect_init(areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    call mct_aVect_init(areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    call mct_aVect_zero(areadst)
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_i%data,"aream")
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    call mct_aVect_clean(areasrc)      
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_o
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_i
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_i
drv/driver/.svn/text-base/map_iceocn_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_o
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_atmatm_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)  :: fractions
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    kx = mct_aVect_indexRA(fractions,"ofrac")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect)                 :: avdom_oe
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_init(avdom_oe,dom_o%data,lsize=nloc_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    kmsk = mct_aVect_indexRA(avdom_oe,"mask",dieWith=subName)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_clean(avdom_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: xao_o
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: fractions_o
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       kx = mct_aVect_indexRA(fractions_o,"ifrac")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       kr = mct_aVect_indexRA(fractions_o,"ifrad")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       kx = mct_aVect_indexRA(fractions_o,"ofrac")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       kr = mct_aVect_indexRA(fractions_o,"ofrad")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: a2x  
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: o2x
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: xao_a
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: xao_o
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: fractions_a
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: fractions_o
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: a2x_e
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: o2x_e
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: xaop_ae
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: xaop_oe
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: xaop_a
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: xaop_o
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect) :: fractions_oe
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_AVect_init(a2x_e, a2x, nloc_ae)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_AVect_zero(a2x_e)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_AVect_init(o2x_e, o2x, nloc_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_AVect_zero(o2x_e)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_aVect_clean(a2x_e)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:       call mct_aVect_clean(o2x_e)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_init(xaop_ae,rList=trim(fldlist),lsize=nloc_ae)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_zero(xaop_ae)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_init(xaop_oe,rList=trim(fldlist),lsize=nloc_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_zero(xaop_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_init(xaop_a, rList=trim(fldlist),lsize=nloc_a)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_zero(xaop_a)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_init(xaop_o, rList=trim(fldlist),lsize=nloc_o)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_zero(xaop_o)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_tref   = mct_aVect_indexRA(xaop_ae,"So_tref")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_qref   = mct_aVect_indexRA(xaop_ae,"So_qref")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_duu10n = mct_aVect_indexRA(xaop_ae,"Sx_duu10n")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_ustar  = mct_aVect_indexRA(xaop_ae,"So_ustar")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_ssq    = mct_aVect_indexRA(xaop_ae,"So_ssq")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_re     = mct_aVect_indexRA(xaop_ae,"So_re")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_u10    = mct_aVect_indexRA(xaop_ae,"So_u10")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_taux   = mct_aVect_indexRA(xaop_ae,"Faox_taux")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_tauy   = mct_aVect_indexRA(xaop_ae,"Faox_tauy")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_lat    = mct_aVect_indexRA(xaop_ae,"Faox_lat")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_sen    = mct_aVect_indexRA(xaop_ae,"Faox_sen")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_evap   = mct_aVect_indexRA(xaop_ae,"Faox_evap")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_lwup   = mct_aVect_indexRA(xaop_ae,"Faox_lwup")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    index_sumwt  = mct_aVect_indexRA(xaop_ae,"sumwt")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    kf = mct_aVect_indexRA(fractions_o,"ofrac")
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_init(fractions_oe,fractions_o,lsize=nloc_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_aVect_clean(fractions_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_clean(xaop_ae)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_clean(xaop_oe)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_copy(xaop_a, xao_a)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_copy(xaop_o, xao_o)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_clean(xaop_a)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    call mct_avect_clean(xaop_o)
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: a2x  
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: o2x
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: xao
drv/driver/.svn/text-base/seq_flux_mct.F90.svn-base:    nloc = mct_aVect_lsize(xao)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_rofrof_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: s2x_g
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    call mct_aVect_init(s2x_g, rList=seq_flds_s2x_fields, &
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    call mct_aVect_zero(s2x_g)
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: s2x_g  ! input
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: x2g_g  ! output
drv/driver/.svn/text-base/mrg_x2g_mct.F90.svn-base:    call mct_aVect_copy(aVin=s2x_g, aVout=x2g_g, vector=usevector)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: a2x_ax_avg   ! tavg aVect/bundle
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2a_ax_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: l2x_lx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2l_lx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: r2x_rx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: o2x_ox_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2o_ox_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: i2x_ix_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2i_ix_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: g2x_gx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2g_gx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: s2x_sx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect),save  :: x2s_sx_avg
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(a2x_ax)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(a2x_ax_avg,a2x_ax,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(a2x_ax_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2a_ax)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2a_ax_avg,x2a_ax,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2a_ax_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(l2x_lx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(l2x_lx_avg,l2x_lx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(l2x_lx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2l_lx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2l_lx_avg,x2l_lx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2l_lx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(r2x_rx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(r2x_rx_avg,r2x_rx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(r2x_rx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(o2x_ox)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(o2x_ox_avg,o2x_ox,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(o2x_ox_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2o_ox)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2o_ox_avg,x2o_ox,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2o_ox_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(i2x_ix)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(i2x_ix_avg,i2x_ix,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(i2x_ix_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2i_ix)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2i_ix_avg,x2i_ix,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2i_ix_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(g2x_gx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(g2x_gx_avg,g2x_gx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(g2x_gx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2g_gx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2g_gx_avg,x2g_gx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2g_gx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(s2x_sx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(s2x_sx_avg,s2x_sx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(s2x_sx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(x2s_sx)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(x2s_sx_avg,x2s_sx,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(x2s_sx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(a2x_ax_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2a_ax_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(l2x_lx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2l_lx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(r2x_rx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(o2x_ox_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2o_ox_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(i2x_ix_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2i_ix_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(g2x_gx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2g_gx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(s2x_sx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_zero(x2s_sx_avg)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect) , intent(in) :: av         ! avect
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect)   ,save :: avavg(maxout)           ! av accumulator if needed
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect)         :: avflds                  ! non-avg av for a subset of fields
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(av)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(avavg(ntout),av,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(avavg(ntout))
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               lsize = mct_aVect_lsize(av)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_init(avflds, rList=flds, lsize=lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_zero(avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_copy(aVin=avavg(found), aVout=avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_copy(aVin=av, aVout=avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_clean(avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_zero(avavg(found))
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect) , intent(in) :: av         ! avect
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect)   ,save :: avavg(maxout)           ! av accumulator if needed
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:   type(mct_aVect)         :: avflds                  ! non-avg av for a subset of fields
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         lsize = mct_aVect_lsize(av)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_init(avavg(ntout),av,lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:         call mct_aVect_zero(avavg(ntout))
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               lsize = mct_aVect_lsize(av)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_init(avflds, rList=flds, lsize=lsize)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_zero(avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_copy(aVin=avavg(found), aVout=avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:            call mct_aVect_copy(aVin=av, aVout=avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_clean(avflds)
drv/driver/.svn/text-base/seq_hist_mod.F90.svn-base:               call mct_aVect_zero(avavg(found))
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) ,intent(in)           :: av_a
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) ,intent(out)          :: av_i
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) :: av_i_f     ! temporary flux attribute vector
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) :: av_i_s     ! temporary state attribute vector
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) :: av_a_fl    ! temporary av for rearranging
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect) :: av_i_fl    ! temporary av for rearranging
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            lsize = mct_aVect_lsize(av_i)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_init (av_i_f, rlist=fluxlist , lsize=lsize)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_copy (aVin=av_i_f, aVout=av_i, vector=usevector)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_clean(av_i_f)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            lsize = mct_aVect_lsize(av_i)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_init (av_i_s, rlist=statelist , lsize=lsize)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_copy (aVin=av_i_s, aVout=av_i, vector=usevector)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!            call mct_aVect_clean(av_i_s)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_AVect) ,intent(in)           :: av_i
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_AVect) ,intent(out)          :: av_a
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_AVect) ,intent(in), optional :: fractions_i
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_AVect) ,intent(in), optional :: fractions_a
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:    type(mct_aVect)      :: av_a_f, av_a_s ! temporary
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                lsize = mct_aVect_lsize(av_a)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_init (av_a_f, rlist=fluxlist , lsize=lsize)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_copy (aVin=av_a_f, aVout=av_a, vector=usevector)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_clean(av_a_f)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                lsize = mct_aVect_lsize(av_a)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_init (av_a_s, rlist=statelist, lsize=lsize)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_copy (aVin=av_a_s, aVout=av_a, vector=usevector)
drv/driver/.svn/text-base/map_atmice_mct.F90.svn-base:!                call mct_aVect_clean(av_a_s)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:    atmsize = mct_avect_lsize(atmdom_a%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       lndsize = mct_avect_lsize(lnddom_l%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_zero(lnddom_a%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_exportRAttr(lnddom_a%data, 'mask', maskl, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_exportRAttr(lnddom_a%data, 'frac', fracl, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       ocnsize = mct_avect_lsize(ocndom_o%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_zero(ocndom_a%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_exportRAttr(ocndom_a%data, 'mask', masko, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:          call mct_aVect_exportRattr(ocndom_a%data, 'frac', fraco, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:          call mct_aVect_exportRattr(ocndom_a%data, 'mask', fraco, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       icesize = mct_avect_lsize(icedom_i%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_zero(icedom_a%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_exportRAttr(icedom_a%data, 'mask', maski, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:          call mct_aVect_exportRattr(icedom_a%data, 'frac', fraci, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:          call mct_aVect_exportRattr(icedom_a%data, 'mask', fraci, atmsize)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       glcsize = mct_avect_lsize(glcdom_g%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       snosize = mct_avect_lsize(snodom_s%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_zero(snodom_g%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_getRAttr(snodom_g%data,"mask",mask,rcode)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_zero(icedom_o%data)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       call mct_aVect_getRAttr(ocndom_o%data,"mask",mask,rcode)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check ascale')
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check ascale')
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       k1 = mct_aVect_indexRa(atmdom_a%data,"ascale",perrWith='domain_check atm ascale')
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:       k1 = mct_aVect_indexRa(lnddom_l%data,"ascale",perrWith='domain_check lnd ascale')
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:    type(mct_aVect) , intent(in) :: dom1
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:    type(mct_aVect) , intent(in) :: dom2
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:   npts1 = mct_aVect_lsize(dom1)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:   npts2 = mct_aVect_lsize(dom2)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:   call mct_aVect_exportRAttr(dom1, trim(attr), data1, npts)
drv/driver/.svn/text-base/seq_domain_mct.F90.svn-base:   call mct_aVect_exportRAttr(dom2, trim(attr), data2, npts)
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: a2x_i
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: o2x_i
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call MCT_aVect_init(a2x_i, rList=seq_flds_a2x_fields, &
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call MCT_aVect_zero(a2x_i)
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call MCT_aVect_init(o2x_i, rList=seq_flds_o2x_fields, &
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call MCT_aVect_zero(o2x_i)
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    type(mct_aVect),intent(in) :: a2x_i
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    type(mct_aVect),intent(in) :: o2x_i
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    type(mct_aVect),intent(out):: x2i_i
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call mct_aVect_copy(aVin=o2x_i, aVout=x2i_i, vector=usevector)
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    call mct_aVect_copy(aVin=a2x_i, aVout=x2i_i, vector=usevector)
drv/driver/.svn/text-base/mrg_x2i_mct.F90.svn-base:    do i = 1,mct_aVect_lsize(x2i_i)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_a   ! Fractions on atm grid/decomp
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_i   ! Fractions on ice grid/decomp
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_l   ! Fractions on lnd grid/decomp
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_o   ! Fractions on ocn grid/decomp
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_g   ! Fractions on glc grid/decomp
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      lSize = mct_aVect_lSize(dom_a%data)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_init(fractions_a,rList=fraclist_a,lsize=lsize)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_zero(fractions_a)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      ka = mct_aVect_indexRa(fractions_a,"afrac",perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      lSize = mct_aVect_lSize(dom_g%data)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_init(fractions_g,rList=fraclist_g,lsize=lsize)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_zero(fractions_g)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      lSize = mct_aVect_lSize(dom_l%data)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_init(fractions_l,rList=fraclist_l,lsize=lsize)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_zero(fractions_l)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      kk = mct_aVect_indexRA(fractions_l,"lfrin",perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      kf = mct_aVect_indexRA(dom_l%data ,"frac" ,perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      lSize = mct_aVect_lSize(dom_i%data)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_init(fractions_i,rList=fraclist_i,lsize=lsize)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_zero(fractions_i)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      ko = mct_aVect_indexRa(fractions_i,"ofrac",perrWith=subName)	
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      kf = mct_aVect_indexRA(dom_i%data ,"frac" ,perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      lSize = mct_aVect_lSize(dom_o%data)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_init(fractions_o,rList=fraclist_o,lsize=lsize)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_zero(fractions_o)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:         ko = mct_aVect_indexRa(fractions_o,"ofrac",perrWith=subName)	
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:         kf = mct_aVect_indexRA(dom_o%data ,"frac" ,perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ka = mct_aVect_indexRa(fractions_a,"afrac",perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ki = mct_aVect_indexRa(fractions_a,"ifrac",perrWith=subName)	
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   kl = mct_aVect_indexRa(fractions_a,"lfrac",perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ko = mct_aVect_indexRa(fractions_a,"ofrac",perrWith=subName)	
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   kk = mct_aVect_indexRa(fractions_a,"lfrin",perrWith=subName)	
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   lSize = mct_aVect_lSize(fractions_a)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(in)    :: i2x_i
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_a   ! Fractions on atm 
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_i   ! Fractions on ice 
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_l   ! Fractions on lnd 
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_o   ! Fractions on ocn 
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect), intent(inout) :: fractions_g   ! Fractions on glc
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      call mct_aVect_copy(i2x_i, fractions_i,"Si_ifrac","ifrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      ki = mct_aVect_indexRA(fractions_i,"ifrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      ko = mct_aVect_indexRA(fractions_i,"ofrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:      kf = mct_aVect_indexRA(dom_i%data ,"frac" ,perrWith=subName)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:            ki = mct_aVect_indexRA(fractions_a,"ifrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:            ko = mct_aVect_indexRA(fractions_a,"ofrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:            kl = mct_aVect_indexRA(fractions_a,"lfrac")
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:            lSize = mct_aVect_lSize(fractions_a)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   type(mct_aVect) , intent(in) :: fractions   ! Fractions datatype
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   lsize = mct_avect_lsize(fractions)
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ka = mct_aVect_indexRA(fractions,"afrac",perrWith='quiet')
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   kl = mct_aVect_indexRA(fractions,"lfrac",perrWith='quiet')
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ki = mct_aVect_indexRA(fractions,"ifrac",perrWith='quiet')
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   ko = mct_aVect_indexRA(fractions,"ofrac",perrWith='quiet')
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   kg = mct_aVect_indexRA(fractions,"gfrac",perrWith='quiet')
drv/driver/.svn/text-base/seq_frac_mct.F90.svn-base:   kk = mct_aVect_indexRA(fractions,"lfrin",perrWith='quiet')
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: a2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: i2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: r2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_init(a2x_o, rList=seq_flds_a2x_fields, &
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_zero(a2x_o)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_init(i2x_o, rList=seq_flds_i2x_fields, &
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_zero(i2x_o)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_init(r2x_o, rList=seq_flds_r2x_fields, &
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_zero(r2x_o)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: a2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: i2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:!!    type(mct_aVect), intent(in)    :: r2x_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: xao_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(in)    :: fractions_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    type(mct_aVect), intent(inout) :: x2o_o
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_zero(x2o_o)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_copy(aVin=a2x_o, aVout=x2o_o, vector=usevector)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_copy(aVin=i2x_o, aVout=x2o_o, vector=usevector)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:!!    call mct_aVect_copy(aVin=r2x_o, aVout=x2o_o, vector=usevector)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    call mct_aVect_copy(aVin=xao_o, aVout=x2o_o, vector=usevector)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    ki  = mct_aVect_indexRa(fractions_o,"ifrac",perrWith=subName)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    ko  = mct_aVect_indexRa(fractions_o,"ofrac",perrWith=subName)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    kir = mct_aVect_indexRa(fractions_o,"ifrad",perrWith=subName)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    kor = mct_aVect_indexRa(fractions_o,"ofrad",perrWith=subName)
drv/driver/.svn/text-base/mrg_x2o_mct.F90.svn-base:    lsize = mct_aVect_lsize(x2o_o)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    type(mct_aVect),intent(inout),optional :: AV1_old
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    type(mct_aVect),intent(inout),optional :: AV2_old
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    type(mct_aVect),intent(inout),optional :: AV1_new
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    type(mct_aVect),intent(inout),optional :: AV2_new
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    call mct_avect_zero(dom_new%data)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:  type(mct_aVect), intent(INOUT):: AVin
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:  if (seq_comm_iamin(IDin)) lsizei = mct_aVect_lsize(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    if (mct_aVect_nIAttr(AVin) /= 0) iList = mct_aVect_ExportIList2c(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    if (mct_aVect_nRattr(AVin) /= 0) rList = mct_aVect_ExportRList2c(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:      call mct_aVect_init(AVin,iList=iList,rList=rList,lsize=lsizen)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:      call mct_aVect_init(AVin,iList=iList,lsize=lsizen)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:      call mct_aVect_init(AVin,rList=rList,lsize=lsizen)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:  type(mct_aVect), intent(INOUT):: AVin
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:  type(mct_aVect), intent(INOUT):: AVout
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:  if (seq_comm_iamin(IDin)) lsizei = mct_aVect_lsize(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    if (mct_aVect_nIAttr(AVin) /= 0) iList = mct_aVect_ExportIList2c(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    if (mct_aVect_nRattr(AVin) /= 0) rList = mct_aVect_ExportRList2c(AVin)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    call mct_aVect_init(AVout,iList=iList,rList=rList,lsize=lsizen)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    call mct_aVect_init(AVout,iList=iList,lsize=lsizen)
drv/driver/.svn/text-base/seq_rearr_mod.F90.svn-base:    call mct_aVect_init(AVout,rList=rList,lsize=lsizen)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in)          :: frac_a ! domain fractions
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  a2x_a ! model to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  x2a_a ! drv to model bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kArea = mct_aVect_indexRA(dom_a%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kLat  = mct_aVect_indexRA(dom_a%data,latname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ka    = mct_aVect_indexRA(frac_a,afracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kl    = mct_aVect_indexRA(frac_a,lfracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ko    = mct_aVect_indexRA(frac_a,ofracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ki    = mct_aVect_indexRA(frac_a,ifracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(a2x_a)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(x2a_a)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in)          :: frac_l ! frac bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  l2x_l ! model to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  x2l_l ! drv to model bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kArea = mct_aVect_indexRA(dom_l%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kl    = mct_aVect_indexRA(frac_l,lfrinname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ka    = mct_aVect_indexRA(dom_l%data,ascalname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(l2x_l)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(x2l_l)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in)          ::  r2x_r ! model to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kArea = mct_aVect_indexRA(dom_r%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   lSize = mct_avect_lSize(r2x_r)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in)          :: frac_o ! frac bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  o2x_o ! model to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  x2o_o ! drv to model bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  xao_o ! drv to model bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  r2x_o ! roff to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kArea = mct_aVect_indexRA(dom_o%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ko    = mct_aVect_indexRA(frac_o,ofracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ki    = mct_aVect_indexRA(frac_o,ifracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(o2x_o)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(xao_o)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(x2o_o)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(r2x_o)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in)          :: frac_i ! frac bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  i2x_i ! model to drv bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect),intent(in),optional ::  x2i_i ! drv to model bundle
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kArea = mct_aVect_indexRA(dom_i%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kLat  = mct_aVect_indexRA(dom_i%data,latname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ki    = mct_aVect_indexRA(frac_i,ifracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ko    = mct_aVect_indexRA(frac_i,ofracname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(i2x_i)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      lSize = mct_avect_lSize(x2i_i)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect) , intent(in) :: AV
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_avect)  :: AV1         ! local avect with one field
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_avect)  :: AVr1        ! avect on root with one field
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_avect)  :: AVr2        ! avect on root with one field
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ns = mct_aVect_lsize(AV)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   npts = mct_aVect_lsize(dom%data)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   km = mct_aVect_indexRA(dom%data,'mask')
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   ka = mct_aVect_indexRA(dom%data,afldname)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   kflds = mct_aVect_nRattr(AV)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      npts = mct_aVect_lsize(AV)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      call mct_aVect_init(AV1,rList='varf1',lsize=ns)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      call mct_aVect_gather(AV1,AVr1,gsmap,0,mpicom,rcode)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      call mct_aVect_gather(AV1,AVr2,gsmap,0,mpicom,rcode)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         npts = mct_aVect_lsize(AVr1)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         call mct_aVect_gather(AV1,AVr2,gsmap,0,mpicom,rcode)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:            npts = mct_aVect_lsize(AVr2)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      call mct_avect_clean(AV1)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         call mct_aVect_clean(AVr1)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         call mct_aVect_clean(AVr2)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:      npts = mct_aVect_lsize(AV)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         call mct_aVect_getRList(mstring,k,AV)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect) , intent(in) :: AV1
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   type(mct_aVect) , intent(in) :: AV2
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   n1 = mct_aVect_lsize(AV1)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   k1 = mct_aVect_nRattr(AV1)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   n2 = mct_aVect_lsize(AV2)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:   k2 = mct_aVect_nRattr(AV2)
drv/driver/.svn/text-base/seq_diag_mct.F90.svn-base:         call mct_aVect_getRList(mstring,k,AV1)
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! atm areas from mapping file
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! lnd areas set to atm areas
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:       ka = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:       km = mct_aVect_indexRa(dom_a%data, "aream" )
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_l%data,"aream")
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    call mct_aVect_clean(areasrc)      
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect), intent(in)  :: av_a
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect), intent(out) :: av_l
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)        :: av_l_f     ! temporary flux attribute vector
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)        :: av_l_s     ! temporary state attribute vector
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect) ,intent(in)  :: av_l
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect) ,intent(out) :: av_a
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect) ,intent(in), optional :: fractions_l
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect) ,intent(in), optional :: fractions_a
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)          :: av_a_f     ! temporary flux attribute vector
drv/driver/.svn/text-base/map_atmlnd_mct.F90.svn-base:    type(mct_aVect)          :: av_a_s     ! temporary state attribute vector
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: g2x_s
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    call mct_aVect_init(g2x_s, rList=seq_flds_g2x_fields, &
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    call mct_aVect_zero(g2x_s)
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: g2x_s  ! input
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: x2s_s  ! output
drv/driver/.svn/text-base/mrg_x2s_mct.F90.svn-base:    call mct_aVect_copy(aVin=g2x_s, aVout=x2s_s, vector=usevector)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:  type(mct_aVect), private :: av3d_a, av3d_o
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! atm areas from mapping file
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       ka = mct_aVect_indexRa(dom_a%data, "area" )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       km = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       km = mct_aVect_indexRA(dom_a%data,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_clean(areasrc)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_avect_init(av3d_a,rList='ux:uy:uz',lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       klon = mct_aVect_indexRa(dom_a%data, "lon" )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       klat = mct_aVect_indexRa(dom_a%data, "lat" )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_avect_init(av3d_o,rList='ux:uy:uz',lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       klon = mct_aVect_indexRa(dom_o%data, "lon" )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       klat = mct_aVect_indexRa(dom_o%data, "lat" )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! atm areas from mapping file
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       km = mct_aVect_indexRA(dom_a%data,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_clean(areasrc)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:       call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) ,intent(in)          :: av_a
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) ,intent(out)         :: av_o
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: av_o_f     ! temporary flux attribute vector
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: av_o_s     ! temporary state attribute vector
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!tcx            lsize = mct_aVect_lsize(av_o)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_init (av_o_f, rlist=fluxlist , lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_copy (aVin=av_o_f, aVout=av_o, vector=usevector)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_clean(av_o_f)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            lsize = mct_aVect_lsize(av_o)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_init (av_o_s, rlist=statelist, lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_copy (aVin=av_o_s, aVout=av_o, vector=usevector)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!            call mct_aVect_clean(av_o_s)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:         ku = mct_aVect_indexRA(av_a, 'Sa_u', perrwith='quiet')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:         kv = mct_aVect_indexRA(av_a, 'Sa_v', perrwith='quiet')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:         ku = mct_aVect_indexRA(av_a, 'Sa_u', perrwith='quiet')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:         kv = mct_aVect_indexRA(av_a, 'Sa_v', perrwith='quiet')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kux = mct_aVect_indexRA(av3d_a,'ux')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kuy = mct_aVect_indexRA(av3d_a,'uy')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kuz = mct_aVect_indexRA(av3d_a,'uz')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            lsize = mct_aVect_lsize(av_a)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kux = mct_aVect_indexRA(av3d_o,'ux')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kuy = mct_aVect_indexRA(av3d_o,'uy')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            kuz = mct_aVect_indexRA(av3d_o,'uz')
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:            lsize = mct_aVect_lsize(av_o)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) , intent(in)           :: av_o
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) , intent(out)          :: av_a
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) , intent(in), optional :: fractions_o
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect) , intent(in), optional :: fractions_a
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:    type(mct_aVect)          :: av_a_f, av_a_s
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!tcx                lsize = mct_aVect_lsize(av_a)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_init (av_a_f, rlist=fluxlist , lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_copy (aVin=av_a_f, aVout=av_a, vector=usevector)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_clean(av_a_f)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                lsize = mct_aVect_lsize(av_a)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_init (av_a_s, rlist=statelist, lsize=lsize)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_copy (aVin=av_a_s, aVout=av_a, vector=usevector)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!                call mct_aVect_clean(av_a_s)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   type(mct_Avect),intent(in)   :: buni    ! input  attribute vec
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   type(mct_Avect),intent(out)  :: buno    ! output attribute vec
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   kui   = mct_aVect_indexRA(buni,fld1,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   kvi   = mct_aVect_indexRA(buni,fld2,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   kuo   = mct_aVect_indexRA(buno,fld1,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   kvo   = mct_aVect_indexRA(buno,fld2,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:!   kin   = mct_aVect_indexIA(domi%data,"GlobGridNum",perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   klati = mct_aVect_indexRA(domi%data,"lat"        ,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   kloni = mct_aVect_indexRA(domi%data,"lon"        ,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   klato = mct_aVect_indexRA(domo%data,"lat"        ,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   klono = mct_aVect_indexRA(domo%data,"lon"        ,perrWith=subName)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:     npts = mct_aVect_lSize(domi%data)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:     npts = mct_aVect_lSize(buno)
drv/driver/.svn/text-base/map_atmocn_mct.F90.svn-base:   npts = mct_aVect_lSize(buni)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_aa%dom%data,"area"  ,perrWith='aa area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_aa%dom%data,"aream" ,perrWith='aa aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_aa%dom%data,"ascale",perrWith='aa ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_ll%dom%data,"area"  ,perrWith='ll area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_ll%dom%data,"aream" ,perrWith='ll aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_ll%dom%data,"ascale",perrWith='ll ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_rr%dom%data,"area"  ,perrWith='rr area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_rr%dom%data,"aream" ,perrWith='rr aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_rr%dom%data,"ascale",perrWith='rr ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_ss%dom%data,"area"  ,perrWith='ss area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_ss%dom%data,"aream" ,perrWith='ss aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_ss%dom%data,"ascale",perrWith='ss ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_oo%dom%data,"area"  ,perrWith='oo area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_oo%dom%data,"aream" ,perrWith='oo aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_oo%dom%data,"ascale",perrWith='oo ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_ii%dom%data,"area"  ,perrWith='ii area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_ii%dom%data,"aream" ,perrWith='ii aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_ii%dom%data,"ascale",perrWith='ii ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k1 = mct_aVect_indexRa(cdata_gg%dom%data,"area"  ,perrWith='gg area ')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k2 = mct_aVect_indexRa(cdata_gg%dom%data,"aream" ,perrWith='gg aream')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      k3 = mct_aVect_indexRa(cdata_gg%dom%data,"ascale",perrWith='gg ascale')
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2a_aa)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2l_ll)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_init(r2xacc_rx%data, r2x_rx, mct_aVect_lsize(r2x_rx))
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2s_ss)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2i_ii)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2g_gg)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_zero(x2o_oo)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_init(x2oacc_ox%data, x2o_ox, mct_aVect_lsize(x2o_ox))
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_aVect_init(xao_ox, rList=seq_flds_xao_fields, lsize=mct_aVect_lsize(o2x_ox))
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_aVect_zero(xao_ox)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:      call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:                  call mct_aVect_copy(aVin=r2x_ox, aVout=x2oacc_ox%data)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         if (ocn_prognostic) call mct_avect_vecmult(x2o_oo,drv2mdl_oo,seq_flds_x2o_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         if (ice_prognostic) call mct_avect_vecmult(x2i_ii,drv2mdl_ii,seq_flds_x2i_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:            call mct_avect_vecmult(x2l_ll,drv2mdl_ll,seq_flds_x2l_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:            call mct_avect_vecmult(x2s_ss,drv2mdl_ss,seq_flds_x2s_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:            call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:            call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         if (atm_prognostic) call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         if (glc_prognostic) call mct_avect_vecmult(x2g_gg,drv2mdl_gg,seq_flds_x2g_fluxes)
drv/driver/.svn/text-base/ccsm_comp_mod.F90.svn-base:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! rof areas from mapping file
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       ka = mct_aVect_indexRa(dom_o%data, "aream" )
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       km = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       km = mct_aVect_indexRA(dom_r%data,"aream")
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       call mct_aVect_clean(areasrc)
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!       call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:       km = mct_aVect_indexRA(dom_r%data,"aream", perrWith=subName)
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:       ka = mct_aVect_indexRA(areasrc   ,"aream", perrWith=subName)
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:       call mct_aVect_clean(areasrc)
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:    type(mct_aVect),intent(in) :: r2x_r
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:    type(mct_aVect),intent(out):: r2x_o
drv/driver/.svn/text-base/map_rofocn_mct.F90.svn-base:!tcx    call mct_aVect_zero(r2x_o)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_glcglc_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_snosno_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: a2x_l
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    call mct_aVect_init(a2x_l, rList=seq_flds_a2x_fields, &
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    call mct_aVect_zero(a2x_l)
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: a2x_l  ! input
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    type(mct_aVect), intent(inout)  :: x2l_l  ! output
drv/driver/.svn/text-base/mrg_x2l_mct.F90.svn-base:    call mct_aVect_copy(aVin=a2x_l, aVout=x2l_l, vector=usevector)
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect)          :: areasrc           ! glc areas from mapping file
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect)          :: areadst           ! sno areas from mapping file
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_s%data,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_g%data,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    km = mct_aVect_indexRA(dom_g%data,"aream")
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    call mct_aVect_clean(areasrc)      
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    call mct_aVect_clean(areadst)      
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_g
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_s
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_s
drv/driver/.svn/text-base/map_snoglc_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_g
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_ocnocn_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_lndlnd_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cc
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cx
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect) :: av_test
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:      call mct_avect_clean(av_test)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(in) :: av_cx
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:    type(mct_aVect),intent(out):: av_cc
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/.svn/text-base/map_iceice_mct.F90.svn-base:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_snoglc_mct.F90:    type(mct_aVect)          :: areasrc           ! glc areas from mapping file
drv/driver/map_snoglc_mct.F90:    type(mct_aVect)          :: areadst           ! sno areas from mapping file
drv/driver/map_snoglc_mct.F90:    call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_snoglc_mct.F90:    call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/map_snoglc_mct.F90:    km = mct_aVect_indexRA(dom_s%data,"aream")
drv/driver/map_snoglc_mct.F90:    ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/map_snoglc_mct.F90:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_snoglc_mct.F90:    km = mct_aVect_indexRA(dom_g%data,"aream")
drv/driver/map_snoglc_mct.F90:    ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_snoglc_mct.F90:    km = mct_aVect_indexRA(dom_g%data,"aream")
drv/driver/map_snoglc_mct.F90:    call mct_aVect_clean(areasrc)      
drv/driver/map_snoglc_mct.F90:    call mct_aVect_clean(areadst)      
drv/driver/map_snoglc_mct.F90:    type(mct_aVect),intent(in) :: av_g
drv/driver/map_snoglc_mct.F90:    type(mct_aVect),intent(out):: av_s
drv/driver/map_snoglc_mct.F90:    type(mct_aVect),intent(in) :: av_s
drv/driver/map_snoglc_mct.F90:    type(mct_aVect),intent(out):: av_g
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_lndlnd_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_lndlnd_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_lndlnd_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_lndlnd_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_lndlnd_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_lndlnd_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_lndlnd_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_lndlnd_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_lndlnd_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_lndlnd_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/map_atmocn_mct.F90:  type(mct_aVect), private :: av3d_a, av3d_o
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: areadst           ! atm areas from mapping file
drv/driver/map_atmocn_mct.F90:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_atmocn_mct.F90:       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/map_atmocn_mct.F90:       ka = mct_aVect_indexRa(dom_a%data, "area" )
drv/driver/map_atmocn_mct.F90:       km = mct_aVect_indexRA(areasrc   , "aream")
drv/driver/map_atmocn_mct.F90:       ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/map_atmocn_mct.F90:       km = mct_aVect_indexRA(dom_a%data,"aream")
drv/driver/map_atmocn_mct.F90:       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_atmocn_mct.F90:       km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/map_atmocn_mct.F90:       call mct_aVect_clean(areasrc)
drv/driver/map_atmocn_mct.F90:       call mct_aVect_clean(areadst)      
drv/driver/map_atmocn_mct.F90:       call mct_avect_init(av3d_a,rList='ux:uy:uz',lsize=lsize)
drv/driver/map_atmocn_mct.F90:       klon = mct_aVect_indexRa(dom_a%data, "lon" )
drv/driver/map_atmocn_mct.F90:       klat = mct_aVect_indexRa(dom_a%data, "lat" )
drv/driver/map_atmocn_mct.F90:       call mct_avect_init(av3d_o,rList='ux:uy:uz',lsize=lsize)
drv/driver/map_atmocn_mct.F90:       klon = mct_aVect_indexRa(dom_o%data, "lon" )
drv/driver/map_atmocn_mct.F90:       klat = mct_aVect_indexRa(dom_o%data, "lat" )
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: areasrc           ! ocn areas from mapping file
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: areadst           ! atm areas from mapping file
drv/driver/map_atmocn_mct.F90:       call mct_aVect_init( areasrc, rList="aream", lsize=lsize )
drv/driver/map_atmocn_mct.F90:       call mct_aVect_init( areadst, rList="aream", lsize=lsize )
drv/driver/map_atmocn_mct.F90:       km = mct_aVect_indexRA(dom_o%data,"aream")
drv/driver/map_atmocn_mct.F90:       ka = mct_aVect_indexRA(areasrc   ,"aream")
drv/driver/map_atmocn_mct.F90:       km = mct_aVect_indexRA(dom_a%data,"aream")
drv/driver/map_atmocn_mct.F90:       ka = mct_aVect_indexRA(areadst   ,"aream")
drv/driver/map_atmocn_mct.F90:       call mct_aVect_clean(areasrc)
drv/driver/map_atmocn_mct.F90:       call mct_aVect_clean(areadst)      
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) ,intent(in)          :: av_a
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) ,intent(out)         :: av_o
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: av_o_f     ! temporary flux attribute vector
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: av_o_s     ! temporary state attribute vector
drv/driver/map_atmocn_mct.F90:!tcx            lsize = mct_aVect_lsize(av_o)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_init (av_o_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_copy (aVin=av_o_f, aVout=av_o, vector=usevector)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_clean(av_o_f)
drv/driver/map_atmocn_mct.F90:!            lsize = mct_aVect_lsize(av_o)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_init (av_o_s, rlist=statelist, lsize=lsize)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_copy (aVin=av_o_s, aVout=av_o, vector=usevector)
drv/driver/map_atmocn_mct.F90:!            call mct_aVect_clean(av_o_s)
drv/driver/map_atmocn_mct.F90:         ku = mct_aVect_indexRA(av_a, 'Sa_u', perrwith='quiet')
drv/driver/map_atmocn_mct.F90:         kv = mct_aVect_indexRA(av_a, 'Sa_v', perrwith='quiet')
drv/driver/map_atmocn_mct.F90:         ku = mct_aVect_indexRA(av_a, 'Sa_u', perrwith='quiet')
drv/driver/map_atmocn_mct.F90:         kv = mct_aVect_indexRA(av_a, 'Sa_v', perrwith='quiet')
drv/driver/map_atmocn_mct.F90:            kux = mct_aVect_indexRA(av3d_a,'ux')
drv/driver/map_atmocn_mct.F90:            kuy = mct_aVect_indexRA(av3d_a,'uy')
drv/driver/map_atmocn_mct.F90:            kuz = mct_aVect_indexRA(av3d_a,'uz')
drv/driver/map_atmocn_mct.F90:            lsize = mct_aVect_lsize(av_a)
drv/driver/map_atmocn_mct.F90:            kux = mct_aVect_indexRA(av3d_o,'ux')
drv/driver/map_atmocn_mct.F90:            kuy = mct_aVect_indexRA(av3d_o,'uy')
drv/driver/map_atmocn_mct.F90:            kuz = mct_aVect_indexRA(av3d_o,'uz')
drv/driver/map_atmocn_mct.F90:            lsize = mct_aVect_lsize(av_o)
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) , intent(in)           :: av_o
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) , intent(out)          :: av_a
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) , intent(in), optional :: fractions_o
drv/driver/map_atmocn_mct.F90:    type(mct_aVect) , intent(in), optional :: fractions_a
drv/driver/map_atmocn_mct.F90:    type(mct_aVect)          :: av_a_f, av_a_s
drv/driver/map_atmocn_mct.F90:!tcx                lsize = mct_aVect_lsize(av_a)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_init (av_a_f, rlist=fluxlist , lsize=lsize)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_copy (aVin=av_a_f, aVout=av_a, vector=usevector)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_clean(av_a_f)
drv/driver/map_atmocn_mct.F90:!                lsize = mct_aVect_lsize(av_a)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_init (av_a_s, rlist=statelist, lsize=lsize)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_copy (aVin=av_a_s, aVout=av_a, vector=usevector)
drv/driver/map_atmocn_mct.F90:!                call mct_aVect_clean(av_a_s)
drv/driver/map_atmocn_mct.F90:   type(mct_Avect),intent(in)   :: buni    ! input  attribute vec
drv/driver/map_atmocn_mct.F90:   type(mct_Avect),intent(out)  :: buno    ! output attribute vec
drv/driver/map_atmocn_mct.F90:   kui   = mct_aVect_indexRA(buni,fld1,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   kvi   = mct_aVect_indexRA(buni,fld2,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   kuo   = mct_aVect_indexRA(buno,fld1,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   kvo   = mct_aVect_indexRA(buno,fld2,perrWith=subName)
drv/driver/map_atmocn_mct.F90:!   kin   = mct_aVect_indexIA(domi%data,"GlobGridNum",perrWith=subName)
drv/driver/map_atmocn_mct.F90:   klati = mct_aVect_indexRA(domi%data,"lat"        ,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   kloni = mct_aVect_indexRA(domi%data,"lon"        ,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   klato = mct_aVect_indexRA(domo%data,"lat"        ,perrWith=subName)
drv/driver/map_atmocn_mct.F90:   klono = mct_aVect_indexRA(domo%data,"lon"        ,perrWith=subName)
drv/driver/map_atmocn_mct.F90:     npts = mct_aVect_lSize(domi%data)
drv/driver/map_atmocn_mct.F90:     npts = mct_aVect_lSize(buno)
drv/driver/map_atmocn_mct.F90:   npts = mct_aVect_lSize(buni)
drv/driver/seq_rearr_mod.F90:    type(mct_aVect),intent(inout),optional :: AV1_old
drv/driver/seq_rearr_mod.F90:    type(mct_aVect),intent(inout),optional :: AV2_old
drv/driver/seq_rearr_mod.F90:    type(mct_aVect),intent(inout),optional :: AV1_new
drv/driver/seq_rearr_mod.F90:    type(mct_aVect),intent(inout),optional :: AV2_new
drv/driver/seq_rearr_mod.F90:    call mct_avect_zero(dom_new%data)
drv/driver/seq_rearr_mod.F90:  type(mct_aVect), intent(INOUT):: AVin
drv/driver/seq_rearr_mod.F90:  if (seq_comm_iamin(IDin)) lsizei = mct_aVect_lsize(AVin)
drv/driver/seq_rearr_mod.F90:    if (mct_aVect_nIAttr(AVin) /= 0) iList = mct_aVect_ExportIList2c(AVin)
drv/driver/seq_rearr_mod.F90:    if (mct_aVect_nRattr(AVin) /= 0) rList = mct_aVect_ExportRList2c(AVin)
drv/driver/seq_rearr_mod.F90:      call mct_aVect_init(AVin,iList=iList,rList=rList,lsize=lsizen)
drv/driver/seq_rearr_mod.F90:      call mct_aVect_init(AVin,iList=iList,lsize=lsizen)
drv/driver/seq_rearr_mod.F90:      call mct_aVect_init(AVin,rList=rList,lsize=lsizen)
drv/driver/seq_rearr_mod.F90:  type(mct_aVect), intent(INOUT):: AVin
drv/driver/seq_rearr_mod.F90:  type(mct_aVect), intent(INOUT):: AVout
drv/driver/seq_rearr_mod.F90:  if (seq_comm_iamin(IDin)) lsizei = mct_aVect_lsize(AVin)
drv/driver/seq_rearr_mod.F90:    if (mct_aVect_nIAttr(AVin) /= 0) iList = mct_aVect_ExportIList2c(AVin)
drv/driver/seq_rearr_mod.F90:    if (mct_aVect_nRattr(AVin) /= 0) rList = mct_aVect_ExportRList2c(AVin)
drv/driver/seq_rearr_mod.F90:    call mct_aVect_init(AVout,iList=iList,rList=rList,lsize=lsizen)
drv/driver/seq_rearr_mod.F90:    call mct_aVect_init(AVout,iList=iList,lsize=lsizen)
drv/driver/seq_rearr_mod.F90:    call mct_aVect_init(AVout,rList=rList,lsize=lsizen)
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(inout) :: a2x_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(inout) :: i2x_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(inout) :: r2x_o
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_init(a2x_o, rList=seq_flds_a2x_fields, &
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_zero(a2x_o)
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_init(i2x_o, rList=seq_flds_i2x_fields, &
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_zero(i2x_o)
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_init(r2x_o, rList=seq_flds_r2x_fields, &
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_zero(r2x_o)
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(in)    :: a2x_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(in)    :: i2x_o
drv/driver/mrg_x2o_mct.F90:!!    type(mct_aVect), intent(in)    :: r2x_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(in)    :: xao_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(in)    :: fractions_o
drv/driver/mrg_x2o_mct.F90:    type(mct_aVect), intent(inout) :: x2o_o
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_zero(x2o_o)
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_copy(aVin=a2x_o, aVout=x2o_o, vector=usevector)
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_copy(aVin=i2x_o, aVout=x2o_o, vector=usevector)
drv/driver/mrg_x2o_mct.F90:!!    call mct_aVect_copy(aVin=r2x_o, aVout=x2o_o, vector=usevector)
drv/driver/mrg_x2o_mct.F90:    call mct_aVect_copy(aVin=xao_o, aVout=x2o_o, vector=usevector)
drv/driver/mrg_x2o_mct.F90:    ki  = mct_aVect_indexRa(fractions_o,"ifrac",perrWith=subName)
drv/driver/mrg_x2o_mct.F90:    ko  = mct_aVect_indexRa(fractions_o,"ofrac",perrWith=subName)
drv/driver/mrg_x2o_mct.F90:    kir = mct_aVect_indexRa(fractions_o,"ifrad",perrWith=subName)
drv/driver/mrg_x2o_mct.F90:    kor = mct_aVect_indexRa(fractions_o,"ofrad",perrWith=subName)
drv/driver/mrg_x2o_mct.F90:    lsize = mct_aVect_lsize(x2o_o)
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)  :: fractions
drv/driver/seq_flux_mct.F90:    kx = mct_aVect_indexRA(fractions,"ofrac")
drv/driver/seq_flux_mct.F90:    type(mct_aVect)                 :: avdom_oe
drv/driver/seq_flux_mct.F90:    call mct_avect_init(avdom_oe,dom_o%data,lsize=nloc_oe)
drv/driver/seq_flux_mct.F90:    kmsk = mct_aVect_indexRA(avdom_oe,"mask",dieWith=subName)
drv/driver/seq_flux_mct.F90:    call mct_aVect_clean(avdom_oe)
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(inout) :: xao_o
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(inout) :: fractions_o
drv/driver/seq_flux_mct.F90:       kx = mct_aVect_indexRA(fractions_o,"ifrac")
drv/driver/seq_flux_mct.F90:       kr = mct_aVect_indexRA(fractions_o,"ifrad")
drv/driver/seq_flux_mct.F90:       kx = mct_aVect_indexRA(fractions_o,"ofrac")
drv/driver/seq_flux_mct.F90:       kr = mct_aVect_indexRA(fractions_o,"ofrad")
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: a2x  
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: o2x
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(inout) :: xao_a
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(inout) :: xao_o
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: fractions_a
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: fractions_o
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: a2x_e
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: o2x_e
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: xaop_ae
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: xaop_oe
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: xaop_a
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: xaop_o
drv/driver/seq_flux_mct.F90:    type(mct_aVect) :: fractions_oe
drv/driver/seq_flux_mct.F90:       call mct_AVect_init(a2x_e, a2x, nloc_ae)
drv/driver/seq_flux_mct.F90:       call mct_AVect_zero(a2x_e)
drv/driver/seq_flux_mct.F90:       call mct_AVect_init(o2x_e, o2x, nloc_oe)
drv/driver/seq_flux_mct.F90:       call mct_AVect_zero(o2x_e)
drv/driver/seq_flux_mct.F90:       call mct_aVect_clean(a2x_e)
drv/driver/seq_flux_mct.F90:       call mct_aVect_clean(o2x_e)
drv/driver/seq_flux_mct.F90:    call mct_aVect_init(xaop_ae,rList=trim(fldlist),lsize=nloc_ae)
drv/driver/seq_flux_mct.F90:    call mct_aVect_zero(xaop_ae)
drv/driver/seq_flux_mct.F90:    call mct_aVect_init(xaop_oe,rList=trim(fldlist),lsize=nloc_oe)
drv/driver/seq_flux_mct.F90:    call mct_aVect_zero(xaop_oe)
drv/driver/seq_flux_mct.F90:    call mct_aVect_init(xaop_a, rList=trim(fldlist),lsize=nloc_a)
drv/driver/seq_flux_mct.F90:    call mct_aVect_zero(xaop_a)
drv/driver/seq_flux_mct.F90:    call mct_aVect_init(xaop_o, rList=trim(fldlist),lsize=nloc_o)
drv/driver/seq_flux_mct.F90:    call mct_aVect_zero(xaop_o)
drv/driver/seq_flux_mct.F90:    index_tref   = mct_aVect_indexRA(xaop_ae,"So_tref")
drv/driver/seq_flux_mct.F90:    index_qref   = mct_aVect_indexRA(xaop_ae,"So_qref")
drv/driver/seq_flux_mct.F90:    index_duu10n = mct_aVect_indexRA(xaop_ae,"Sx_duu10n")
drv/driver/seq_flux_mct.F90:    index_ustar  = mct_aVect_indexRA(xaop_ae,"So_ustar")
drv/driver/seq_flux_mct.F90:    index_ssq    = mct_aVect_indexRA(xaop_ae,"So_ssq")
drv/driver/seq_flux_mct.F90:    index_re     = mct_aVect_indexRA(xaop_ae,"So_re")
drv/driver/seq_flux_mct.F90:    index_u10    = mct_aVect_indexRA(xaop_ae,"So_u10")
drv/driver/seq_flux_mct.F90:    index_taux   = mct_aVect_indexRA(xaop_ae,"Faox_taux")
drv/driver/seq_flux_mct.F90:    index_tauy   = mct_aVect_indexRA(xaop_ae,"Faox_tauy")
drv/driver/seq_flux_mct.F90:    index_lat    = mct_aVect_indexRA(xaop_ae,"Faox_lat")
drv/driver/seq_flux_mct.F90:    index_sen    = mct_aVect_indexRA(xaop_ae,"Faox_sen")
drv/driver/seq_flux_mct.F90:    index_evap   = mct_aVect_indexRA(xaop_ae,"Faox_evap")
drv/driver/seq_flux_mct.F90:    index_lwup   = mct_aVect_indexRA(xaop_ae,"Faox_lwup")
drv/driver/seq_flux_mct.F90:    index_sumwt  = mct_aVect_indexRA(xaop_ae,"sumwt")
drv/driver/seq_flux_mct.F90:    kf = mct_aVect_indexRA(fractions_o,"ofrac")
drv/driver/seq_flux_mct.F90:    call mct_avect_init(fractions_oe,fractions_o,lsize=nloc_oe)
drv/driver/seq_flux_mct.F90:    call mct_aVect_clean(fractions_oe)
drv/driver/seq_flux_mct.F90:    call mct_avect_clean(xaop_ae)
drv/driver/seq_flux_mct.F90:    call mct_avect_clean(xaop_oe)
drv/driver/seq_flux_mct.F90:    call mct_avect_copy(xaop_a, xao_a)
drv/driver/seq_flux_mct.F90:    call mct_avect_copy(xaop_o, xao_o)
drv/driver/seq_flux_mct.F90:    call mct_avect_clean(xaop_a)
drv/driver/seq_flux_mct.F90:    call mct_avect_clean(xaop_o)
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: a2x  
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(in)    :: o2x
drv/driver/seq_flux_mct.F90:    type(mct_aVect), intent(inout) :: xao
drv/driver/seq_flux_mct.F90:    nloc = mct_aVect_lsize(xao)
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in)          :: frac_a ! domain fractions
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  a2x_a ! model to drv bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  x2a_a ! drv to model bundle
drv/driver/seq_diag_mct.F90:   kArea = mct_aVect_indexRA(dom_a%data,afldname)
drv/driver/seq_diag_mct.F90:   kLat  = mct_aVect_indexRA(dom_a%data,latname)
drv/driver/seq_diag_mct.F90:   ka    = mct_aVect_indexRA(frac_a,afracname)
drv/driver/seq_diag_mct.F90:   kl    = mct_aVect_indexRA(frac_a,lfracname)
drv/driver/seq_diag_mct.F90:   ko    = mct_aVect_indexRA(frac_a,ofracname)
drv/driver/seq_diag_mct.F90:   ki    = mct_aVect_indexRA(frac_a,ifracname)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(a2x_a)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(x2a_a)
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in)          :: frac_l ! frac bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  l2x_l ! model to drv bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  x2l_l ! drv to model bundle
drv/driver/seq_diag_mct.F90:   kArea = mct_aVect_indexRA(dom_l%data,afldname)
drv/driver/seq_diag_mct.F90:   kl    = mct_aVect_indexRA(frac_l,lfrinname)
drv/driver/seq_diag_mct.F90:   ka    = mct_aVect_indexRA(dom_l%data,ascalname)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(l2x_l)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(x2l_l)
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in)          ::  r2x_r ! model to drv bundle
drv/driver/seq_diag_mct.F90:   kArea = mct_aVect_indexRA(dom_r%data,afldname)
drv/driver/seq_diag_mct.F90:   lSize = mct_avect_lSize(r2x_r)
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in)          :: frac_o ! frac bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  o2x_o ! model to drv bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  x2o_o ! drv to model bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  xao_o ! drv to model bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  r2x_o ! roff to drv bundle
drv/driver/seq_diag_mct.F90:   kArea = mct_aVect_indexRA(dom_o%data,afldname)
drv/driver/seq_diag_mct.F90:   ko    = mct_aVect_indexRA(frac_o,ofracname)
drv/driver/seq_diag_mct.F90:   ki    = mct_aVect_indexRA(frac_o,ifracname)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(o2x_o)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(xao_o)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(x2o_o)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(r2x_o)
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in)          :: frac_i ! frac bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  i2x_i ! model to drv bundle
drv/driver/seq_diag_mct.F90:   type(mct_aVect),intent(in),optional ::  x2i_i ! drv to model bundle
drv/driver/seq_diag_mct.F90:   kArea = mct_aVect_indexRA(dom_i%data,afldname)
drv/driver/seq_diag_mct.F90:   kLat  = mct_aVect_indexRA(dom_i%data,latname)
drv/driver/seq_diag_mct.F90:   ki    = mct_aVect_indexRA(frac_i,ifracname)
drv/driver/seq_diag_mct.F90:   ko    = mct_aVect_indexRA(frac_i,ofracname)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(i2x_i)
drv/driver/seq_diag_mct.F90:      lSize = mct_avect_lSize(x2i_i)
drv/driver/seq_diag_mct.F90:   type(mct_aVect) , intent(in) :: AV
drv/driver/seq_diag_mct.F90:   type(mct_avect)  :: AV1         ! local avect with one field
drv/driver/seq_diag_mct.F90:   type(mct_avect)  :: AVr1        ! avect on root with one field
drv/driver/seq_diag_mct.F90:   type(mct_avect)  :: AVr2        ! avect on root with one field
drv/driver/seq_diag_mct.F90:   ns = mct_aVect_lsize(AV)
drv/driver/seq_diag_mct.F90:   npts = mct_aVect_lsize(dom%data)
drv/driver/seq_diag_mct.F90:   km = mct_aVect_indexRA(dom%data,'mask')
drv/driver/seq_diag_mct.F90:   ka = mct_aVect_indexRA(dom%data,afldname)
drv/driver/seq_diag_mct.F90:   kflds = mct_aVect_nRattr(AV)
drv/driver/seq_diag_mct.F90:      npts = mct_aVect_lsize(AV)
drv/driver/seq_diag_mct.F90:      call mct_aVect_init(AV1,rList='varf1',lsize=ns)
drv/driver/seq_diag_mct.F90:      call mct_aVect_gather(AV1,AVr1,gsmap,0,mpicom,rcode)
drv/driver/seq_diag_mct.F90:      call mct_aVect_gather(AV1,AVr2,gsmap,0,mpicom,rcode)
drv/driver/seq_diag_mct.F90:         npts = mct_aVect_lsize(AVr1)
drv/driver/seq_diag_mct.F90:         call mct_aVect_gather(AV1,AVr2,gsmap,0,mpicom,rcode)
drv/driver/seq_diag_mct.F90:            npts = mct_aVect_lsize(AVr2)
drv/driver/seq_diag_mct.F90:      call mct_avect_clean(AV1)
drv/driver/seq_diag_mct.F90:         call mct_aVect_clean(AVr1)
drv/driver/seq_diag_mct.F90:         call mct_aVect_clean(AVr2)
drv/driver/seq_diag_mct.F90:      npts = mct_aVect_lsize(AV)
drv/driver/seq_diag_mct.F90:         call mct_aVect_getRList(mstring,k,AV)
drv/driver/seq_diag_mct.F90:   type(mct_aVect) , intent(in) :: AV1
drv/driver/seq_diag_mct.F90:   type(mct_aVect) , intent(in) :: AV2
drv/driver/seq_diag_mct.F90:   n1 = mct_aVect_lsize(AV1)
drv/driver/seq_diag_mct.F90:   k1 = mct_aVect_nRattr(AV1)
drv/driver/seq_diag_mct.F90:   n2 = mct_aVect_lsize(AV2)
drv/driver/seq_diag_mct.F90:   k2 = mct_aVect_nRattr(AV2)
drv/driver/seq_diag_mct.F90:         call mct_aVect_getRList(mstring,k,AV1)
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_glcglc_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_glcglc_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_glcglc_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_glcglc_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_glcglc_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_glcglc_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_glcglc_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_glcglc_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_glcglc_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_glcglc_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_glcglc_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_wx   ! Fractions on wrf grid, juanxiong he    
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_gex   ! Fractions on geatm grid, juanxiong he    
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_ax   ! Fractions on atm grid
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_lx   ! Fractions on lnd grid 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_ix   ! Fractions on ice grid
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_ox   ! Fractions on ocn grid
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: fractions_gx   ! Fractions on glc grid
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2a_aa    ! Atm import, atm grid, atm pes - defined in atm gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: a2x_aa    ! Atm export, atm grid, atm pes - defined in atm gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2a_ax    ! Atm import, atm grid, cpl pes - defined in map_atmatm
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: a2x_ax    ! Atm export, atm grid, cpl pes - defined in map_atmatm
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: a2x_lx    ! Atm export, lnd grid, cpl pes - defined in mrg_x2l
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: a2x_ix    ! Atm export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: a2x_ox    ! Atm export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_ll    ! Lnd import, lnd grid, lnd pes - defined in lnd gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_ll    ! Lnd export, lnd grid, lnd pes - defined in lnd gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_lx    ! Lnd import, lnd grid, cpl pes - defined in map_lndlnd
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_lx    ! Lnd export, lnd grid, cpl pes - defined in map_lndlnd
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_ax    ! Lnd export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: r2x_rr    ! Rof export, rof grid, lnd pes - defined in lnd gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: r2x_rx    ! Rof export, rof grid, cpl pes - defined in map_rofrof
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: r2x_ox    ! Rof export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2s_ss    ! Sno import, sno grid, sno pes - defined in lnd gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: s2x_ss    ! Sno export, sno grid, sno pes - defined in lnd gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2s_sx    ! Sno import, sno grid, cpl pes - defined in map_snosno
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: s2x_sx    ! Sno export, sno grid, cpl pes - defined in map_snosno
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: s2x_gx    ! Sno export, glc grid, cpl pes - defined in mrg_x2g
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_ii    ! Ice import, ice grid, ice pes - defined in ice gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_ii    ! Ice export, ice grid, ice pes - defined in ice gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_ix    ! Ice import, ice grid, cpl pes - defined in map_iceice
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_ix    ! Ice export, ice grid, cpl pes - defined in map_iceice
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_ax    ! Ice export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_ox    ! Ice export, ocn grid, cpl pes - defined in mrg_x2o
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_oo    ! Ocn import, ocn grid, ocn pes - defined in ocn gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_oo    ! Ocn export, ocn grid, ocn pes - defined in ocn gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_ox    ! Ocn import, ocn grid, cpl pes - defined in map_ocnocn
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_ox    ! Ocn export, ocn grid, cpl pes - defined in map_ocnocn
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_ax    ! Ocn export, atm grid, cpl pes - defined in mrg_x2a
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_ix    ! Ocn export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xao_ox    ! Atm-ocn fluxes, ocn grid, cpl pes - defined in flux_ao gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xao_ax    ! Atm-ocn fluxes, atm grid, cpl pes - defined in flux_ao gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2g_gg    ! Glc import, glc grid, ice pes - defined in glc gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: g2x_gg    ! Glc export, glc grid, ice pes - defined in glc gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2g_gx    ! Glc import, glc grid, cpl pes - defined in map_glcglc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: g2x_gx    ! Glc export, glc grid, cpl pes - defined in map_glcglc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: g2x_sx    ! Glc export, sno grid, cpl pes - defined in mrg_x2s
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_lx    ! geatm export, lnd grid, cpl pes - defined in mrg_x2l
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_ix    ! geatm export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_ox    ! geatm export, ocn grid, cpl pes - defined in mrg_x2o   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xchemo_ox    ! geatm-ocn fluxes, ocn grid, cpl pes - defined in flux_wo gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xchemo_gex    ! geatm-ocn fluxes, wrf grid, cpl pes - defined in flux_wo gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_chemx    ! lnd export, geatm grid, cpl pes - defined in mrg_x2ge
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_chemchem    ! lnd export, geatm grid, cpl pes - defined in mrg_x2ge   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_chemx    ! lnd import, geatm grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_chemchem   ! lnd import, geatm grid, defunct   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_chemx    ! Ice export, geatm grid, cpl pes - defined in mrg_x2ge
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_chemchem    ! Ice export, geatm grid, cpl pes - defined in mrg_x2ge   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_chemx    ! Ice import, geatm grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_chemchem   ! Ice import, geatm grid, defunct   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_chemx    ! ocn export, geatm grid, cpl pes - defined in mrg_x2ge
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_chemchem    ! ocn export, geatm grid, cpl pes - defined in mrg_x2ge   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_chemx    ! onc import, geatm grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_chemchem  ! onc import, geatm grid, defunct  
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_caca1    ! Cam export, cam grid, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_caca2    ! Cam export, cam grid, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_cax1    ! Cam export, cam grid, rearrange, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_cax2    ! Cam export, cam grid, rearrange, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_chemx1    ! Cam export, wrf grid, defined in map_wrfcam, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: ca2x_chemx2    ! Cam export, wrf grid, defined in map_wrfcam, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2chem_chemx1    ! wrf import, wrf grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2chem_chemx2    ! wrf import, wrf grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2chem_chemchem1    ! wrf import, wrf grid, rearrange, wrf end   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2chem_chemchem2    ! wrf import, wrf grid, rearrange, wrf end   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2ca_caca1    ! Cam import, cam grid, rearrange, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2ca_caca2    ! Cam import, cam grid, rearrange, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2ca_cax1    ! Cam import, cam grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2ca_cax2    ! Cam import, cam grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_cax    ! Cam import, cam grid, defined in map_camwrf, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_chemx    ! wrf export, wrf grid, rearrange, cpl end  
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: chem2x_chemchem    ! wrf export, wrf grid, wrf end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2w_ww    ! Wrf import, wrf grid, atm pes - defined in wrf gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: w2x_ww    ! Wrf export, wrf grid, atm pes - defined in wrf gc
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2w_wx    ! Wrf import, wrf grid, cpl pes - defined in map_wrfwrf
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: w2x_wx    ! Wrf export, wrf grid, cpl pes - defined in map_wrfwrf 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: w2x_lx    ! Wrf export, lnd grid, cpl pes - defined in mrg_x2l
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: w2x_ix    ! Wrf export, ice grid, cpl pes - defined in mrg_x2i
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: w2x_ox    ! Wrf export, ocn grid, cpl pes - defined in mrg_x2o   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xwo_ox    ! Wrf-ocn fluxes, ocn grid, cpl pes - defined in flux_wo gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: xwo_wx    ! Wrf-ocn fluxes, wrf grid, cpl pes - defined in flux_wo gc 
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_wx    ! lnd export, wrf grid, cpl pes - defined in mrg_x2w
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: l2x_ww    ! lnd export, wrf grid, cpl pes - defined in mrg_x2w   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_wx    ! lnd import, wrf grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2l_ww    ! lnd import, wrf grid, defunct   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_wx    ! Ice export, wrf grid, cpl pes - defined in mrg_x2w
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: i2x_ww    ! Ice export, wrf grid, cpl pes - defined in mrg_x2w   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_wx    ! Ice import, wrf grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2i_ww    ! Ice import, wrf grid, defunct   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_wx    ! ocn export, wrf grid, cpl pes - defined in mrg_x2w
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: o2x_ww    ! ocn export, wrf grid, cpl pes - defined in mrg_x2w   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_wx    ! onc import, wrf grid, defunct
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2o_ww    ! onc import, wrf grid, defunct   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_cc1    ! Cam export, cam grid, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_cc2    ! Cam export, cam grid, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_cx1    ! Cam export, cam grid, rearrange, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_cx2    ! Cam export, cam grid, rearrange, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_mx1    ! Cam export, wrf grid, defined in map_wrfcam, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: c2x_mx2    ! Cam export, wrf grid, defined in map_wrfcam, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2m_mx1    ! wrf import, wrf grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2m_mx2    ! wrf import, wrf grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2m_mm1    ! wrf import, wrf grid, rearrange, wrf end   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2m_mm2    ! wrf import, wrf grid, rearrange, wrf end   
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2c_cc1    ! Cam import, cam grid, rearrange, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2c_cc2    ! Cam import, cam grid, rearrange, cam end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2c_cx1    ! Cam import, cam grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: x2c_cx2    ! Cam import, cam grid, merge, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: m2x_cx    ! Cam import, cam grid, defined in map_camwrf, cpl end
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: m2x_mx    ! wrf export, wrf grid, rearrange, cpl end  
drv/driver/seq_avdata_mod.F90:   type(mct_aVect) :: m2x_mm    ! wrf export, wrf grid, wrf end
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cc
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cc
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(inout) :: x2c_cx
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(inout) :: c2x_cx
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(in) :: av_cc
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(out):: av_cx
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect) :: av_test
drv/driver/map_gcamcam_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,rList=fldlist,vector=usevector)
drv/driver/map_gcamcam_mct.F90:          call mct_aVect_copy(aVin=av_cc,aVout=av_cx,vector=usevector)
drv/driver/map_gcamcam_mct.F90:      call mct_avect_init(av_test,av_cc,mct_avect_lsize(av_cc))
drv/driver/map_gcamcam_mct.F90:      do k = 1,mct_avect_nRattr(av_cc)
drv/driver/map_gcamcam_mct.F90:      do n = 1,mct_avect_lsize(av_cc)
drv/driver/map_gcamcam_mct.F90:            write(6,*) 'tcz r1 ',mct_avect_nRattr(av_cc),mct_avect_nRattr(av_test),mct_avect_lsize(av_cc),mct_avect_lsize(av_test),mct_avect_lsize(av_cx)
drv/driver/map_gcamcam_mct.F90:      call mct_avect_clean(av_test)
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(in) :: av_cx
drv/driver/map_gcamcam_mct.F90:    type(mct_aVect),intent(out):: av_cc
drv/driver/map_gcamcam_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,rList=fldlist,vector=usevector)
drv/driver/map_gcamcam_mct.F90:          call mct_aVect_copy(aVin=av_cx,aVout=av_cc,vector=usevector)
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(inout) :: l2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(inout) :: o2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(inout) :: i2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(inout) :: xao_a
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_init(l2x_a, rList=seq_flds_l2x_fields, lsize=lsize)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_zero(l2x_a)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_init(o2x_a, rList=seq_flds_o2x_fields, lsize=lsize)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_zero(o2x_a)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_init(i2x_a, rList=seq_flds_i2x_fields, lsize=lsize)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_zero(i2x_a)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_init(xao_a, rList=seq_flds_xao_fields, lsize=lsize)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_zero(xao_a)
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(in)     :: l2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(in)     :: o2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(in)     :: xao_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(in)     :: i2x_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(in)     :: fractions_a
drv/driver/mrg_x2a_mct.F90:    type(mct_aVect), intent(inout)  :: x2a_a
drv/driver/mrg_x2a_mct.F90:    call mct_avect_zero(x2a_a)
drv/driver/mrg_x2a_mct.F90:!    lSize = mct_avect_lSize(x2a_a)
drv/driver/mrg_x2a_mct.F90:    ki=mct_aVect_indexRA(fractions_a,"ifrac")
drv/driver/mrg_x2a_mct.F90:    kl=mct_aVect_indexRA(fractions_a,"lfrac")
drv/driver/mrg_x2a_mct.F90:    ko=mct_aVect_indexRA(fractions_a,"ofrac")
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_copy(aVin=l2x_a, aVout=x2a_a, vector=usevector)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_copy(aVin=o2x_a, aVout=x2a_a, vector=usevector)
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_copy(aVin=i2x_a, aVout=x2a_a, vector=usevector) 
drv/driver/mrg_x2a_mct.F90:    call mct_aVect_copy(aVin=xao_a, aVout=x2a_a, vector=usevector)
drv/driver/mrg_x2a_mct.F90:    lsize = mct_avect_lsize(x2a_a)
drv/driver/mrg_x2s_mct.F90:    type(mct_aVect), intent(inout)  :: g2x_s
drv/driver/mrg_x2s_mct.F90:    call mct_aVect_init(g2x_s, rList=seq_flds_g2x_fields, &
drv/driver/mrg_x2s_mct.F90:    call mct_aVect_zero(g2x_s)
drv/driver/mrg_x2s_mct.F90:    type(mct_aVect), intent(inout)  :: g2x_s  ! input
drv/driver/mrg_x2s_mct.F90:    type(mct_aVect), intent(inout)  :: x2s_s  ! output
drv/driver/mrg_x2s_mct.F90:    call mct_aVect_copy(aVin=g2x_s, aVout=x2s_s, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:         !BUG    iList = mct_aVect_ExportIList2c(AVin)
drv/.svn/text-base/ChangeLog.svn-base:          call mct_aVect_copy(aVin=a2x_o, aVout=x2o_o, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:          call mct_aVect_copy(aVin=i2x_o, aVout=x2o_o, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:          call mct_aVect_copy(aVin=xao_o, aVout=x2o_o, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:        ko = mct_aVect_indexRA(fractions_o,"afrac") should be
drv/.svn/text-base/ChangeLog.svn-base:        ko = mct_aVect_indexRA(fractions_a,"ofrac")	
drv/.svn/text-base/ChangeLog.svn-base:         call mct_aVect_copy(aVin=l2x_a, aVout=x2a_a, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:         call mct_aVect_copy(aVin=o2x_a, aVout=x2a_a, vector=usevector)
drv/.svn/text-base/ChangeLog.svn-base:         call mct_aVect_copy(aVin=i2x_a, aVout=x2a_a, vector=usevector) 
drv/.svn/text-base/ChangeLog.svn-base:         call mct_aVect_copy(aVin=xao_a, aVout=x2a_a, vector=usevector)
drv/shr_esmf/esmf2mct_mod.F90:    type(mct_aVect), intent(out)            :: attrVect
drv/shr_esmf/esmf2mct_mod.F90:    call mct_aVect_init(aV=attrVect, rList=trim(mct_names), lsize=dsize)
drv/shr_esmf/esmf2mct_mod.F90:    call mct_aVect_zero(ggrid%data)
drv/shr_esmf/esmf2mct_mod.F90:    type(mct_aVect), intent(inout)          :: attrVect
drv/shr_esmf/esmf2mct_mod.F90:    av_dsize = mct_aVect_lsize(aV=attrVect) 
drv/shr_esmf/esmf2mct_mod.F90:    av_nfields = mct_aVect_nRAttr(aV=attrVect)
drv/shr_esmf/esmf2mct_mod.F90:    type(mct_aVect), intent(inout)          :: attrVect
drv/shr_esmf/esmf2mct_mod.F90:        value=trim(mct_aVect_exportRList2c(attrVect)), rc=localrc)
drv/shr_esmf/esmf2mct_mod.F90:    type(mct_aVect), intent(out)            :: importAttrVect
drv/shr_esmf/esmf2mct_mod.F90:    type(mct_aVect), intent(out)            :: exportAttrVect
drv/shr_esmf/mct2esmf_mod.F90:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/mct2esmf_mod.F90:    mct_names = mct_aVect_exportRList2c(attrVect)
drv/shr_esmf/mct2esmf_mod.F90:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/mct2esmf_mod.F90:    av_dsize = mct_aVect_lsize(aV=attrVect) 
drv/shr_esmf/mct2esmf_mod.F90:    av_nfields = mct_aVect_nRAttr(aV=attrVect)
drv/shr_esmf/mct2esmf_mod.F90:    type(mct_aVect), intent(in)             :: importAttrVect
drv/shr_esmf/mct2esmf_mod.F90:    type(mct_aVect), intent(in)             :: exportAttrVect
drv/shr_esmf/mct2esmf_mod.F90:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/mct2esmf_mod.F90:        value=trim(mct_aVect_exportRList2c(attrVect)), rc=localrc)
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    type(mct_aVect), intent(out)            :: attrVect
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    call mct_aVect_init(aV=attrVect, rList=trim(mct_names), lsize=dsize)
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    call mct_aVect_zero(ggrid%data)
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    type(mct_aVect), intent(inout)          :: attrVect
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    av_dsize = mct_aVect_lsize(aV=attrVect) 
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    av_nfields = mct_aVect_nRAttr(aV=attrVect)
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    type(mct_aVect), intent(inout)          :: attrVect
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:        value=trim(mct_aVect_exportRList2c(attrVect)), rc=localrc)
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    type(mct_aVect), intent(out)            :: importAttrVect
drv/shr_esmf/.svn/text-base/esmf2mct_mod.F90.svn-base:    type(mct_aVect), intent(out)            :: exportAttrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    mct_names = mct_aVect_exportRList2c(attrVect)
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    av_dsize = mct_aVect_lsize(aV=attrVect) 
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    av_nfields = mct_aVect_nRAttr(aV=attrVect)
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    type(mct_aVect), intent(in)             :: importAttrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    type(mct_aVect), intent(in)             :: exportAttrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:    type(mct_aVect), intent(in)             :: attrVect
drv/shr_esmf/.svn/text-base/mct2esmf_mod.F90.svn-base:        value=trim(mct_aVect_exportRList2c(attrVect)), rc=localrc)
drv/shr/seq_cdata_mod.F90:      ! write(logunit,*) '  dom IList   = ',mct_avect_exportIList2c(cdata%dom%data)
drv/shr/seq_cdata_mod.F90:      ! write(logunit,*) '  dom RList   = ',mct_avect_exportRList2c(cdata%dom%data)
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(in)    :: av_i  ! input 
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(inout) :: av_o  ! output
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(in)    :: avf_i  ! extra src "weight"
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(in),optional :: avf_o   ! extra dst "weight"
drv/shr/seq_map_mod.F90:    lsize_i = mct_aVect_lsize(av_i)
drv/shr/seq_map_mod.F90:    lsize_f = mct_aVect_lsize(avf_i)
drv/shr/seq_map_mod.F90:       kf = mct_aVect_indexRA(avf_i,trim(avfifld))
drv/shr/seq_map_mod.F90:       lsize_o = mct_aVect_lsize(av_o)
drv/shr/seq_map_mod.F90:       lsize_f = mct_aVect_lsize(avf_o)
drv/shr/seq_map_mod.F90:          kf = mct_aVect_indexRA(avf_o,trim(avfofld))
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(in)    :: av_i  ! input 
drv/shr/seq_map_mod.F90:    type(mct_aVect) , intent(inout) :: av_o  ! output
drv/shr/seq_map_mod.F90:    type(mct_aVect)        :: avp_i , avp_o
drv/shr/seq_map_mod.F90:    lsize_i = mct_aVect_lsize(av_i)
drv/shr/seq_map_mod.F90:    lsize_o = mct_aVect_lsize(av_o)
drv/shr/seq_map_mod.F90:       call mct_aVect_init(avp_i, rList=trim( rList)//':'//ffld, lsize=lsize_i)
drv/shr/seq_map_mod.F90:       call mct_aVect_init(avp_o, rList=trim( rList)//':'//ffld, lsize=lsize_o)
drv/shr/seq_map_mod.F90:       lrList = trim(mct_aVect_exportRList2c(av_i))
drv/shr/seq_map_mod.F90:       call mct_aVect_init(avp_i, rList=trim(lrList)//':'//ffld, lsize=lsize_i)
drv/shr/seq_map_mod.F90:       lrList = trim(mct_aVect_exportRList2c(av_o))
drv/shr/seq_map_mod.F90:       call mct_aVect_init(avp_o, rList=trim(lrList)//':'//ffld, lsize=lsize_o)
drv/shr/seq_map_mod.F90:    call mct_aVect_copy(aVin=av_i, aVout=avp_i, VECTOR=usevector)
drv/shr/seq_map_mod.F90:    kf = mct_aVect_indexRA(avp_i,ffld)
drv/shr/seq_map_mod.F90:          kf = mct_aVect_indexRA(avp_o,ffld)
drv/shr/seq_map_mod.F90:    call mct_aVect_copy(aVin=avp_o, aVout=av_o, VECTOR=usevector)
drv/shr/seq_map_mod.F90:    call mct_aVect_clean(avp_i)
drv/shr/seq_map_mod.F90:    call mct_aVect_clean(avp_o)
drv/shr/.svn/text-base/seq_cdata_mod.F90.svn-base:      ! write(logunit,*) '  dom IList   = ',mct_avect_exportIList2c(cdata%dom%data)
drv/shr/.svn/text-base/seq_cdata_mod.F90.svn-base:      ! write(logunit,*) '  dom RList   = ',mct_avect_exportRList2c(cdata%dom%data)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(in)    :: av_i  ! input 
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(inout) :: av_o  ! output
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(in)    :: avf_i  ! extra src "weight"
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(in),optional :: avf_o   ! extra dst "weight"
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    lsize_i = mct_aVect_lsize(av_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    lsize_f = mct_aVect_lsize(avf_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       kf = mct_aVect_indexRA(avf_i,trim(avfifld))
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       lsize_o = mct_aVect_lsize(av_o)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       lsize_f = mct_aVect_lsize(avf_o)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:          kf = mct_aVect_indexRA(avf_o,trim(avfofld))
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(in)    :: av_i  ! input 
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect) , intent(inout) :: av_o  ! output
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    type(mct_aVect)        :: avp_i , avp_o
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    lsize_i = mct_aVect_lsize(av_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    lsize_o = mct_aVect_lsize(av_o)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       call mct_aVect_init(avp_i, rList=trim( rList)//':'//ffld, lsize=lsize_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       call mct_aVect_init(avp_o, rList=trim( rList)//':'//ffld, lsize=lsize_o)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       lrList = trim(mct_aVect_exportRList2c(av_i))
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       call mct_aVect_init(avp_i, rList=trim(lrList)//':'//ffld, lsize=lsize_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       lrList = trim(mct_aVect_exportRList2c(av_o))
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:       call mct_aVect_init(avp_o, rList=trim(lrList)//':'//ffld, lsize=lsize_o)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    call mct_aVect_copy(aVin=av_i, aVout=avp_i, VECTOR=usevector)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    kf = mct_aVect_indexRA(avp_i,ffld)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:          kf = mct_aVect_indexRA(avp_o,ffld)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    call mct_aVect_copy(aVin=avp_o, aVout=av_o, VECTOR=usevector)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    call mct_aVect_clean(avp_i)
drv/shr/.svn/text-base/seq_map_mod.F90.svn-base:    call mct_aVect_clean(avp_o)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    type(mct_aVect) ,intent(in) :: AV       ! data to be written
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    type(mct_aVect) :: AVroot
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    nf = mct_aVect_nRattr(AV)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:          call mct_aVect_getRList(mstring,k,AV)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:          call mct_aVect_getRList(mstring,k,AV)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    type(mct_aVect) ,intent(inout):: AV     ! data to be written
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    ns = mct_aVect_lsize(AV)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:    nf = mct_aVect_nRattr(AV)
drv/shr/.svn/text-base/seq_io_mod.F90.svn-base:       call mct_aVect_getRList(mstring,k,AV)
drv/shr/seq_io_mod.F90:    type(mct_aVect) ,intent(in) :: AV       ! data to be written
drv/shr/seq_io_mod.F90:    type(mct_aVect) :: AVroot
drv/shr/seq_io_mod.F90:    nf = mct_aVect_nRattr(AV)
drv/shr/seq_io_mod.F90:          call mct_aVect_getRList(mstring,k,AV)
drv/shr/seq_io_mod.F90:          call mct_aVect_getRList(mstring,k,AV)
drv/shr/seq_io_mod.F90:    type(mct_aVect) ,intent(inout):: AV     ! data to be written
drv/shr/seq_io_mod.F90:    ns = mct_aVect_lsize(AV)
drv/shr/seq_io_mod.F90:    nf = mct_aVect_nRattr(AV)
drv/shr/seq_io_mod.F90:       call mct_aVect_getRList(mstring,k,AV)
glc/sglc/cpl_mct/glc_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
glc/sglc/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        
glc/sglc/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        
glc/sglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
glc/sglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> stub
glc/sglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! stub   -> driver
glc/xglc/cpl_mct/glc_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2d, d2x
glc/xglc/cpl_mct/glc_comp_mct.F90:    call mct_aVect_init(d2x, rList=flds_d2x, lsize=lsize)
glc/xglc/cpl_mct/glc_comp_mct.F90:    call mct_aVect_zero(d2x)
glc/xglc/cpl_mct/glc_comp_mct.F90:    call mct_aVect_init(x2d, rList=flds_x2d, lsize=lsize)
glc/xglc/cpl_mct/glc_comp_mct.F90:    call mct_aVect_zero(x2d)
glc/xglc/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
glc/xglc/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
glc/xglc/cpl_mct/glc_comp_mct.F90:    lsize = mct_avect_lsize(x2d)
glc/xglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
glc/xglc/cpl_esmf/glc_comp_mct.F90:    call mct_aVect_zero(x2d)
glc/xglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
glc/xglc/cpl_esmf/glc_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    type(mct_aVect) :: g2x      ! temporary
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    type(mct_aVect) :: x2g      ! temporary
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    call mct_aVect_init(x2g, rList=seq_flds_x2g_fields, lsize=1)
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    call mct_aVect_init(g2x, rList=seq_flds_g2x_fields, lsize=1)
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_g2x_Sg_frac01   = mct_avect_indexra(g2x,'Sg_frac01') 
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_g2x_Sg_topo01   = mct_avect_indexra(g2x,'Sg_topo01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_g2x_Fsgg_rofi01 = mct_avect_indexra(g2x,'Fsgg_rofi01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_g2x_Fsgg_rofl01 = mct_avect_indexra(g2x,'Fsgg_rofl01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_g2x_Fsgg_hflx01 = mct_avect_indexra(g2x,'Fsgg_hflx01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_g2x_Sg_frac02   = mct_avect_indexra(g2x,'Sg_frac02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_g2x_Sg_topo02   = mct_avect_indexra(g2x,'Sg_topo02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_g2x_Fsgg_rofi02 = mct_avect_indexra(g2x,'Fsgg_rofi02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_g2x_Fsgg_rofl02 = mct_avect_indexra(g2x,'Fsgg_rofl02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_g2x_Fsgg_hflx02 = mct_avect_indexra(g2x,'Fsgg_hflx02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_g2x_Sg_frac03   = mct_avect_indexra(g2x,'Sg_frac03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_g2x_Sg_topo03   = mct_avect_indexra(g2x,'Sg_topo03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_g2x_Fsgg_rofi03 = mct_avect_indexra(g2x,'Fsgg_rofi03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_g2x_Fsgg_rofl03 = mct_avect_indexra(g2x,'Fsgg_rofl03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_g2x_Fsgg_hflx03 = mct_avect_indexra(g2x,'Fsgg_hflx03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_g2x_Sg_frac04   = mct_avect_indexra(g2x,'Sg_frac04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_g2x_Sg_topo04   = mct_avect_indexra(g2x,'Sg_topo04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_g2x_Fsgg_rofi04 = mct_avect_indexra(g2x,'Fsgg_rofi04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_g2x_Fsgg_rofl04 = mct_avect_indexra(g2x,'Fsgg_rofl04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_g2x_Fsgg_hflx04 = mct_avect_indexra(g2x,'Fsgg_hflx04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_g2x_Sg_frac05   = mct_avect_indexra(g2x,'Sg_frac05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_g2x_Sg_topo05   = mct_avect_indexra(g2x,'Sg_topo05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_g2x_Fsgg_rofi05 = mct_avect_indexra(g2x,'Fsgg_rofi05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_g2x_Fsgg_rofl05 = mct_avect_indexra(g2x,'Fsgg_rofl05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_g2x_Fsgg_hflx05 = mct_avect_indexra(g2x,'Fsgg_hflx05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_g2x_Sg_frac06   = mct_avect_indexra(g2x,'Sg_frac06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_g2x_Sg_topo06   = mct_avect_indexra(g2x,'Sg_topo06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_g2x_Fsgg_rofi06 = mct_avect_indexra(g2x,'Fsgg_rofi06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_g2x_Fsgg_rofl06 = mct_avect_indexra(g2x,'Fsgg_rofl06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_g2x_Fsgg_hflx06 = mct_avect_indexra(g2x,'Fsgg_hflx06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_g2x_Sg_frac07   = mct_avect_indexra(g2x,'Sg_frac07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_g2x_Sg_topo07   = mct_avect_indexra(g2x,'Sg_topo07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_g2x_Fsgg_rofi07 = mct_avect_indexra(g2x,'Fsgg_rofi07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_g2x_Fsgg_rofl07 = mct_avect_indexra(g2x,'Fsgg_rofl07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_g2x_Fsgg_hflx07 = mct_avect_indexra(g2x,'Fsgg_hflx07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_g2x_Sg_frac08   = mct_avect_indexra(g2x,'Sg_frac08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_g2x_Sg_topo08   = mct_avect_indexra(g2x,'Sg_topo08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_g2x_Fsgg_rofi08 = mct_avect_indexra(g2x,'Fsgg_rofi08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_g2x_Fsgg_rofl08 = mct_avect_indexra(g2x,'Fsgg_rofl08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_g2x_Fsgg_hflx08 = mct_avect_indexra(g2x,'Fsgg_hflx08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_g2x_Sg_frac09   = mct_avect_indexra(g2x,'Sg_frac09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_g2x_Sg_topo09   = mct_avect_indexra(g2x,'Sg_topo09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_g2x_Fsgg_rofi09 = mct_avect_indexra(g2x,'Fsgg_rofi09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_g2x_Fsgg_rofl09 = mct_avect_indexra(g2x,'Fsgg_rofl09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_g2x_Fsgg_hflx09 = mct_avect_indexra(g2x,'Fsgg_hflx09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_g2x_Sg_frac10   = mct_avect_indexra(g2x,'Sg_frac10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_g2x_Sg_topo10   = mct_avect_indexra(g2x,'Sg_topo10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_g2x_Fsgg_rofi10 = mct_avect_indexra(g2x,'Fsgg_rofi10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_g2x_Fsgg_rofl10 = mct_avect_indexra(g2x,'Fsgg_rofl10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_g2x_Fsgg_hflx10 = mct_avect_indexra(g2x,'Fsgg_hflx10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_x2g_Ss_tsrf01   = mct_avect_indexra(x2g,'Ss_tsrf01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_x2g_Ss_topo01   = mct_avect_indexra(x2g,'Ss_topo01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  1) index_x2g_Fgss_qice01 = mct_avect_indexra(x2g,'Fgss_qice01')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_x2g_Ss_tsrf02   = mct_avect_indexra(x2g,'Ss_tsrf02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_x2g_Ss_topo02   = mct_avect_indexra(x2g,'Ss_topo02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  2) index_x2g_Fgss_qice02 = mct_avect_indexra(x2g,'Fgss_qice02')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_x2g_Ss_tsrf03   = mct_avect_indexra(x2g,'Ss_tsrf03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_x2g_Ss_topo03   = mct_avect_indexra(x2g,'Ss_topo03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  3) index_x2g_Fgss_qice03 = mct_avect_indexra(x2g,'Fgss_qice03')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_x2g_Ss_tsrf04   = mct_avect_indexra(x2g,'Ss_tsrf04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_x2g_Ss_topo04   = mct_avect_indexra(x2g,'Ss_topo04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  4) index_x2g_Fgss_qice04 = mct_avect_indexra(x2g,'Fgss_qice04')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_x2g_Ss_tsrf05   = mct_avect_indexra(x2g,'Ss_tsrf05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_x2g_Ss_topo05   = mct_avect_indexra(x2g,'Ss_topo05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  5) index_x2g_Fgss_qice05 = mct_avect_indexra(x2g,'Fgss_qice05')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_x2g_Ss_tsrf06   = mct_avect_indexra(x2g,'Ss_tsrf06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_x2g_Ss_topo06   = mct_avect_indexra(x2g,'Ss_topo06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  6) index_x2g_Fgss_qice06 = mct_avect_indexra(x2g,'Fgss_qice06')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_x2g_Ss_tsrf07   = mct_avect_indexra(x2g,'Ss_tsrf07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_x2g_Ss_topo07   = mct_avect_indexra(x2g,'Ss_topo07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  7) index_x2g_Fgss_qice07 = mct_avect_indexra(x2g,'Fgss_qice07')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_x2g_Ss_tsrf08   = mct_avect_indexra(x2g,'Ss_tsrf08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_x2g_Ss_topo08   = mct_avect_indexra(x2g,'Ss_topo08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  8) index_x2g_Fgss_qice08 = mct_avect_indexra(x2g,'Fgss_qice08')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_x2g_Ss_tsrf09   = mct_avect_indexra(x2g,'Ss_tsrf09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_x2g_Ss_topo09   = mct_avect_indexra(x2g,'Ss_topo09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >=  9) index_x2g_Fgss_qice09 = mct_avect_indexra(x2g,'Fgss_qice09')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_x2g_Ss_tsrf10   = mct_avect_indexra(x2g,'Ss_tsrf10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_x2g_Ss_topo10   = mct_avect_indexra(x2g,'Ss_topo10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    if (glc_nec >= 10) index_x2g_Fgss_qice10 = mct_avect_indexra(x2g,'Fgss_qice10')
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    call mct_aVect_clean(x2g)
glc/cism/drivers/cpl_share/glc_cpl_indices.F90:    call mct_aVect_clean(g2x)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2g, g2x
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    call mct_aVect_init(g2x, rList=seq_flds_g2x_fields, lsize=lsize)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    call mct_aVect_zero(g2x)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    call mct_aVect_init(x2g, rList=seq_flds_x2g_fields, lsize=lsize)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    call mct_aVect_zero(x2g)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2g        ! driver -> glc
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: g2x        ! glc    -> driver
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    lsize = mct_avect_lsize(x2g)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    type(mct_aVect),intent(inout) :: x2g
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:    type(mct_aVect),intent(inout) :: g2x
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:       i = mct_aVect_nIattr(dom_g%data)
glc/cism/drivers/cpl_mct/glc_comp_mct.F90:       i = mct_aVect_nRattr(dom_g%data)
ice/dice/dice_comp_mod.F90:!  type(mct_avect) :: avstrm   ! av of data from stream
ice/dice/dice_comp_mod.F90:    type(mct_aVect)             , intent(inout) :: x2i, i2x
ice/dice/dice_comp_mod.F90:    call mct_aVect_init(i2x, rList=seq_flds_i2x_fields, lsize=lsize)
ice/dice/dice_comp_mod.F90:    call mct_aVect_zero(i2x)
ice/dice/dice_comp_mod.F90:    kiFrac = mct_aVect_indexRA(i2x,'Si_ifrac')
ice/dice/dice_comp_mod.F90:    kt     = mct_aVect_indexRA(i2x,'Si_t')
ice/dice/dice_comp_mod.F90:    ktref  = mct_aVect_indexRA(i2x,'Si_tref')
ice/dice/dice_comp_mod.F90:    kqref  = mct_aVect_indexRA(i2x,'Si_qref')
ice/dice/dice_comp_mod.F90:    kavsdr = mct_aVect_indexRA(i2x,'Si_avsdr')
ice/dice/dice_comp_mod.F90:    kanidr = mct_aVect_indexRA(i2x,'Si_anidr')
ice/dice/dice_comp_mod.F90:    kavsdf = mct_aVect_indexRA(i2x,'Si_avsdf')
ice/dice/dice_comp_mod.F90:    kanidf = mct_aVect_indexRA(i2x,'Si_anidf')
ice/dice/dice_comp_mod.F90:    kswnet = mct_aVect_indexRA(i2x,'Faii_swnet')
ice/dice/dice_comp_mod.F90:    ksen   = mct_aVect_indexRA(i2x,'Faii_sen')
ice/dice/dice_comp_mod.F90:    klat   = mct_aVect_indexRA(i2x,'Faii_lat')
ice/dice/dice_comp_mod.F90:    klwup  = mct_aVect_indexRA(i2x,'Faii_lwup')
ice/dice/dice_comp_mod.F90:    kevap  = mct_aVect_indexRA(i2x,'Faii_evap')
ice/dice/dice_comp_mod.F90:    ktauxa = mct_aVect_indexRA(i2x,'Faii_taux')
ice/dice/dice_comp_mod.F90:    ktauya = mct_aVect_indexRA(i2x,'Faii_tauy')
ice/dice/dice_comp_mod.F90:    kmelth = mct_aVect_indexRA(i2x,'Fioi_melth')
ice/dice/dice_comp_mod.F90:    kmeltw = mct_aVect_indexRA(i2x,'Fioi_meltw')
ice/dice/dice_comp_mod.F90:    kswpen = mct_aVect_indexRA(i2x,'Fioi_swpen')
ice/dice/dice_comp_mod.F90:    ktauxo = mct_aVect_indexRA(i2x,'Fioi_taux')
ice/dice/dice_comp_mod.F90:    ktauyo = mct_aVect_indexRA(i2x,'Fioi_tauy')
ice/dice/dice_comp_mod.F90:    ksalt  = mct_aVect_indexRA(i2x,'Fioi_salt')
ice/dice/dice_comp_mod.F90:    call mct_aVect_init(x2i, rList=seq_flds_x2i_fields, lsize=lsize)
ice/dice/dice_comp_mod.F90:    call mct_aVect_zero(x2i)
ice/dice/dice_comp_mod.F90:    kswvdr = mct_aVect_indexRA(x2i,'Faxa_swvdr')
ice/dice/dice_comp_mod.F90:    kswndr = mct_aVect_indexRA(x2i,'Faxa_swndr')
ice/dice/dice_comp_mod.F90:    kswvdf = mct_aVect_indexRA(x2i,'Faxa_swvdf')
ice/dice/dice_comp_mod.F90:    kswndf = mct_aVect_indexRA(x2i,'Faxa_swndf')
ice/dice/dice_comp_mod.F90:    kq     = mct_aVect_indexRA(x2i,'Fioo_q')
ice/dice/dice_comp_mod.F90:    kz     = mct_aVect_indexRA(x2i,'Sa_z')
ice/dice/dice_comp_mod.F90:    kua    = mct_aVect_indexRA(x2i,'Sa_u')
ice/dice/dice_comp_mod.F90:    kva    = mct_aVect_indexRA(x2i,'Sa_v')
ice/dice/dice_comp_mod.F90:    kptem  = mct_aVect_indexRA(x2i,'Sa_ptem')
ice/dice/dice_comp_mod.F90:    kshum  = mct_aVect_indexRA(x2i,'Sa_shum')
ice/dice/dice_comp_mod.F90:    kdens  = mct_aVect_indexRA(x2i,'Sa_dens')
ice/dice/dice_comp_mod.F90:    ktbot  = mct_aVect_indexRA(x2i,'Sa_tbot')
ice/dice/dice_comp_mod.F90:!    call mct_aVect_init(avstrm, rList=flds_strm, lsize=lsize)
ice/dice/dice_comp_mod.F90:!    call mct_aVect_zero(avstrm)
ice/dice/dice_comp_mod.F90:    kfld = mct_aVect_indexRA(ggrid%data,'mask')
ice/dice/dice_comp_mod.F90:    kfld = mct_aVect_indexRA(ggrid%data,'lat')
ice/dice/dice_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: x2i        ! driver -> dead
ice/dice/dice_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: i2x        ! dead   -> driver
ice/dice/dice_comp_mod.F90:!  lsize = mct_avect_lsize(x2i)
ice/dice/dice_comp_mod.F90:      call mct_aVect_zero(i2x)
ice/dice/dice_comp_mod.F90:      lsize = mct_avect_lsize(i2x)
ice/dice/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2i, i2x
ice/dice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2i        ! driver -> dead
ice/dice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: i2x        ! dead   -> driver
ice/dice/cpl_esmf/ice_comp_esmf.F90:   type(mct_aVect)     :: x2d
ice/dice/cpl_esmf/ice_comp_esmf.F90:   type(mct_aVect)     :: d2x
ice/dice/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
ice/dice/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
ice/dice/cpl_esmf/ice_comp_mct.F90:      call mct_aVect_zero(x2d)
ice/dice/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
ice/dice/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
ice/sice/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ice/sice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        
ice/sice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        
ice/sice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ice/sice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> stub
ice/sice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! stub   -> driver
ice/xice/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2d, d2x
ice/xice/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(d2x, rList=flds_d2x, lsize=lsize)
ice/xice/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(d2x)
ice/xice/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(x2d, rList=flds_x2d, lsize=lsize)
ice/xice/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(x2d)
ice/xice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
ice/xice/cpl_mct/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
ice/xice/cpl_mct/ice_comp_mct.F90:    lsize = mct_avect_lsize(x2d)
ice/xice/cpl_mct/ice_comp_mct.F90:    nflds_d2x = mct_avect_nRattr(d2x)
ice/xice/cpl_mct/ice_comp_mct.F90:    nflds_x2d = mct_avect_nRattr(x2d)
ice/xice/cpl_mct/ice_comp_mct.F90:    ki = mct_aVect_indexRA(d2x,"Si_ifrac",perrWith=subname)
ice/xice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ice/xice/cpl_esmf/ice_comp_mct.F90:    call mct_aVect_zero(x2d)
ice/xice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
ice/xice/cpl_esmf/ice_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00121"></a>00121     <span class="keywordtype">type(</span>mct_aVect<span class="keywordtype">)</span>          , <span class="keywordtype">intent(inout)</span> :: x2i_i, i2x_i
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00298"></a>00298     call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00299"></a>00299     call mct_aVect_zero(x2i_i)
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00301"></a>00301     call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize) 
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00302"></a>00302     call mct_aVect_zero(i2x_i)
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00364"></a>00364     <span class="keywordtype">type(</span>mct_aVect<span class="keywordtype">)</span>, <span class="keywordtype">intent(inout)</span> :: x2i_i
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00365"></a>00365     <span class="keywordtype">type(</span>mct_aVect<span class="keywordtype">)</span>, <span class="keywordtype">intent(inout)</span> :: i2x_i
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00786"></a>00786     <span class="keywordtype">type(</span>mct_aVect<span class="keywordtype">)</span>   , <span class="keywordtype">intent(inout)</span> :: i2x_i
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l00936"></a>00936     <span class="keywordtype">type(</span>mct_aVect<span class="keywordtype">)</span>   , <span class="keywordtype">intent(inout)</span> :: x2i_i
ice/cice/docs/RefGuide/html/ice__comp__mct_8F90_source.html:<a name="l01265"></a>01265     call mct_aVect_zero(dom_i%data)
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/docs/RefGuide/html/namespaceice__comp__mct.html:          <td class="paramtype">type(mct_aVect),intent(inout)&nbsp;</td>
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    type(mct_aVect) :: i2x      ! temporary
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    type(mct_aVect) :: x2i      ! temporary
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    call mct_aVect_init(x2i, rList=seq_flds_x2i_fields, lsize=1)
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    call mct_aVect_init(i2x, rList=seq_flds_i2x_fields, lsize=1)
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_t          = mct_avect_indexra(i2x,'Si_t')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_tref       = mct_avect_indexra(i2x,'Si_tref')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_qref       = mct_avect_indexra(i2x,'Si_qref')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_ifrac      = mct_avect_indexra(i2x,'Si_ifrac')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_avsdr      = mct_avect_indexra(i2x,'Si_avsdr')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_anidr      = mct_avect_indexra(i2x,'Si_anidr')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_avsdf      = mct_avect_indexra(i2x,'Si_avsdf')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_anidf      = mct_avect_indexra(i2x,'Si_anidf')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_snowh      = mct_avect_indexra(i2x,'Si_snowh')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Si_u10        = mct_avect_indexra(i2x,'Si_u10')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_taux     = mct_avect_indexra(i2x,'Faii_taux')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_tauy     = mct_avect_indexra(i2x,'Faii_tauy')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_lat      = mct_avect_indexra(i2x,'Faii_lat')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_sen      = mct_avect_indexra(i2x,'Faii_sen')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_lwup     = mct_avect_indexra(i2x,'Faii_lwup')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_evap     = mct_avect_indexra(i2x,'Faii_evap')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Faii_swnet    = mct_avect_indexra(i2x,'Faii_swnet')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_swpen    = mct_avect_indexra(i2x,'Fioi_swpen')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_melth    = mct_avect_indexra(i2x,'Fioi_melth')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_meltw    = mct_avect_indexra(i2x,'Fioi_meltw')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_salt     = mct_avect_indexra(i2x,'Fioi_salt')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_taux     = mct_avect_indexra(i2x,'Fioi_taux')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_i2x_Fioi_tauy     = mct_avect_indexra(i2x,'Fioi_tauy')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_t          = mct_avect_indexra(x2i,'So_t')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_s          = mct_avect_indexra(x2i,'So_s')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_u          = mct_avect_indexra(x2i,'So_u')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_v          = mct_avect_indexra(x2i,'So_v')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_z          = mct_avect_indexra(x2i,'Sa_z')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_u          = mct_avect_indexra(x2i,'Sa_u')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_v          = mct_avect_indexra(x2i,'Sa_v')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_tbot       = mct_avect_indexra(x2i,'Sa_tbot')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_ptem       = mct_avect_indexra(x2i,'Sa_ptem')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_pbot       = mct_avect_indexra(x2i,'Sa_pbot')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_shum       = mct_avect_indexra(x2i,'Sa_shum')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Sa_dens       = mct_avect_indexra(x2i,'Sa_dens')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_dhdx       = mct_avect_indexra(x2i,'So_dhdx')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_So_dhdy       = mct_avect_indexra(x2i,'So_dhdy')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_lwdn     = mct_avect_indexra(x2i,'Faxa_lwdn')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_rain     = mct_avect_indexra(x2i,'Faxa_rain')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_snow     = mct_avect_indexra(x2i,'Faxa_snow')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_swndr    = mct_avect_indexra(x2i,'Faxa_swndr')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_swvdr    = mct_avect_indexra(x2i,'Faxa_swvdr')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_swndf    = mct_avect_indexra(x2i,'Faxa_swndf')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_swvdf    = mct_avect_indexra(x2i,'Faxa_swvdf')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Fioo_q        = mct_avect_indexra(x2i,'Fioo_q')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_bcphidry = mct_avect_indexra(x2i,'Faxa_bcphidry')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_bcphodry = mct_avect_indexra(x2i,'Faxa_bcphodry')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_bcphiwet = mct_avect_indexra(x2i,'Faxa_bcphiwet')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_ocphidry = mct_avect_indexra(x2i,'Faxa_ocphidry')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_ocphodry = mct_avect_indexra(x2i,'Faxa_ocphodry')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_ocphiwet = mct_avect_indexra(x2i,'Faxa_ocphiwet')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstdry1  = mct_avect_indexra(x2i,'Faxa_dstdry1')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstdry2  = mct_avect_indexra(x2i,'Faxa_dstdry2')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstdry3  = mct_avect_indexra(x2i,'Faxa_dstdry3')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstdry4  = mct_avect_indexra(x2i,'Faxa_dstdry4')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstwet1  = mct_avect_indexra(x2i,'Faxa_dstwet1')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstwet2  = mct_avect_indexra(x2i,'Faxa_dstwet2')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstwet3  = mct_avect_indexra(x2i,'Faxa_dstwet3')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    index_x2i_Faxa_dstwet4  = mct_avect_indexra(x2i,'Faxa_dstwet4')
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    call mct_aVect_clean(x2i)
ice/cice/src/drivers/cpl_share/ice_cpl_indices.F90:    call mct_aVect_clean(i2x)
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2i_i, i2x_i
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(x2i_i, rList=seq_flds_x2i_fields, lsize=lsize)
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(x2i_i)
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    call mct_aVect_init(i2x_i, rList=seq_flds_i2x_fields, lsize=lsize) 
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(i2x_i)
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: x2i_i
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    type(mct_aVect), intent(inout) :: i2x_i
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: i2x_i
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2i_i
ice/cice/src/drivers/cpl_mct/ice_comp_mct.F90:    call mct_aVect_zero(dom_i%data)
ice/cice/src/drivers/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
ice/cice/src/drivers/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
ice/cice/src/drivers/cpl_esmf/ice_comp_mct.F90:      call mct_aVect_zero(x2d)
ice/cice/src/drivers/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
ice/cice/src/drivers/cpl_esmf/ice_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
lnd/clm/src/riverroute/RtmMod.F90:    type(mct_aVect)   :: aV_lndr,aV_rtmr
lnd/clm/src/riverroute/RtmMod.F90:    call mct_aVect_init(aV_lndr,rlist=trim(rtm_trstr),lsize=ns)
lnd/clm/src/riverroute/RtmMod.F90:    call mct_aVect_init(aV_rtmr,rlist=trim(rtm_trstr),lsize=ns)
lnd/clm/src/riverroute/RtmMod.F90:    call mct_aVect_clean(aV_lndr)
lnd/clm/src/riverroute/RtmMod.F90:    call mct_aVect_clean(aV_rtmr)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:  use mct_mod       , only: mct_aVect, mct_aVect_init, mct_avect_indexra, &
lnd/clm/src/cpl_share/clm_cpl_indices.F90:                            mct_aVect_clean, mct_avect_nRattr
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: l2x      ! temporary, land to coupler
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: x2l      ! temporary, coupler to land
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: r2x      ! temporary, runoff to coupler
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: s2x      ! temporary, glacier to coupler
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: x2s      ! temporary, coupler to glacier
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(x2l, rList=seq_flds_x2l_fields, lsize=1)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(l2x, rList=seq_flds_l2x_fields, lsize=1)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_t          = mct_avect_indexra(l2x,'Sl_t')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_snowh      = mct_avect_indexra(l2x,'Sl_snowh')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_avsdr      = mct_avect_indexra(l2x,'Sl_avsdr')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_anidr      = mct_avect_indexra(l2x,'Sl_anidr')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_avsdf      = mct_avect_indexra(l2x,'Sl_avsdf')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_anidf      = mct_avect_indexra(l2x,'Sl_anidf')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_tref       = mct_avect_indexra(l2x,'Sl_tref')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_qref       = mct_avect_indexra(l2x,'Sl_qref')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_u10        = mct_avect_indexra(l2x,'Sl_u10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_taux     = mct_avect_indexra(l2x,'Fall_taux')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_tauy     = mct_avect_indexra(l2x,'Fall_tauy')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_lat      = mct_avect_indexra(l2x,'Fall_lat')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_sen      = mct_avect_indexra(l2x,'Fall_sen')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_lwup     = mct_avect_indexra(l2x,'Fall_lwup')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_evap     = mct_avect_indexra(l2x,'Fall_evap')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_swnet    = mct_avect_indexra(l2x,'Fall_swnet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_ram1       = mct_avect_indexra(l2x,'Sl_ram1')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_fv         = mct_avect_indexra(l2x,'Sl_fv')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst1  = mct_avect_indexra(l2x,'Fall_flxdst1')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst2  = mct_avect_indexra(l2x,'Fall_flxdst2')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst3  = mct_avect_indexra(l2x,'Fall_flxdst3')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst4  = mct_avect_indexra(l2x,'Fall_flxdst4')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc1  = mct_avect_indexra(l2x,'Fall_flxvoc1' ,perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc2  = mct_avect_indexra(l2x,'Fall_flxvoc2' ,perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc3  = mct_avect_indexra(l2x,'Fall_flxvoc3' ,perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc4  = mct_avect_indexra(l2x,'Fall_flxvoc4' ,perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc5  = mct_avect_indexra(l2x,'Fall_flxvoc5' ,perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_fco2_lnd = mct_avect_indexra(l2x,'Fall_fco2_lnd',perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:       index_l2x_Sl_ddvel = mct_avect_indexra(l2x, trim(drydep_fields_token))
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_soildepth(k)   = mct_avect_indexra(l2x,'Sl_soildepth'//slayer(k) )
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_soilthick(k)   = mct_avect_indexra(l2x,'Sl_soilthick'//slayer(k) )
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_soilt(k)   = mct_avect_indexra(l2x,'Sl_soilt'//slayer(k) )
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_soilm(k)   = mct_avect_indexra(l2x,'Sl_soilm'//slayer(k) )
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    nflds_l2x = mct_avect_nRattr(l2x)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_z          = mct_avect_indexra(x2l,'Sa_z')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_u          = mct_avect_indexra(x2l,'Sa_u')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_v          = mct_avect_indexra(x2l,'Sa_v')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_ptem       = mct_avect_indexra(x2l,'Sa_ptem')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_pbot       = mct_avect_indexra(x2l,'Sa_pbot')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_tbot       = mct_avect_indexra(x2l,'Sa_tbot')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_shum       = mct_avect_indexra(x2l,'Sa_shum')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_lwdn     = mct_avect_indexra(x2l,'Faxa_lwdn')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_rainc    = mct_avect_indexra(x2l,'Faxa_rainc')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_rainl    = mct_avect_indexra(x2l,'Faxa_rainl')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_snowc    = mct_avect_indexra(x2l,'Faxa_snowc')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_snowl    = mct_avect_indexra(x2l,'Faxa_snowl')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swndr    = mct_avect_indexra(x2l,'Faxa_swndr')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swvdr    = mct_avect_indexra(x2l,'Faxa_swvdr')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swndf    = mct_avect_indexra(x2l,'Faxa_swndf')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swvdf    = mct_avect_indexra(x2l,'Faxa_swvdf')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphidry = mct_avect_indexra(x2l,'Faxa_bcphidry')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphodry = mct_avect_indexra(x2l,'Faxa_bcphodry')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphiwet = mct_avect_indexra(x2l,'Faxa_bcphiwet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphidry = mct_avect_indexra(x2l,'Faxa_ocphidry')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphodry = mct_avect_indexra(x2l,'Faxa_ocphodry')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphiwet = mct_avect_indexra(x2l,'Faxa_ocphiwet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry1  = mct_avect_indexra(x2l,'Faxa_dstdry1')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry2  = mct_avect_indexra(x2l,'Faxa_dstdry2')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry3  = mct_avect_indexra(x2l,'Faxa_dstdry3')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry4  = mct_avect_indexra(x2l,'Faxa_dstdry4')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet1  = mct_avect_indexra(x2l,'Faxa_dstwet1')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet2  = mct_avect_indexra(x2l,'Faxa_dstwet2')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet3  = mct_avect_indexra(x2l,'Faxa_dstwet3')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet4  = mct_avect_indexra(x2l,'Faxa_dstwet4')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_co2prog    = mct_avect_indexra(x2l,'Sa_co2prog',perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_co2diag    = mct_avect_indexra(x2l,'Sa_co2diag',perrwith='quiet')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    nflds_x2l = mct_avect_nRattr(x2l)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(x2l)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(l2x)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(r2x, rList=seq_flds_r2x_fields, lsize=1)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_r2x_Forr_roff  = mct_avect_indexra(r2x,'Forr_roff')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_r2x_Forr_ioff  = mct_avect_indexra(r2x,'Forr_ioff')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    nflds_r2x = mct_avect_nRattr(r2x)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(r2x)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(x2s, rList=seq_flds_x2s_fields, lsize=1)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(s2x, rList=seq_flds_s2x_fields, lsize=1)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac01   = mct_avect_indexra(x2s,'Sg_frac01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo01   = mct_avect_indexra(x2s,'Sg_topo01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi01 = mct_avect_indexra(x2s,'Fsgg_rofi01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl01 = mct_avect_indexra(x2s,'Fsgg_rofl01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx01 = mct_avect_indexra(x2s,'Fsgg_hflx01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac02   = mct_avect_indexra(x2s,'Sg_frac02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo02   = mct_avect_indexra(x2s,'Sg_topo02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac03   = mct_avect_indexra(x2s,'Sg_frac03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo03   = mct_avect_indexra(x2s,'Sg_topo03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi02 = mct_avect_indexra(x2s,'Fsgg_rofi02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl02 = mct_avect_indexra(x2s,'Fsgg_rofl02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx02 = mct_avect_indexra(x2s,'Fsgg_hflx02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi03 = mct_avect_indexra(x2s,'Fsgg_rofi03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl03 = mct_avect_indexra(x2s,'Fsgg_rofl03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx03 = mct_avect_indexra(x2s,'Fsgg_hflx03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac04   = mct_avect_indexra(x2s,'Sg_frac04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo04   = mct_avect_indexra(x2s,'Sg_topo04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac05   = mct_avect_indexra(x2s,'Sg_frac05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo05   = mct_avect_indexra(x2s,'Sg_topo05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi04 = mct_avect_indexra(x2s,'Fsgg_rofi04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl04 = mct_avect_indexra(x2s,'Fsgg_rofl04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx04 = mct_avect_indexra(x2s,'Fsgg_hflx04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi05 = mct_avect_indexra(x2s,'Fsgg_rofi05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl05 = mct_avect_indexra(x2s,'Fsgg_rofl05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx05 = mct_avect_indexra(x2s,'Fsgg_hflx05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac06   = mct_avect_indexra(x2s,'Sg_frac06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo06   = mct_avect_indexra(x2s,'Sg_topo06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac07   = mct_avect_indexra(x2s,'Sg_frac07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo07   = mct_avect_indexra(x2s,'Sg_topo07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac08   = mct_avect_indexra(x2s,'Sg_frac08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo08   = mct_avect_indexra(x2s,'Sg_topo08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac09   = mct_avect_indexra(x2s,'Sg_frac09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo09   = mct_avect_indexra(x2s,'Sg_topo09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac10   = mct_avect_indexra(x2s,'Sg_frac10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo10   = mct_avect_indexra(x2s,'Sg_topo10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi06 = mct_avect_indexra(x2s,'Fsgg_rofi06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl06 = mct_avect_indexra(x2s,'Fsgg_rofl06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx06 = mct_avect_indexra(x2s,'Fsgg_hflx06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi07 = mct_avect_indexra(x2s,'Fsgg_rofi07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl07 = mct_avect_indexra(x2s,'Fsgg_rofl07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx07 = mct_avect_indexra(x2s,'Fsgg_hflx07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi08 = mct_avect_indexra(x2s,'Fsgg_rofi08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl08 = mct_avect_indexra(x2s,'Fsgg_rofl08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx08 = mct_avect_indexra(x2s,'Fsgg_hflx08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi09 = mct_avect_indexra(x2s,'Fsgg_rofi09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl09 = mct_avect_indexra(x2s,'Fsgg_rofl09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx09 = mct_avect_indexra(x2s,'Fsgg_hflx09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi10 = mct_avect_indexra(x2s,'Fsgg_rofi10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl10 = mct_avect_indexra(x2s,'Fsgg_rofl10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx10 = mct_avect_indexra(x2s,'Fsgg_hflx10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    nflds_x2s = mct_avect_nRattr(x2s)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf01   = mct_avect_indexra(s2x,'Ss_tsrf01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo01   = mct_avect_indexra(s2x,'Ss_topo01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice01 = mct_avect_indexra(s2x,'Fgss_qice01')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf02   = mct_avect_indexra(s2x,'Ss_tsrf02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo02   = mct_avect_indexra(s2x,'Ss_topo02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf03   = mct_avect_indexra(s2x,'Ss_tsrf03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo03   = mct_avect_indexra(s2x,'Ss_topo03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice02 = mct_avect_indexra(s2x,'Fgss_qice02')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice03 = mct_avect_indexra(s2x,'Fgss_qice03')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf04   = mct_avect_indexra(s2x,'Ss_tsrf04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo04   = mct_avect_indexra(s2x,'Ss_topo04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf05   = mct_avect_indexra(s2x,'Ss_tsrf05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo05   = mct_avect_indexra(s2x,'Ss_topo05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice04 = mct_avect_indexra(s2x,'Fgss_qice04')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice05 = mct_avect_indexra(s2x,'Fgss_qice05')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf06   = mct_avect_indexra(s2x,'Ss_tsrf06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo06   = mct_avect_indexra(s2x,'Ss_topo06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf07   = mct_avect_indexra(s2x,'Ss_tsrf07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo07   = mct_avect_indexra(s2x,'Ss_topo07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf08   = mct_avect_indexra(s2x,'Ss_tsrf08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo08   = mct_avect_indexra(s2x,'Ss_topo08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf09   = mct_avect_indexra(s2x,'Ss_tsrf09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo09   = mct_avect_indexra(s2x,'Ss_topo09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf10   = mct_avect_indexra(s2x,'Ss_tsrf10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo10   = mct_avect_indexra(s2x,'Ss_topo10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice06 = mct_avect_indexra(s2x,'Fgss_qice06')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice07 = mct_avect_indexra(s2x,'Fgss_qice07')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice08 = mct_avect_indexra(s2x,'Fgss_qice08')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice09 = mct_avect_indexra(s2x,'Fgss_qice09')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice10 = mct_avect_indexra(s2x,'Fgss_qice10')
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    nflds_s2x = mct_avect_nRattr(s2x)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(x2s)
lnd/clm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(s2x)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  use mct_mod          , only : mct_aVect
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_SNAP     ! Snapshot of land to coupler data on the land grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_SUM      ! Summation of land to coupler data on the land grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_clm      ! Internal clm grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: x2l_l_clm      ! Internal clm grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: s2x_s_SNAP     ! Snapshot of sno to coupler data on the land grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: s2x_s_SUM      ! Summation of sno to coupler data on the land grid 
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: x2l_l, l2x_l     ! land model import and export states
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: r2x_r            ! River export state
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: x2s_s, s2x_s     ! Snow-model import and export states
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2l_l, rList=seq_flds_x2l_fields, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2l_l)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l, rList=seq_flds_l2x_fields, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_SNAP, rList=seq_flds_l2x_fluxes, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_SNAP)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_SUM , rList=seq_flds_l2x_fluxes, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2l_l_clm, rList=seq_flds_x2l_fields, lsize=endg_l-begg_l+1)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2l_l_clm)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_clm, rList=seq_flds_l2x_fields, lsize=endg_l-begg_l+1)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_clm)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(r2x_r, rList=seq_flds_r2x_fields, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(r2x_r)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_init(x2s_s, rList=seq_flds_x2s_fields, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_zero(x2s_s)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_init(s2x_s, rList=seq_flds_s2x_fields, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_zero(s2x_s)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_init(s2x_s_SUM , rList=seq_flds_s2x_fluxes, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_zero(s2x_s_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_init(s2x_s_SNAP , rList=seq_flds_s2x_fluxes, lsize=lsize)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:       call mct_aVect_zero(s2x_s_SNAP )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: x2l_l     ! Import state to land model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: l2x_l     ! Export state from land model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: r2x_r     ! Export state from runoff model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: x2s_s     ! Import state for snow model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: s2x_s     ! Export state for snow model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_copy( l2x_l, l2x_l_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_copy( l2x_l, l2x_l_SNAP )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_accum( aVin=l2x_l_SNAP, aVout=l2x_l_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:             call mct_aVect_copy( s2x_s, s2x_s_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:             call mct_aVect_copy( s2x_s, s2x_s_SNAP )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:             call mct_aVect_accum( aVin=s2x_s_SNAP, aVout=s2x_s_SUM )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_avg ( l2x_l_SUM, avg_count)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_copy( l2x_l_SUM, l2x_l )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero( l2x_l_SUM) 
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_avg ( s2x_s_SUM, avg_count_sno)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_copy( s2x_s_SUM, s2x_s )
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_zero( s2x_s_SUM)
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: l2x_l   ! Land to coupler export state on land grid
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod         , only: mct_aVect
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2l_l   ! Driver MCT import state to land model
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod     , only : mct_aVect
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect), intent(inout) :: r2x_r  ! Runoff to coupler export state
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: s2x_s
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod         , only: mct_aVect
lnd/clm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2s_s
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2l
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: l2x   
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: r2x   
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2s
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: s2x   
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:      call mct_aVect_zero(x2l)
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:      call mct_aVect_zero(x2s)
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2l
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: l2x
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: r2x
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2s
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: s2x
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:      lsize = mct_avect_lsize(dom_l%data)
lnd/clm/src/cpl_esmf/lnd_comp_mct.F90:      kb = mct_avect_indexRA(dom_l%data,'ascale')
lnd/clm/src/main/downscaleMod.F90:  type(mct_aVect), intent(inout)  :: fld_i                 !land model import and export states
lnd/clm/src/main/downscaleMod.F90:  type(mct_aVect), intent(inout)  :: fld_o                 !land model import and export states
lnd/clm/src/main/downscaleMod.F90:    call mct_aVect_zero(fld_o)
lnd/clm/src/main/spmdGathScatMod.F90:    type(mct_aVect)    :: AVi, AVo   ! attribute vectors
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_init(AVi,rList=trim(rstring),iList=trim(istring),lsize=lsize)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_importIattr(AVi,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_scatter(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_exportIattr(AVo,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_clean(AVi)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_clean(AVo)
lnd/clm/src/main/spmdGathScatMod.F90:    type(mct_aVect)    :: AVi, AVo   ! attribute vectors
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_init(AVi,rList=trim(rstring),iList=trim(istring),lsize=lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_importIattr(AVi,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_importIattr(AVi,"mask",mvect,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:!       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom, missing = missing)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_exportIattr(AVo,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_exportIattr(AVo,"mask",mvect,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_clean(AVo)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_clean(AVi)
lnd/clm/src/main/spmdGathScatMod.F90:    type(mct_aVect)    :: AVi, AVo   ! attribute vectors
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_init(AVi,rList=trim(rstring),iList=trim(istring),lsize=lsize)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_importRattr(AVi,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_scatter(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_exportRattr(AVo,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_clean(AVi)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_clean(AVo)
lnd/clm/src/main/spmdGathScatMod.F90:    type(mct_aVect)    :: AVi, AVo   ! attribute vectors
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_init(AVi,rList=trim(rstring),iList=trim(istring),lsize=lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_importRattr(AVi,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_importIattr(AVi,"mask",mvect,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:!       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom, missing = missing)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_gather(AVi, AVo, gsmap, 0, mpicom)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_exportRattr(AVo,trim(fname),adata,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:          call mct_aVect_exportIattr(AVo,"mask",mvect,lsize)
lnd/clm/src/main/spmdGathScatMod.F90:       call mct_aVect_clean(AVo)
lnd/clm/src/main/spmdGathScatMod.F90:    call mct_aVect_clean(AVi)
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect              => AttrVect
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_init         => init
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_clean        => clean
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_zero         => zero
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_lsize        => lsize
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_indexIA      => indexIA
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_indexRA      => indexRA
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_getIList     => getIList
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_getRList     => getRList
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_expIListToChar => exportIListToChar
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_expRListToChar => exportRListToChar
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_nIAttr       => nIAttr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_nRAttr       => nRAttr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_copy         => Copy
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_exportRattr  => exportRattr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_importRattr  => importRattr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_exportIattr  => exportIattr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVect           ,only: mct_aVect_importIattr  => importIattr
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_scatter      => scatter
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_gather       => gather 
lnd/clm/src/main/clm_mct_mod.F90:   use m_AttrVectComms      ,only: mct_aVect_bcast        => bcast  
lnd/clm/src/main/clm_mct_mod.F90:! !IROUTINE: mct_aVect_info - print out aVect info for debugging
lnd/clm/src/main/clm_mct_mod.F90:subroutine mct_aVect_info(flag,aVect,comm,pe,fld,istr)
lnd/clm/src/main/clm_mct_mod.F90:   type(mct_aVect),intent(in)           :: aVect ! Attribute vector
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: subName = '(mct_aVect_info) '
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_info) ',8a)"
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F01 = "('(mct_aVect_info) ',a,i9)"
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F02 = "('(mct_aVect_info) ',240a)"
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F03 = "('(mct_aVect_info) ',a,2es11.3,i4,2x,a)"
lnd/clm/src/main/clm_mct_mod.F90:   nsize = mct_aVect_lsize(aVect)
lnd/clm/src/main/clm_mct_mod.F90:     ks = mct_aVect_indexRA(aVect,fld,perrWith=subName)
lnd/clm/src/main/clm_mct_mod.F90:     nflds = mct_aVect_nRAttr(aVect)
lnd/clm/src/main/clm_mct_mod.F90:       call mct_aVect_getRList(item,k,aVect)
lnd/clm/src/main/clm_mct_mod.F90:end subroutine mct_aVect_info
lnd/clm/src/main/clm_mct_mod.F90:! !IROUTINE: mct_aVect_getRAttr - get real F90 array data out of an aVect
lnd/clm/src/main/clm_mct_mod.F90:subroutine mct_aVect_getRAttr(aVect,str,data,rcode)
lnd/clm/src/main/clm_mct_mod.F90:   type(mct_aVect),intent(in)  :: aVect    ! an Attribute vector
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: subName = "(mct_aVect_getRAttr) "
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_getRAttr) ',8a)"
lnd/clm/src/main/clm_mct_mod.F90:   n = mct_aVect_lsize(aVect)
lnd/clm/src/main/clm_mct_mod.F90:   k = mct_aVect_indexRA(aVect,trim(str) ,perrWith=subName)
lnd/clm/src/main/clm_mct_mod.F90:end subroutine mct_aVect_getRAttr
lnd/clm/src/main/clm_mct_mod.F90:! !IROUTINE: mct_aVect_putRAttr - put real F90 array data into an aVect
lnd/clm/src/main/clm_mct_mod.F90:subroutine mct_aVect_putRAttr(aVect,str,data,rcode)
lnd/clm/src/main/clm_mct_mod.F90:   type(mct_aVect),intent(out) :: aVect ! Attribute vector
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: subName = "(mct_aVect_putRAttr) "
lnd/clm/src/main/clm_mct_mod.F90:   character(*),parameter :: F00 = "('(mct_aVect_putRAttr) ',8a)"
lnd/clm/src/main/clm_mct_mod.F90:   n = mct_aVect_lsize(aVect)
lnd/clm/src/main/clm_mct_mod.F90:   k = mct_aVect_indexRA(aVect,trim(str) ,perrWith=subName)
lnd/clm/src/main/clm_mct_mod.F90:end subroutine mct_aVect_putRAttr
lnd/clm/src/main/clm_mct_mod.F90:! !IROUTINE: mct_aVect_accum - accumulate attributes from one aVect to another
lnd/clm/src/main/clm_mct_mod.F90:subroutine mct_aVect_accum(aVin, rList, TrList, iList, TiList, aVout)
lnd/clm/src/main/clm_mct_mod.F90:            inx=mct_aVect_indexRA(aVin,String_toChar(attr),dieWith=myname_//'real aVin')
lnd/clm/src/main/clm_mct_mod.F90:            outx=mct_aVect_indexRA(aVout,String_toChar(attr2),dieWith=myname_//'real aVout')
lnd/clm/src/main/clm_mct_mod.F90:           inx =mct_aVect_indexIA(aVin ,String_toChar(attr) ,dieWith=myname_//'int aVin')
lnd/clm/src/main/clm_mct_mod.F90:           outx=mct_aVect_indexIA(aVout,String_toChar(attr2),dieWith=myname_//'int aVout')
lnd/clm/src/main/clm_mct_mod.F90:end subroutine mct_aVect_accum
lnd/dlnd/dlnd_comp_mod.F90:    type(mct_aVect)             , intent(inout) :: x2l, l2x
lnd/dlnd/dlnd_comp_mod.F90:    type(mct_aVect)             , intent(inout) ::      r2x
lnd/dlnd/dlnd_comp_mod.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_init(l2x, rList=seq_flds_l2x_fields, lsize=lsize_l)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_zero(l2x)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_init(x2l, rList=seq_flds_x2l_fields, lsize=lsize_l)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_zero(x2l)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_init(r2x, rList=seq_flds_r2x_fields, lsize=lsize_r)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_zero(r2x)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_init(x2s, rList=seq_flds_x2s_fields, lsize=lsize_s)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_zero(x2s)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_init(s2x, rList=seq_flds_s2x_fields, lsize=lsize_s)
lnd/dlnd/dlnd_comp_mod.F90:    call mct_aVect_zero(s2x)
lnd/dlnd/dlnd_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: x2l        ! driver -> dead
lnd/dlnd/dlnd_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: l2x        ! dead   -> driver
lnd/dlnd/dlnd_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: r2x
lnd/dlnd/dlnd_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: x2s
lnd/dlnd/dlnd_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: s2x
lnd/dlnd/dlnd_comp_mod.F90:   lsize_l = mct_avect_lsize(x2l)
lnd/dlnd/dlnd_comp_mod.F90:   lsize_r = mct_avect_lsize(r2x)
lnd/dlnd/dlnd_comp_mod.F90:   lsize_s = mct_avect_lsize(x2s)
lnd/dlnd/dlnd_comp_mod.F90:   nflds_x2l = mct_avect_nRattr(x2l)
lnd/dlnd/dlnd_comp_mod.F90:   nflds_x2s = mct_avect_nRattr(x2s)
lnd/dlnd/dlnd_comp_mod.F90:   nflds_r2x = mct_avect_nRattr(r2x)
lnd/dlnd/dlnd_comp_mod.F90:      call mct_aVect_zero(l2x)
lnd/dlnd/dlnd_comp_mod.F90:      call mct_aVect_zero(r2x)
lnd/dlnd/dlnd_comp_mod.F90:         call mct_aVect_zero(s2x)
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2l, l2x
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) ::      r2x
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2l        ! driver -> dead
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: l2x        ! dead   -> driver
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: r2x
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2s
lnd/dlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: s2x
lnd/dlnd/cpl_esmf/lnd_comp_esmf.F90:   type(mct_aVect)     :: x2l
lnd/dlnd/cpl_esmf/lnd_comp_esmf.F90:   type(mct_aVect)     :: l2x
lnd/dlnd/cpl_esmf/lnd_comp_esmf.F90:   type(mct_aVect)     :: r2x
lnd/dlnd/cpl_esmf/lnd_comp_esmf.F90:   type(mct_aVect)     :: x2s
lnd/dlnd/cpl_esmf/lnd_comp_esmf.F90:   type(mct_aVect)     :: s2x
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2l
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: l2x   
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: r2x   
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2s
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect), intent(inout)              :: s2x   
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:      call mct_aVect_zero(x2l)
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:      call mct_aVect_zero(x2s)
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2l
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: l2x
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: r2x
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2s
lnd/dlnd/cpl_esmf/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: s2x
lnd/slnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
lnd/slnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) ::      r2x
lnd/slnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/slnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        
lnd/slnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        
lnd/slnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: r2x        
lnd/slnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2s    
lnd/slnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: s2x        
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: r2x
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> stub
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! stub   -> driver
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: r2x        ! stub   -> driver
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2s        ! driver -> stub
lnd/slnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: s2x        ! stub   -> driver
lnd/colm/src/cpl_share/clm_cpl_indices.F90:  use mct_mod       , only: mct_aVect, mct_aVect_init, mct_avect_indexra, &
lnd/colm/src/cpl_share/clm_cpl_indices.F90:                            mct_aVect_clean, mct_avect_nRattr
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: l2x      ! temporary, land to coupler
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: x2l      ! temporary, coupler to land
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: r2x      ! temporary, runoff to coupler
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: s2x      ! temporary, glacier to coupler
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    type(mct_aVect) :: x2s      ! temporary, coupler to glacier
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(x2l, rList=seq_flds_x2l_fields, lsize=1)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(l2x, rList=seq_flds_l2x_fields, lsize=1)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_t          = mct_avect_indexra(l2x,'Sl_t')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_snowh      = mct_avect_indexra(l2x,'Sl_snowh')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_avsdr      = mct_avect_indexra(l2x,'Sl_avsdr')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_anidr      = mct_avect_indexra(l2x,'Sl_anidr')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_avsdf      = mct_avect_indexra(l2x,'Sl_avsdf')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_anidf      = mct_avect_indexra(l2x,'Sl_anidf')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_tref       = mct_avect_indexra(l2x,'Sl_tref')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_qref       = mct_avect_indexra(l2x,'Sl_qref')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_u10        = mct_avect_indexra(l2x,'Sl_u10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_taux     = mct_avect_indexra(l2x,'Fall_taux')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_tauy     = mct_avect_indexra(l2x,'Fall_tauy')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_lat      = mct_avect_indexra(l2x,'Fall_lat')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_sen      = mct_avect_indexra(l2x,'Fall_sen')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_lwup     = mct_avect_indexra(l2x,'Fall_lwup')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_evap     = mct_avect_indexra(l2x,'Fall_evap')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_swnet    = mct_avect_indexra(l2x,'Fall_swnet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_ram1       = mct_avect_indexra(l2x,'Sl_ram1')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Sl_fv         = mct_avect_indexra(l2x,'Sl_fv')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst1  = mct_avect_indexra(l2x,'Fall_flxdst1')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst2  = mct_avect_indexra(l2x,'Fall_flxdst2')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst3  = mct_avect_indexra(l2x,'Fall_flxdst3')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxdst4  = mct_avect_indexra(l2x,'Fall_flxdst4')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc1  = mct_avect_indexra(l2x,'Fall_flxvoc1' ,perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc2  = mct_avect_indexra(l2x,'Fall_flxvoc2' ,perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc3  = mct_avect_indexra(l2x,'Fall_flxvoc3' ,perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc4  = mct_avect_indexra(l2x,'Fall_flxvoc4' ,perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_flxvoc5  = mct_avect_indexra(l2x,'Fall_flxvoc5' ,perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_l2x_Fall_fco2_lnd = mct_avect_indexra(l2x,'Fall_fco2_lnd',perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:       index_l2x_Sl_ddvel = mct_avect_indexra(l2x, trim(drydep_fields_token))
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    nflds_l2x = mct_avect_nRattr(l2x)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_z          = mct_avect_indexra(x2l,'Sa_z')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_u          = mct_avect_indexra(x2l,'Sa_u')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_v          = mct_avect_indexra(x2l,'Sa_v')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_ptem       = mct_avect_indexra(x2l,'Sa_ptem')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_pbot       = mct_avect_indexra(x2l,'Sa_pbot')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_tbot       = mct_avect_indexra(x2l,'Sa_tbot')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_shum       = mct_avect_indexra(x2l,'Sa_shum')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_lwdn     = mct_avect_indexra(x2l,'Faxa_lwdn')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_rainc    = mct_avect_indexra(x2l,'Faxa_rainc')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_rainl    = mct_avect_indexra(x2l,'Faxa_rainl')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_snowc    = mct_avect_indexra(x2l,'Faxa_snowc')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_snowl    = mct_avect_indexra(x2l,'Faxa_snowl')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swndr    = mct_avect_indexra(x2l,'Faxa_swndr')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swvdr    = mct_avect_indexra(x2l,'Faxa_swvdr')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swndf    = mct_avect_indexra(x2l,'Faxa_swndf')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_swvdf    = mct_avect_indexra(x2l,'Faxa_swvdf')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphidry = mct_avect_indexra(x2l,'Faxa_bcphidry')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphodry = mct_avect_indexra(x2l,'Faxa_bcphodry')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_bcphiwet = mct_avect_indexra(x2l,'Faxa_bcphiwet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphidry = mct_avect_indexra(x2l,'Faxa_ocphidry')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphodry = mct_avect_indexra(x2l,'Faxa_ocphodry')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_ocphiwet = mct_avect_indexra(x2l,'Faxa_ocphiwet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry1  = mct_avect_indexra(x2l,'Faxa_dstdry1')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry2  = mct_avect_indexra(x2l,'Faxa_dstdry2')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry3  = mct_avect_indexra(x2l,'Faxa_dstdry3')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstdry4  = mct_avect_indexra(x2l,'Faxa_dstdry4')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet1  = mct_avect_indexra(x2l,'Faxa_dstwet1')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet2  = mct_avect_indexra(x2l,'Faxa_dstwet2')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet3  = mct_avect_indexra(x2l,'Faxa_dstwet3')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Faxa_dstwet4  = mct_avect_indexra(x2l,'Faxa_dstwet4')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_co2prog    = mct_avect_indexra(x2l,'Sa_co2prog',perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2l_Sa_co2diag    = mct_avect_indexra(x2l,'Sa_co2diag',perrwith='quiet')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    nflds_x2l = mct_avect_nRattr(x2l)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(x2l)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(l2x)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(r2x, rList=seq_flds_r2x_fields, lsize=1)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_r2x_Forr_roff  = mct_avect_indexra(r2x,'Forr_roff')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_r2x_Forr_ioff  = mct_avect_indexra(r2x,'Forr_ioff')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    nflds_r2x = mct_avect_nRattr(r2x)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(r2x)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(x2s, rList=seq_flds_x2s_fields, lsize=1)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_init(s2x, rList=seq_flds_s2x_fields, lsize=1)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac01   = mct_avect_indexra(x2s,'Sg_frac01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo01   = mct_avect_indexra(x2s,'Sg_topo01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi01 = mct_avect_indexra(x2s,'Fsgg_rofi01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl01 = mct_avect_indexra(x2s,'Fsgg_rofl01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx01 = mct_avect_indexra(x2s,'Fsgg_hflx01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac02   = mct_avect_indexra(x2s,'Sg_frac02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo02   = mct_avect_indexra(x2s,'Sg_topo02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac03   = mct_avect_indexra(x2s,'Sg_frac03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo03   = mct_avect_indexra(x2s,'Sg_topo03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi02 = mct_avect_indexra(x2s,'Fsgg_rofi02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl02 = mct_avect_indexra(x2s,'Fsgg_rofl02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx02 = mct_avect_indexra(x2s,'Fsgg_hflx02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi03 = mct_avect_indexra(x2s,'Fsgg_rofi03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl03 = mct_avect_indexra(x2s,'Fsgg_rofl03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx03 = mct_avect_indexra(x2s,'Fsgg_hflx03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac04   = mct_avect_indexra(x2s,'Sg_frac04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo04   = mct_avect_indexra(x2s,'Sg_topo04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac05   = mct_avect_indexra(x2s,'Sg_frac05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo05   = mct_avect_indexra(x2s,'Sg_topo05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi04 = mct_avect_indexra(x2s,'Fsgg_rofi04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl04 = mct_avect_indexra(x2s,'Fsgg_rofl04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx04 = mct_avect_indexra(x2s,'Fsgg_hflx04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi05 = mct_avect_indexra(x2s,'Fsgg_rofi05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl05 = mct_avect_indexra(x2s,'Fsgg_rofl05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx05 = mct_avect_indexra(x2s,'Fsgg_hflx05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac06   = mct_avect_indexra(x2s,'Sg_frac06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo06   = mct_avect_indexra(x2s,'Sg_topo06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac07   = mct_avect_indexra(x2s,'Sg_frac07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo07   = mct_avect_indexra(x2s,'Sg_topo07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac08   = mct_avect_indexra(x2s,'Sg_frac08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo08   = mct_avect_indexra(x2s,'Sg_topo08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac09   = mct_avect_indexra(x2s,'Sg_frac09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo09   = mct_avect_indexra(x2s,'Sg_topo09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_frac10   = mct_avect_indexra(x2s,'Sg_frac10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Sg_topo10   = mct_avect_indexra(x2s,'Sg_topo10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi06 = mct_avect_indexra(x2s,'Fsgg_rofi06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl06 = mct_avect_indexra(x2s,'Fsgg_rofl06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx06 = mct_avect_indexra(x2s,'Fsgg_hflx06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi07 = mct_avect_indexra(x2s,'Fsgg_rofi07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl07 = mct_avect_indexra(x2s,'Fsgg_rofl07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx07 = mct_avect_indexra(x2s,'Fsgg_hflx07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi08 = mct_avect_indexra(x2s,'Fsgg_rofi08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl08 = mct_avect_indexra(x2s,'Fsgg_rofl08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx08 = mct_avect_indexra(x2s,'Fsgg_hflx08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi09 = mct_avect_indexra(x2s,'Fsgg_rofi09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl09 = mct_avect_indexra(x2s,'Fsgg_rofl09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx09 = mct_avect_indexra(x2s,'Fsgg_hflx09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofi10 = mct_avect_indexra(x2s,'Fsgg_rofi10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_rofl10 = mct_avect_indexra(x2s,'Fsgg_rofl10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_x2s_Fsgg_hflx10 = mct_avect_indexra(x2s,'Fsgg_hflx10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    nflds_x2s = mct_avect_nRattr(x2s)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf01   = mct_avect_indexra(s2x,'Ss_tsrf01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo01   = mct_avect_indexra(s2x,'Ss_topo01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice01 = mct_avect_indexra(s2x,'Fgss_qice01')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf02   = mct_avect_indexra(s2x,'Ss_tsrf02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo02   = mct_avect_indexra(s2x,'Ss_topo02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf03   = mct_avect_indexra(s2x,'Ss_tsrf03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo03   = mct_avect_indexra(s2x,'Ss_topo03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice02 = mct_avect_indexra(s2x,'Fgss_qice02')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice03 = mct_avect_indexra(s2x,'Fgss_qice03')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf04   = mct_avect_indexra(s2x,'Ss_tsrf04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo04   = mct_avect_indexra(s2x,'Ss_topo04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf05   = mct_avect_indexra(s2x,'Ss_tsrf05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo05   = mct_avect_indexra(s2x,'Ss_topo05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice04 = mct_avect_indexra(s2x,'Fgss_qice04')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice05 = mct_avect_indexra(s2x,'Fgss_qice05')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf06   = mct_avect_indexra(s2x,'Ss_tsrf06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo06   = mct_avect_indexra(s2x,'Ss_topo06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf07   = mct_avect_indexra(s2x,'Ss_tsrf07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo07   = mct_avect_indexra(s2x,'Ss_topo07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf08   = mct_avect_indexra(s2x,'Ss_tsrf08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo08   = mct_avect_indexra(s2x,'Ss_topo08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf09   = mct_avect_indexra(s2x,'Ss_tsrf09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo09   = mct_avect_indexra(s2x,'Ss_topo09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_tsrf10   = mct_avect_indexra(s2x,'Ss_tsrf10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Ss_topo10   = mct_avect_indexra(s2x,'Ss_topo10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice06 = mct_avect_indexra(s2x,'Fgss_qice06')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice07 = mct_avect_indexra(s2x,'Fgss_qice07')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice08 = mct_avect_indexra(s2x,'Fgss_qice08')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice09 = mct_avect_indexra(s2x,'Fgss_qice09')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    index_s2x_Fgss_qice10 = mct_avect_indexra(s2x,'Fgss_qice10')
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    nflds_s2x = mct_avect_nRattr(s2x)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(x2s)
lnd/colm/src/cpl_share/clm_cpl_indices.F90:    call mct_aVect_clean(s2x)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  use mct_mod          , only : mct_aVect
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_SNAP     ! Snapshot of land to coupler data on the land grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_SUM      ! Summation of land to coupler data on the land grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: l2x_l_clm      ! Internal clm grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: x2l_l_clm      ! Internal clm grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: s2x_s_SNAP     ! Snapshot of sno to coupler data on the land grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:  type(mct_aVect)   :: s2x_s_SUM      ! Summation of sno to coupler data on the land grid 
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: x2l_l, l2x_l     ! land model import and export states
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: r2x_r            ! River export state
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect),            intent(inout) :: x2s_s, s2x_s     ! Snow-model import and export states
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2l_l, rList=seq_flds_x2l_fields, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2l_l)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l, rList=seq_flds_l2x_fields, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_SNAP, rList=seq_flds_l2x_fluxes, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_SNAP)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_SUM , rList=seq_flds_l2x_fluxes, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2l_l_clm, rList=seq_flds_x2l_fields, lsize=endg_l-begg_l+1)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2l_l_clm)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(l2x_l_clm, rList=seq_flds_l2x_fields, lsize=endg_l-begg_l+1)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(l2x_l_clm)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(r2x_r, rList=seq_flds_r2x_fields, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(r2x_r)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_init(x2s_s, rList=seq_flds_x2s_fields, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_zero(x2s_s)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_init(s2x_s, rList=seq_flds_s2x_fields, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_zero(s2x_s)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_init(s2x_s_SUM , rList=seq_flds_s2x_fluxes, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_zero(s2x_s_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_init(s2x_s_SNAP , rList=seq_flds_s2x_fluxes, lsize=lsize)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!      call mct_aVect_zero(s2x_s_SNAP )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: x2l_l     ! Import state to land model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: l2x_l     ! Export state from land model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: r2x_r     ! Export state from runoff model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: x2s_s     ! Import state for snow model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)  , intent(inout) :: s2x_s     ! Export state for snow model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_copy( l2x_l, l2x_l_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_copy( l2x_l, l2x_l_SNAP )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:          call mct_aVect_accum( aVin=l2x_l_SNAP, aVout=l2x_l_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!            call mct_aVect_copy( s2x_s, s2x_s_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!            call mct_aVect_copy( s2x_s, s2x_s_SNAP )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!            call mct_aVect_accum( aVin=s2x_s_SNAP, aVout=s2x_s_SUM )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_avg ( l2x_l_SUM, avg_count)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_copy( l2x_l_SUM, l2x_l )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero( l2x_l_SUM) 
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!         call mct_aVect_avg ( s2x_s_SUM, avg_count_sno)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!         call mct_aVect_copy( s2x_s_SUM, s2x_s )
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:!         call mct_aVect_zero( s2x_s_SUM)
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: l2x_l   ! Land to coupler export state on land grid
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod         , only: mct_aVect
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2l_l   ! Driver MCT import state to land model
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod     , only : mct_aVect
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect), intent(inout) :: r2x_r  ! Runoff to coupler export state
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: s2x_s
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    use mct_mod         , only: mct_aVect
lnd/colm/src/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2s_s
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) ::      r2x
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(d2x, rList=flds_d2x, lsize=lsize)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(d2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2d, rList=flds_x2d, lsize=lsize)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2d)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(r2x, rList=flds_r2x, lsize=lsize_r)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(r2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(x2s, rList=flds_x2s, lsize=lsize_s)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(x2s)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_init(s2x, rList=flds_s2x, lsize=lsize_s)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:    call mct_aVect_zero(s2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: r2x
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2s
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: s2x
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   lsize = mct_avect_lsize(x2d)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   lsize_r = mct_avect_lsize(r2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   lsize_s = mct_avect_lsize(x2s)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   nflds_d2x = mct_avect_nRattr(d2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   nflds_x2d = mct_avect_nRattr(x2d)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   nflds_r2x = mct_avect_nRattr(r2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   nflds_s2x = mct_avect_nRattr(s2x)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   nflds_x2s = mct_avect_nRattr(x2s)
lnd/xlnd/cpl_mct/lnd_comp_mct.F90:   kl = mct_aVect_indexRA(d2x,"Sl_landfrac",perrWith=subName)
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: r2x
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2s, s2x
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    call mct_aVect_zero(x2d)
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    call mct_aVect_zero(x2s)
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: r2x
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2s
lnd/xlnd/cpl_esmf/lnd_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: s2x
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_aa%dom%data,"area"  ,perrWith='aa area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_aa%dom%data,"aream" ,perrWith='aa aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_aa%dom%data,"ascale",perrWith='aa ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ll%dom%data,"area"  ,perrWith='ll area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ll%dom%data,"aream" ,perrWith='ll aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ll%dom%data,"ascale",perrWith='ll ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_rr%dom%data,"area"  ,perrWith='rr area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_rr%dom%data,"aream" ,perrWith='rr aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_rr%dom%data,"ascale",perrWith='rr ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ss%dom%data,"area"  ,perrWith='ss area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ss%dom%data,"aream" ,perrWith='ss aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ss%dom%data,"ascale",perrWith='ss ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_oo%dom%data,"area"  ,perrWith='oo area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_oo%dom%data,"aream" ,perrWith='oo aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_oo%dom%data,"ascale",perrWith='oo ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_ii%dom%data,"area"  ,perrWith='ii area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_ii%dom%data,"aream" ,perrWith='ii aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_ii%dom%data,"ascale",perrWith='ii ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k1 = mct_aVect_indexRa(cdata_gg%dom%data,"area"  ,perrWith='gg area ')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k2 = mct_aVect_indexRa(cdata_gg%dom%data,"aream" ,perrWith='gg aream')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      k3 = mct_aVect_indexRa(cdata_gg%dom%data,"ascale",perrWith='gg ascale')
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2a_aa)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2l_ll)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_init(r2xacc_rx%data, r2x_rx, mct_aVect_lsize(r2x_rx))
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2s_ss)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2i_ii)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2g_gg)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_zero(x2o_oo)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_init(x2oacc_ox%data, x2o_ox, mct_aVect_lsize(x2o_ox))
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_aVect_init(xao_ox, rList=seq_flds_xao_fields, lsize=mct_aVect_lsize(o2x_ox))
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_aVect_zero(xao_ox)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:      call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:                  call mct_aVect_copy(aVin=r2x_ox, aVout=x2oacc_ox%data)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         if (ocn_prognostic) call mct_avect_vecmult(x2o_oo,drv2mdl_oo,seq_flds_x2o_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(o2x_oo,mdl2drv_oo,seq_flds_o2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         if (ice_prognostic) call mct_avect_vecmult(x2i_ii,drv2mdl_ii,seq_flds_x2i_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(i2x_ii,mdl2drv_ii,seq_flds_i2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:            call mct_avect_vecmult(x2l_ll,drv2mdl_ll,seq_flds_x2l_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:            call mct_avect_vecmult(x2s_ss,drv2mdl_ss,seq_flds_x2s_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(l2x_ll,mdl2drv_ll,seq_flds_l2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:            call mct_avect_vecmult(r2x_rr,mdl2drv_rr,seq_flds_r2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:            call mct_avect_vecmult(s2x_ss,mdl2drv_ss,seq_flds_s2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         if (atm_prognostic) call mct_avect_vecmult(x2a_aa,drv2mdl_aa,seq_flds_x2a_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(a2x_aa,mdl2drv_aa,seq_flds_a2x_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         if (glc_prognostic) call mct_avect_vecmult(x2g_gg,drv2mdl_gg,seq_flds_x2g_fluxes)
ocn/licom/licom_conf/ccsm_comp_mod.F90:         call mct_avect_vecmult(g2x_gg,mdl2drv_gg,seq_flds_g2x_fluxes)
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)             , intent(inout) :: x2o_o
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)             , intent(inout) :: o2x_o
ocn/licom/source/licomcpl7.F90:    !type(mct_aVect)             , intent(inout) :: r2x_o
ocn/licom/source/licomcpl7.F90:   call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
ocn/licom/source/licomcpl7.F90:   call mct_aVect_zero(x2o_o)
ocn/licom/source/licomcpl7.F90:   call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize)
ocn/licom/source/licomcpl7.F90:   call mct_aVect_zero(o2x_o)
ocn/licom/source/licomcpl7.F90:!   call mct_aVect_init(r2x_o, rList=seq_flds_r2x_fields, lsize=lsize)
ocn/licom/source/licomcpl7.F90:!   call mct_aVect_zero(r2x_o)
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)             , intent(inout) :: x2o_o
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)             , intent(inout) :: o2x_o
ocn/licom/source/licomcpl7.F90:!    type(mct_aVect)             , intent(inout) :: r2x_o
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)   , intent(inout) ::  x2o_o
ocn/licom/source/licomcpl7.F90:    type(mct_aVect)   , intent(inout) :: o2x_o
ocn/licom/source/licomcpl7.F90:    call mct_aVect_zero(dom_o%data)
ocn/licom/source/POP_CplIndices.F90:    type(mct_aVect) :: o2x      ! temporary
ocn/licom/source/POP_CplIndices.F90:    type(mct_aVect) :: x2o      ! temporary
ocn/licom/source/POP_CplIndices.F90:    !type(mct_aVect) :: r2x_rx      ! temporary !LPF 20121219
ocn/licom/source/POP_CplIndices.F90:    !type(mct_aVect) :: r2x_o      ! temporary !LPF 20121219
ocn/licom/source/POP_CplIndices.F90:    call mct_aVect_init(x2o, rList=seq_flds_x2o_fields, lsize=1)
ocn/licom/source/POP_CplIndices.F90:    call mct_aVect_init(o2x, rList=seq_flds_o2x_fields, lsize=1)
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_t          = mct_avect_indexra(o2x,'So_t')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_u          = mct_avect_indexra(o2x,'So_u')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_v          = mct_avect_indexra(o2x,'So_v')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_s          = mct_avect_indexra(o2x,'So_s')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_dhdx       = mct_avect_indexra(o2x,'So_dhdx')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_So_dhdy       = mct_avect_indexra(o2x,'So_dhdy')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_Fioo_q        = mct_avect_indexra(o2x,'Fioo_q')
ocn/licom/source/POP_CplIndices.F90:    !index_o2x_Faoo_fco2_ocn= mct_avect_indexra(o2x,'Faoo_fco2_ocn',perrWith='quiet')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_Faoo_fco2_ocn = mct_avect_indexra(o2x,'Faoo_fco2'    ,perrWith='quiet')
ocn/licom/source/POP_CplIndices.F90:    index_o2x_Faoo_fdms_ocn = mct_avect_indexra(o2x,'Faoo_fdms_ocn',perrWith='quiet')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Si_ifrac      = mct_avect_indexra(x2o,'Si_ifrac')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Sa_pslv       = mct_avect_indexra(x2o,'Sa_pslv')
ocn/licom/source/POP_CplIndices.F90:    !index_x2o_So_duu10n    = mct_avect_indexra(x2o,'So_duu10n')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_So_duu10n     = mct_avect_indexra(x2o,'Sx_duu10n')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_tauy     = mct_avect_indexra(x2o,'Foxx_tauy')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_taux     = mct_avect_indexra(x2o,'Foxx_taux')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_swnet    = mct_avect_indexra(x2o,'Foxx_swnet')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_lat      = mct_avect_indexra(x2o,'Foxx_lat')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_sen      = mct_avect_indexra(x2o,'Foxx_sen')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_lwdn     = mct_avect_indexra(x2o,'Foxx_lwdn')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_lwup     = mct_avect_indexra(x2o,'Foxx_lwup')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_melth    = mct_avect_indexra(x2o,'Foxx_melth')   
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_salt     = mct_avect_indexra(x2o,'Foxx_salt')   
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_prec     = mct_avect_indexra(x2o,'Foxx_prec')   
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_snow     = mct_avect_indexra(x2o,'Foxx_snow')   
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_rain     = mct_avect_indexra(x2o,'Foxx_rain')   
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_evap     = mct_avect_indexra(x2o,'Foxx_evap')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_meltw    = mct_avect_indexra(x2o,'Foxx_meltw')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Forr_roff     = mct_avect_indexra(x2o,'Forr_roff') !LPF 20121219
ocn/licom/source/POP_CplIndices.F90:    !index_r2o_Forr_roff     = mct_avect_indexra(r2x_rx,'Forr_roff') !LPF 20121219
ocn/licom/source/POP_CplIndices.F90:    !index_r2o_Forr_roff     = mct_avect_indexra(r2x_o,'Forr_roff') !LPF 20121219
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Forr_ioff     = mct_avect_indexra(x2o,'Forr_ioff')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_bcphidry = mct_avect_indexra(x2o,'Foxx_bcphidry')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_bcphodry = mct_avect_indexra(x2o,'Foxx_bcphodry')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_bcphiwet = mct_avect_indexra(x2o,'Foxx_bcphiwet')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_ocphidry = mct_avect_indexra(x2o,'Foxx_ocphidry')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_ocphodry = mct_avect_indexra(x2o,'Foxx_ocphodry')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_ocphiwet = mct_avect_indexra(x2o,'Foxx_ocphiwet')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstdry1  = mct_avect_indexra(x2o,'Foxx_dstdry1')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstdry2  = mct_avect_indexra(x2o,'Foxx_dstdry2')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstdry3  = mct_avect_indexra(x2o,'Foxx_dstdry3')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstdry4  = mct_avect_indexra(x2o,'Foxx_dstdry4')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstwet1  = mct_avect_indexra(x2o,'Foxx_dstwet1')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstwet2  = mct_avect_indexra(x2o,'Foxx_dstwet2')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstwet3  = mct_avect_indexra(x2o,'Foxx_dstwet3')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Foxx_dstwet4  = mct_avect_indexra(x2o,'Foxx_dstwet4')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Sa_co2prog    = mct_avect_indexra(x2o,'Sa_co2prog',perrWith='quiet')
ocn/licom/source/POP_CplIndices.F90:    index_x2o_Sa_co2diag    = mct_avect_indexra(x2o,'Sa_co2diag',perrWith='quiet')
ocn/licom/source/POP_CplIndices.F90:    call mct_aVect_clean(x2o)
ocn/licom/source/POP_CplIndices.F90:    call mct_aVect_clean(o2x)
ocn/licom/source/POP_CplIndices.F90:    !call mct_aVect_clean(r2x_o) !LPF 20121219
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)          , intent(inout) :: x2d, d2x
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(d2x, rList=flds_d2x, lsize=lsize)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(d2x)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_init(x2d, rList=flds_x2d, lsize=lsize)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(x2d)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        ! driver-> dead
ocn/xocn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        ! dead  -> driver
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    lsize = mct_avect_lsize(x2d)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    nflds_d2x = mct_avect_nRattr(d2x)
ocn/xocn/cpl_mct/ocn_comp_mct.F90:    nflds_x2d = mct_avect_nRattr(x2d)
ocn/xocn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ocn/xocn/cpl_esmf/ocn_comp_mct.F90:    call mct_aVect_zero(x2d)
ocn/xocn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> dead
ocn/xocn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! dead   -> driver
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    type(mct_aVect) :: o2x      ! temporary
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    type(mct_aVect) :: x2o      ! temporary
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    call mct_aVect_init(x2o, rList=seq_flds_x2o_fields, lsize=1)
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    call mct_aVect_init(o2x, rList=seq_flds_o2x_fields, lsize=1)
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_t          = mct_avect_indexra(o2x,'So_t')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_u          = mct_avect_indexra(o2x,'So_u')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_v          = mct_avect_indexra(o2x,'So_v')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_s          = mct_avect_indexra(o2x,'So_s')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_dhdx       = mct_avect_indexra(o2x,'So_dhdx')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_So_dhdy       = mct_avect_indexra(o2x,'So_dhdy')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_Fioo_q        = mct_avect_indexra(o2x,'Fioo_q')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    !index_o2x_Faoo_fco2_ocn= mct_avect_indexra(o2x,'Faoo_fco2_ocn',perrWith='quiet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_Faoo_fco2_ocn = mct_avect_indexra(o2x,'Faoo_fco2'    ,perrWith='quiet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_o2x_Faoo_fdms_ocn = mct_avect_indexra(o2x,'Faoo_fdms_ocn',perrWith='quiet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Si_ifrac      = mct_avect_indexra(x2o,'Si_ifrac')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Sa_pslv       = mct_avect_indexra(x2o,'Sa_pslv')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    !index_x2o_So_duu10n    = mct_avect_indexra(x2o,'So_duu10n')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_So_duu10n     = mct_avect_indexra(x2o,'Sx_duu10n')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_tauy     = mct_avect_indexra(x2o,'Foxx_tauy')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_taux     = mct_avect_indexra(x2o,'Foxx_taux')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_swnet    = mct_avect_indexra(x2o,'Foxx_swnet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_lat      = mct_avect_indexra(x2o,'Foxx_lat')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_sen      = mct_avect_indexra(x2o,'Foxx_sen')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_lwdn     = mct_avect_indexra(x2o,'Foxx_lwdn')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_lwup     = mct_avect_indexra(x2o,'Foxx_lwup')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_melth    = mct_avect_indexra(x2o,'Foxx_melth')   
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_salt     = mct_avect_indexra(x2o,'Foxx_salt')   
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_prec     = mct_avect_indexra(x2o,'Foxx_prec')   
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_snow     = mct_avect_indexra(x2o,'Foxx_snow')   
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_rain     = mct_avect_indexra(x2o,'Foxx_rain')   
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_evap     = mct_avect_indexra(x2o,'Foxx_evap')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_meltw    = mct_avect_indexra(x2o,'Foxx_meltw')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Forr_roff     = mct_avect_indexra(x2o,'Forr_roff')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Forr_ioff     = mct_avect_indexra(x2o,'Forr_ioff')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_bcphidry = mct_avect_indexra(x2o,'Foxx_bcphidry')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_bcphodry = mct_avect_indexra(x2o,'Foxx_bcphodry')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_bcphiwet = mct_avect_indexra(x2o,'Foxx_bcphiwet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_ocphidry = mct_avect_indexra(x2o,'Foxx_ocphidry')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_ocphodry = mct_avect_indexra(x2o,'Foxx_ocphodry')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_ocphiwet = mct_avect_indexra(x2o,'Foxx_ocphiwet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstdry1  = mct_avect_indexra(x2o,'Foxx_dstdry1')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstdry2  = mct_avect_indexra(x2o,'Foxx_dstdry2')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstdry3  = mct_avect_indexra(x2o,'Foxx_dstdry3')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstdry4  = mct_avect_indexra(x2o,'Foxx_dstdry4')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstwet1  = mct_avect_indexra(x2o,'Foxx_dstwet1')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstwet2  = mct_avect_indexra(x2o,'Foxx_dstwet2')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstwet3  = mct_avect_indexra(x2o,'Foxx_dstwet3')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Foxx_dstwet4  = mct_avect_indexra(x2o,'Foxx_dstwet4')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Sa_co2prog    = mct_avect_indexra(x2o,'Sa_co2prog',perrWith='quiet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    index_x2o_Sa_co2diag    = mct_avect_indexra(x2o,'Sa_co2diag',perrWith='quiet')
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    call mct_aVect_clean(x2o)
ocn/pop2/drivers/cpl_share/POP_CplIndices.F90:    call mct_aVect_clean(o2x)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2o_o, o2x_o
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   call mct_aVect_init(x2o_o, rList=seq_flds_x2o_fields, lsize=lsize)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   call mct_aVect_zero(x2o_o)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   call mct_aVect_init(o2x_o, rList=seq_flds_o2x_fields, lsize=lsize) 
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   call mct_aVect_zero(o2x_o)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   nsend = mct_avect_nRattr(o2x_o)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   nrecv = mct_avect_nRattr(x2o_o)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2o_o
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: o2x_o
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:    call mct_aVect_zero(dom_o%data)
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)   , intent(inout) :: x2o_o
ocn/pop2/drivers/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)   , intent(inout) :: o2x_o
ocn/pop2/drivers/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
ocn/pop2/drivers/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
ocn/pop2/drivers/cpl_esmf/ocn_comp_mct.F90:      call mct_aVect_zero(x2d)
ocn/pop2/drivers/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
ocn/pop2/drivers/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
ocn/docn/docn_comp_mod.F90:  type(mct_avect) :: avstrm   ! av of data from stream
ocn/docn/docn_comp_mod.F90:    type(mct_aVect)             , intent(inout) :: x2o, o2x
ocn/docn/docn_comp_mod.F90:    call mct_aVect_init(o2x, rList=seq_flds_o2x_fields, lsize=lsize)
ocn/docn/docn_comp_mod.F90:    call mct_aVect_zero(o2x)
ocn/docn/docn_comp_mod.F90:    kt    = mct_aVect_indexRA(o2x,'So_t')
ocn/docn/docn_comp_mod.F90:    ks    = mct_aVect_indexRA(o2x,'So_s')
ocn/docn/docn_comp_mod.F90:    ku    = mct_aVect_indexRA(o2x,'So_u')
ocn/docn/docn_comp_mod.F90:    kv    = mct_aVect_indexRA(o2x,'So_v')
ocn/docn/docn_comp_mod.F90:    kdhdx = mct_aVect_indexRA(o2x,'So_dhdx')
ocn/docn/docn_comp_mod.F90:    kdhdy = mct_aVect_indexRA(o2x,'So_dhdy')
ocn/docn/docn_comp_mod.F90:    kq    = mct_aVect_indexRA(o2x,'Fioo_q')
ocn/docn/docn_comp_mod.F90:    call mct_aVect_init(x2o, rList=seq_flds_x2o_fields, lsize=lsize)
ocn/docn/docn_comp_mod.F90:    call mct_aVect_zero(x2o)
ocn/docn/docn_comp_mod.F90:    kswnet = mct_aVect_indexRA(x2o,'Foxx_swnet')
ocn/docn/docn_comp_mod.F90:    klwup  = mct_aVect_indexRA(x2o,'Foxx_lwup')
ocn/docn/docn_comp_mod.F90:    klwdn  = mct_aVect_indexRA(x2o,'Foxx_lwdn')
ocn/docn/docn_comp_mod.F90:    ksen   = mct_aVect_indexRA(x2o,'Foxx_sen')
ocn/docn/docn_comp_mod.F90:    klat   = mct_aVect_indexRA(x2o,'Foxx_lat')
ocn/docn/docn_comp_mod.F90:    kmelth = mct_aVect_indexRA(x2o,'Foxx_melth')
ocn/docn/docn_comp_mod.F90:    ksnow  = mct_aVect_indexRA(x2o,'Foxx_snow')
ocn/docn/docn_comp_mod.F90:    kioff  = mct_aVect_indexRA(x2o,'Forr_ioff')
ocn/docn/docn_comp_mod.F90:    call mct_aVect_init(avstrm, rList=flds_strm, lsize=lsize)
ocn/docn/docn_comp_mod.F90:    call mct_aVect_zero(avstrm)
ocn/docn/docn_comp_mod.F90:    kh    = mct_aVect_indexRA(avstrm,'strm_h')
ocn/docn/docn_comp_mod.F90:    kqbot = mct_aVect_indexRA(avstrm,'strm_qbot')
ocn/docn/docn_comp_mod.F90:    kmask = mct_aVect_indexRA(ggrid%data,'mask')
ocn/docn/docn_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: x2o        ! driver -> dead
ocn/docn/docn_comp_mod.F90:   type(mct_aVect)             ,intent(inout) :: o2x        ! dead   -> driver
ocn/docn/docn_comp_mod.F90:!  lsize = mct_avect_lsize(x2o)
ocn/docn/docn_comp_mod.F90:!  nflds_x2o = mct_avect_nRattr(x2o)
ocn/docn/docn_comp_mod.F90:      call mct_aVect_zero(o2x)
ocn/docn/docn_comp_mod.F90:      lsize = mct_avect_lsize(o2x)
ocn/docn/docn_comp_mod.F90:      lsize = mct_avect_lsize(o2x)
ocn/docn/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2o, o2x
ocn/docn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2o        ! driver -> dead
ocn/docn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: o2x        ! dead   -> driver
ocn/docn/cpl_esmf/ocn_comp_esmf.F90:   type(mct_aVect)     :: x2d
ocn/docn/cpl_esmf/ocn_comp_esmf.F90:   type(mct_aVect)     :: d2x
ocn/docn/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect), intent(inout)              :: x2d
ocn/docn/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect), intent(inout)              :: d2x   
ocn/docn/cpl_esmf/ocn_comp_mct.F90:      call mct_aVect_zero(x2d)
ocn/docn/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d
ocn/docn/cpl_esmf/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x
ocn/socn/cpl_mct/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ocn/socn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: x2d        
ocn/socn/cpl_mct/ocn_comp_mct.F90:   type(mct_aVect)             ,intent(inout) :: d2x        
ocn/socn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             , intent(inout) :: x2d, d2x
ocn/socn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: x2d        ! driver -> stub
ocn/socn/cpl_esmf/ocn_comp_mct.F90:    type(mct_aVect)             ,intent(inout) :: d2x        ! stub   -> driver
