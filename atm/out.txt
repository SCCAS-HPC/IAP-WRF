cam/bld/build-namelist:    add_default($nl, 'fft_flt');
cam/bld/namelist_files/namelist_defaults_cam.xml.bak:<fft_flt phys="cam3"  >0</fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml.bak:<fft_flt              >1</fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml.bak2:<fft_flt phys="cam3"  >0</fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml.bak2:<fft_flt              >1</fft_flt>
cam/bld/namelist_files/namelist_definition.xml:<entry id="fft_flt" type="integer"  category="dyn_fv"
cam/bld/namelist_files/namelist_definition.xml:1 for FFT filter always, 0 for combined algebraic/FFT filter.  The value 0
cam/bld/namelist_files/namelist_definition.xml:variable ALT_PFT defined to get the behavior now obtained by setting fft_flt=1.
cam/bld/namelist_files/namelist_defaults_cam.xml:<fft_flt phys="cam3"  >0</fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml:<fft_flt              >1</fft_flt>
cam/bld/namelist_files/use_cases/aquaplanet_cam3.xml:<fft_flt                                   > 0         </fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml.bak3:<fft_flt phys="cam3"  >0</fft_flt>
cam/bld/namelist_files/namelist_defaults_cam.xml.bak3:<fft_flt              >1</fft_flt>
cam/src/dynamics/fv/pft_module.F90: use fv_control_mod, only: fft_flt
cam/src/dynamics/fv/pft_module.F90:      public pft2d, pft_cf, fftfax, pftinit, fftrans
cam/src/dynamics/fv/pft_module.F90:!         fftfax    &  \\ \hline
cam/src/dynamics/fv/pft_module.F90:!         fftrans   &  \\ \hline
cam/src/dynamics/fv/pft_module.F90:      integer, save :: ifax(13)                      !ECMWF fft
cam/src/dynamics/fv/pft_module.F90:! !IROUTINE: pftinit --- Two-dimensional FFT initialization
cam/src/dynamics/fv/pft_module.F90:!   Perform a two-dimensional FFT initialization
cam/src/dynamics/fv/pft_module.F90:      integer icffta
cam/src/dynamics/fv/pft_module.F90:      real(r8) rcffta
cam/src/dynamics/fv/pft_module.F90:#if defined( LIBSCI_FFT )
cam/src/dynamics/fv/pft_module.F90:          icffta = 0
cam/src/dynamics/fv/pft_module.F90:          rcffta = D0_0
cam/src/dynamics/fv/pft_module.F90:          call dzfftm(0, im, icffta, rcffta, rcffta, icffta,     &
cam/src/dynamics/fv/pft_module.F90:               rcffta, icffta, trigs, rcffta, icffta)
cam/src/dynamics/fv/pft_module.F90:          call fftfax(im, ifax, trigs)
cam/src/dynamics/fv/pft_module.F90:      real(r8)  damp(im,jp)        ! FFT damping coefficients
cam/src/dynamics/fv/pft_module.F90:       if(fft_flt .eq. 0 .and. s(j) <= D4_0) then
cam/src/dynamics/fv/pft_module.F90:! Packing for FFT 
cam/src/dynamics/fv/pft_module.F90:      call fftrans(damp, im, jp, nj, jf, q1, q2)
cam/src/dynamics/fv/pft_module.F90:! !IROUTINE: fftrans --- Two-dimensional fast Fourier transform
cam/src/dynamics/fv/pft_module.F90: subroutine fftrans(damp, im, jp, nj, jf, q1, q2)
cam/src/dynamics/fv/pft_module.F90:      real(r8)  damp(im,jp)        ! FFT damping coefficients
cam/src/dynamics/fv/pft_module.F90:#if defined( LIBSCI_FFT )
cam/src/dynamics/fv/pft_module.F90:#elif defined( SGI_FFT )
cam/src/dynamics/fv/pft_module.F90:#if defined( LIBSCI_FFT )
cam/src/dynamics/fv/pft_module.F90:      call dzfftm(-1, im, nj, D1_0, q1, im+2, cqf, imo2p,      &
cam/src/dynamics/fv/pft_module.F90:      call zdfftm( 1, im, nj, ooim, cqf, imo2p, q1, im+2,    &
cam/src/dynamics/fv/pft_module.F90:#elif defined( SGI_FFT )
cam/src/dynamics/fv/pft_module.F90:      call dzfftm1du (-1, im_4, nj_4, q1, 1, imp2_4, trigs)
cam/src/dynamics/fv/pft_module.F90:      call dzfftm1du (1, im_4, nj_4, q1, 1, imp2_4, trigs)
cam/src/dynamics/fv/pft_module.F90:      call fft991 (q1, q2, trigs, ifax, 1, im+2, im, nj, -1)
cam/src/dynamics/fv/pft_module.F90:      call fft991 (q1, q2, trigs, ifax, 1, im+2, im, nj, 1)
cam/src/dynamics/fv/pft_module.F90: end subroutine fftrans
cam/src/dynamics/fv/pft_module.F90:! !IROUTINE: pft_cf --- Calculate algebraic and FFT polar filters
cam/src/dynamics/fv/pft_module.F90:      real (r8)   dc(im,js2g0:jn2g0)  ! FFT filter at center
cam/src/dynamics/fv/pft_module.F90:      real (r8)   de(im,js2g0:jn1g1)  ! FFT filter at edge
cam/src/dynamics/fv/pft_module.F90:!   Compute coefficients for the 3-point algebraic and the FFT
cam/src/dynamics/fv/pft_module.F90:! INIT fft polar coefficients:
cam/src/dynamics/fv/pft_module.F90:          if(fft_flt .eq. 0 .and. sc(j) <= D2_0) then
cam/src/dynamics/fv/pft_module.F90:          elseif(fft_flt .eq. 0 .and. sc(j) <= D4_0) then
cam/src/dynamics/fv/pft_module.F90:! FFT filter
cam/src/dynamics/fv/pft_module.F90:          if(fft_flt .eq. 0 .and. se(j) <= D2_0) then
cam/src/dynamics/fv/pft_module.F90:          elseif(fft_flt .eq. 0 .and. se(j) <= D4_0) then
cam/src/dynamics/fv/pft_module.F90:! FFT
cam/src/dynamics/fv/pft_module.F90:! !IROUTINE: fftfax --- Initialize FFT
cam/src/dynamics/fv/pft_module.F90: subroutine fftfax (n, ifaxx, trigss)
cam/src/dynamics/fv/pft_module.F90:!   Initialize the fast Fourier transform.  If CPP token SGI_FFT is
cam/src/dynamics/fv/pft_module.F90:#if defined( SGI_FFT )
cam/src/dynamics/fv/pft_module.F90:      call dzfftm1dui (nn,trigss)
cam/src/dynamics/fv/pft_module.F90: end subroutine fftfax
cam/src/dynamics/fv/tp_core.F90:   integer jafftn1, jafffn1
cam/src/dynamics/fv/tp_core.F90:   integer jafft1(jhigh-jlow+1), jafff1(jhigh-jlow+1)
cam/src/dynamics/fv/tp_core.F90:   integer jafftn2, jafffn2
cam/src/dynamics/fv/tp_core.F90:   integer jafft2(jhigh-jlow+1), jafff2(jhigh-jlow+1)
cam/src/dynamics/fv/tp_core.F90:   jafftn1 = 0
cam/src/dynamics/fv/tp_core.F90:   jafftn2 = 0
cam/src/dynamics/fv/tp_core.F90:            jafftn1 = jafftn1 + 1
cam/src/dynamics/fv/tp_core.F90:            jafft1(jafftn1) = j
cam/src/dynamics/fv/tp_core.F90:            jafftn2 = jafftn2 + 1
cam/src/dynamics/fv/tp_core.F90:            jafft2(jafftn2) = j
cam/src/dynamics/fv/tp_core.F90:   do ja = 1, jafftn1
cam/src/dynamics/fv/tp_core.F90:      j = jafft1(ja)
cam/src/dynamics/fv/tp_core.F90:   do ja = 1, jafftn2
cam/src/dynamics/fv/tp_core.F90:      j = jafft2(ja)
cam/src/dynamics/fv/fv_control_mod.F90:  integer :: fft_flt = 1                 ! 0 => FFT/algebraic filter; 1 => FFT filter
cam/src/dynamics/fv/fv_control_mod.F90:   namelist /dyn_fv_inparm/ nsplit, nspltrac, nspltvrm, filtcw, fft_flt,   &
cam/src/dynamics/fv/fv_control_mod.F90:   call mpibcast (fft_flt ,1,mpiint,0,mpicom)
cam/src/dynamics/fv/dynamics_vars.F90:      integer  :: icffta
cam/src/dynamics/fv/dynamics_vars.F90:      real(r8) :: rcffta
cam/src/dynamics/iap/Filt.F90:      use iap_fft,  only: N0, TRIGS0, IFAX0, IAP_FFT99
cam/src/dynamics/iap/Filt.F90:!      integer  :: JBH    ! begin index of latitude to do FFT + Arakawa.damping 
cam/src/dynamics/iap/Filt.F90:!     LU.FFT + ARAKAWA.DAMPING       NEAR POLES
cam/src/dynamics/iap/Filt.F90:!zhh  do FFT + Arakawa.damping at north pole
cam/src/dynamics/iap/Filt.F90:            CALL IAP_FFT99(A,WORK,TRIGS0,IFAX0,INC,JUMP,N0,LOT,ISIGN)
cam/src/dynamics/iap/Filt.F90:            CALL IAP_FFT99(A,WORK,TRIGS0,IFAX0,INC,JUMP,N0,LOT,ISIGN)
cam/src/dynamics/iap/Filt.F90:!zhh  do FFT + Arakawa.damping near south pole
cam/src/dynamics/iap/Filt.F90:            CALL IAP_FFT99(A,WORK,TRIGS0,IFAX0,INC,JUMP,N0,LOT,ISIGN)
cam/src/dynamics/iap/Filt.F90:            CALL IAP_FFT99(A,WORK,TRIGS0,IFAX0,INC,JUMP,N0,LOT,ISIGN)
cam/src/dynamics/iap/Filt.F90:!     FFT 2-GRID WAVE IN LOWER LATITUDES
cam/src/dynamics/iap/Filt.F90:      use iap_fft, only: IAP_SET99
cam/src/dynamics/iap/Filt.F90:!-------------------------- SET CONSTANTS FOR FFT USAGE ---------------------------------------
cam/src/dynamics/iap/Filt.F90:!     LB         : INDEX  OF THE FIRST LATITUDE UNDER HIGH-FFT
cam/src/dynamics/iap/Filt.F90:!     LH         : NUMBER OF THE HIGH-LATITUDES UNDER HIGH-FFT
cam/src/dynamics/iap/Filt.F90:!             FFT 2-GRID WAVE        FOR LOWER  LAT    [30,00]
cam/src/dynamics/iap/Filt.F90:!     WEAK   HIGH-FFT
cam/src/dynamics/iap/Filt.F90:!     STRONG HIGH-FFT
cam/src/dynamics/iap/Filt.F90:!     USE FFT+SHAPIRO_SMOOTHER
cam/src/dynamics/iap/Filt.F90:!     USE PURE FFT IF REQUESTED
cam/src/dynamics/iap/engy_tdif1.F90:                     difft   ,nlon    )
cam/src/dynamics/iap/engy_tdif1.F90:  real(r8), intent(out) :: difft                ! accumulator
cam/src/dynamics/iap/engy_tdif1.F90:  difft = 0.
cam/src/dynamics/iap/engy_tdif1.F90:        difft = difft + pdel(i,k)
cam/src/dynamics/iap/engy_tdif1.F90:  difft = difft*const
cam/src/dynamics/iap/dyfram.F90:   use flexib,     only: IBCFFT, DTadv, DTIMEQ 
cam/src/dynamics/iap/dyfram.F90:      call PHYSDM(IBCFFT, U, V, T)    !zhh  2008.4.21
cam/src/dynamics/iap/dyfram.F90:      CALL trans_IAP_tend(IBCFFT, SU, SV, ST)    !zhh 2008.4.21
cam/src/dynamics/iap/tend_pstar.F90:   use flexib,     only: IBCFFT
cam/src/dynamics/iap/tend_pstar.F90:!!      CALL FILT2D( DPstar1,0,1,IBCFFT ) 
cam/src/dynamics/iap/tend_pstar.F90:      CALL FILT2D( WW,0,1,IBCFFT )		   !zhh 2008.6.16
cam/src/dynamics/iap/set_mass_engy.F90:                       hwxl    ,engy1lat, engy2lat, difftlat  )
cam/src/dynamics/iap/set_mass_engy.F90:   real(r8), intent(out) :: difftlat     ! delta-temperature integral per latitude
cam/src/dynamics/iap/set_mass_engy.F90:   difftlat = 0.
cam/src/dynamics/iap/set_mass_engy.F90:   call engy_tdif1(cwava ,w(lat) ,t3  ,t3m1             ,pdel, difftlat ,nlon)
cam/src/dynamics/iap/tend_adv.F90:   use flexib,    only: a11, a12, a13, a21, a22, a23, a31, a32, a33, kappa2, IBCFFT
cam/src/dynamics/iap/tend_adv.F90:      CALL FILT2D( WW,0,1,IBCFFT )   
cam/src/dynamics/iap/tend_adv.F90:      CALL FILT2D( WW,1,1,IBCFFT )	
cam/src/dynamics/iap/tend_adv.F90:      CALL FILT2D( WW,1,2,IBCFFT )	
cam/src/dynamics/iap/iap_fft.F90:module iap_fft
cam/src/dynamics/iap/iap_fft.F90:! Purpose: An efficient highly composite FFT( Fast Fourier Transformation) algorithm
cam/src/dynamics/iap/iap_fft.F90:   SUBROUTINE IAP_FFT99(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:!!   SUBROUTINE IAP_FFT99(A,WORK,INC,JUMP,LOT,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:!              IAP_FFT99 WRITTEN FOR XMP/YMPs BY DR. CLIVE TEMPERTON OF
cam/src/dynamics/iap/iap_fft.F90:!              THE PACKAGE IAP_FFT99F CONTAINS SEVERAL USER-LEVEL ROUTINES:
cam/src/dynamics/iap/iap_fft.F90:!                BEFORE A SEQUENCE OF CALLS TO THE FFT ROUTINES
cam/src/dynamics/iap/iap_fft.F90:!            SUBROUTINES IAP_FFT99 AND IAP_FFT991
cam/src/dynamics/iap/iap_fft.F90:!                TWO FFT ROUTINES THAT RETURN SLIGHTLY DIFFERENT
cam/src/dynamics/iap/iap_fft.F90:!                   CALL IAP_FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:!              SEE THE INDIVIDUAL WRITE-UPS FOR IAP_SET99, IAP_FFT99, AND
cam/src/dynamics/iap/iap_fft.F90:!              IAP_FFT991 BELOW, FOR A DETAILED DESCRIPTION OF THE
cam/src/dynamics/iap/iap_fft.F90:! PURPOSE      A SET-UP ROUTINE FOR IAP_FFT99 AND IAP_FFT991.  IT NEED ONLY BE
cam/src/dynamics/iap/iap_fft.F90:!              CALLED ONCE BEFORE A SEQUENCE OF CALLS TO THE FFT
cam/src/dynamics/iap/iap_fft.F90:!               THE DOCUMENTATION FOR IAP_FFT99 AND IAP_FFT991 FOR THE
cam/src/dynamics/iap/iap_fft.F90:!               USED BY THE FFT ROUTINES.
cam/src/dynamics/iap/iap_fft.F90:! SUBROUTINE IAP_FFT991 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:! SUBROUTINE IAP_FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:!              VALUES (IAP_FFT991) OR EXPLICIT CYCLIC CONTINUITY IN THE
cam/src/dynamics/iap/iap_fft.F90:!              GRIDPOINT VALUES (IAP_FFT99).  GIVEN A SET
cam/src/dynamics/iap/iap_fft.F90:!              OPTIMIZED ROUTINE IAP_FFT991 WRITTEN FOR XMP/YMPs BY
cam/src/dynamics/iap/iap_fft.F90:!               FOR IAP_FFT991, X(0), X(1), X(2),...,X(N-1),0,0.
cam/src/dynamics/iap/iap_fft.F90:!               FOR IAP_FFT99, X(N-1),X(0),X(1),X(2),...,X(N-1),X(0).
cam/src/dynamics/iap/iap_fft.F90:!               AND IAP_FFT99 SHOULD BE USED (BECAUSE OF THE EXPLICIT CYCLIC
cam/src/dynamics/iap/iap_fft.F90:!     SUBROUTINE "IAP_FFT99" - MULTIPLE FAST REAL PERIODIC TRANSFORM
cam/src/dynamics/iap/iap_fft.F90:!     CORRESPONDING TO OLD SCALAR ROUTINE FFT9
cam/src/dynamics/iap/iap_fft.F90:!	  pause  'IAP_FFT99'
cam/src/dynamics/iap/iap_fft.F90:      CALL IAP_FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:      CALL IAP_FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:   SUBROUTINE IAP_FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:!zhh      SUBROUTINE IAP_FFT99A(A,WORK,INC,JUMP,LOT)         !zhh
cam/src/dynamics/iap/iap_fft.F90:!     SUBROUTINE IAP_FFT99A - PREPROCESSING STEP FOR IAP_FFT99, ISIGN=+1
cam/src/dynamics/iap/iap_fft.F90:   SUBROUTINE IAP_FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:!zhh      SUBROUTINE IAP_FFT99B(WORK,A,INC,JUMP,LOT)          !zhh
cam/src/dynamics/iap/iap_fft.F90:!     SUBROUTINE IAP_FFT99B - POSTPROCESSING STEP FOR IAP_FFT99, ISIGN=-1
cam/src/dynamics/iap/iap_fft.F90:   SUBROUTINE IAP_FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/dynamics/iap/iap_fft.F90:!zhh      SUBROUTINE IAP_FFT991(A,WORK,INC,JUMP,LOT,ISIGN)                   !zhh
cam/src/dynamics/iap/iap_fft.F90:!     SUBROUTINE "IAP_FFT991" - MULTIPLE REAL/HALF-COMPLEX PERIODIC
cam/src/dynamics/iap/iap_fft.F90:!     SAME AS IAP_FFT99 EXCEPT THAT ORDERING OF DATA CORRESPONDS TO
cam/src/dynamics/iap/iap_fft.F90:!     THAT IN MRFFT2
cam/src/dynamics/iap/iap_fft.F90:      CALL IAP_FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:      CALL IAP_FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/dynamics/iap/iap_fft.F90:      CALL IAP_FFTRIG (TRIGS0, N0, MODE)              !zhh
cam/src/dynamics/iap/iap_fft.F90:   SUBROUTINE IAP_FFTRIG(TRIGS,N,MODE)
cam/src/dynamics/iap/iap_fft.F90:!zhh      SUBROUTINE IAP_FFTRIG(MODE)
cam/src/dynamics/iap/iap_fft.F90:!     AS PART OF MULTIPLE COMPLEX FFT ROUTINE
cam/src/dynamics/iap/flexib.F90:   integer  :: IBCFFT         ! switch of FFT/shapiro smooth
cam/src/dynamics/iap/flexib.F90:   integer  :: NBCFFT         ! switch of FFT/shapiro smooth for physics
cam/src/dynamics/iap/flexib.F90:   data IBCFFT / 1 /
cam/src/dynamics/iap/flexib.F90:   data NBCFFT / 1 /
cam/src/dynamics/iap/mass_engy.F90:   real(r8) :: difft         ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/iap/mass_engy.F90:   real(r8) :: difftlat(plat)     ! lat contribution to delta-temperature integral
cam/src/dynamics/iap/mass_engy.F90:   difft  = 0.
cam/src/dynamics/iap/mass_engy.F90:                   hwxl(:,:,lat), engy1lat(lat), engy2lat(lat), difftlat(lat) )
cam/src/dynamics/iap/mass_engy.F90:      temp(3)=temp(3)+ difftlat(lat)
cam/src/dynamics/iap/mass_engy.F90:   difft  = temp(3)
cam/src/dynamics/iap/mass_engy.F90:   difft    = fixmas*difft
cam/src/dynamics/iap/mass_engy.F90:   if(difft .ne. 0.) then
cam/src/dynamics/iap/mass_engy.F90:     beta = -residual*ztodt/(cpair*difft)
cam/src/dynamics/iap/tend_lin.F90:   use flexib,    only:  b1, b21, b22, c10, kappa, kappa2, IBCFFT, Kstd
cam/src/dynamics/iap/tend_lin.F90:   call t_startf('fft3')
cam/src/dynamics/iap/tend_lin.F90:   CALL FILT2D( WW,0,1,IBCFFT )		   !zhh 2008.6.16
cam/src/dynamics/iap/tend_lin.F90:      CALL FILT2D( WW,0,1,IBCFFT )   !OK
cam/src/dynamics/iap/tend_lin.F90:   call t_stopf('fft3')
cam/src/dynamics/iap/tend_lin.F90:      CALL FILT2D( WW,1,1,IBCFFT )	
cam/src/dynamics/iap/tend_lin.F90:      CALL FILT2D( WW,1,2,IBCFFT )	
cam/src/dynamics/iap/eul_control_mod.F90:! from comfft.h
cam/src/dynamics/iap/eul_control_mod.F90:   real(r8) ,public :: trig (3*plon/2+1,plat)  ! trigonometric funct values used by fft
cam/src/dynamics/iap/eul_control_mod.F90:   integer  ,public :: ifax(19,plat)           ! fft factorization of plon/2
cam/src/dynamics/homme/share/element_mod.F90:     real (kind=real_kind) :: DIFFT(nv,nv,nlev) ! net hypervis term
cam/src/dynamics/homme/share/prim_advance_mod.F90:          elem(ie)%accum%DIFFT(:,:,:)=elem(ie)%state%T(:,:,:,np1)
cam/src/dynamics/homme/share/prim_advance_mod.F90:          elem(ie)%accum%DIFFT(:,:,:)=( elem(ie)%state%T(:,:,:,np1) -&
cam/src/dynamics/homme/share/prim_advance_mod.F90:               elem(ie)%accum%DIFFT(:,:,:) ) / dt_vis
cam/src/dynamics/sld/spegrd.F90:   public spegrd_bft   ! Before FFT
cam/src/dynamics/sld/spegrd.F90:   public spegrd_ift   ! FFT
cam/src/dynamics/sld/spegrd.F90:   public spegrd_aft   ! After FFT
cam/src/dynamics/sld/spegrd.F90:subroutine spegrd_bft (lat     ,nlon_fft, &
cam/src/dynamics/sld/spegrd.F90:                       grtma   ,grtla   ,grqma   ,grqla   ,fftbuf   )
cam/src/dynamics/sld/spegrd.F90:   integer, intent(in) :: nlon_fft             ! first dimension of FFT work array
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(out) :: fftbuf(nlon_fft,11,plevp) ! buffer used for in-place FFTs
cam/src/dynamics/sld/spegrd.F90:   integer, parameter :: divdex = 1      ! indices into fftbuf 
cam/src/dynamics/sld/spegrd.F90:! symmetric and antisymmetric fourier coefficients: pre-FFT
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,divdex,k) = grds(i,k) + grda(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,duhdex,k) = gruhs(i,k) + gruha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,dvhdex,k) = grvhs(i,k) + grvha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,dthdex,k) = grths(i,k) + grtha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,tldex,k)  = grtls(i,k) + grtla(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,tmdex,k)  = grtms(i,k) + grtma(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,qldex,k)  = grqls(i,k) + grqla(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,qmdex,k)  = grqms(i,k) + grqma(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,u3dex,k)  = grus(i,k) + grua(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,v3dex,k)  = grvs(i,k) + grva(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,t3dex,k)  = grts(i,k) + grta(i,k)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsdex,plevp)  = grdps(i) + grdpa(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,psdex,plevp)   = grpss(i) + grpsa(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsldex,plevp) = grpls(i) + grpla(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsmdex,plevp) = grpms(i) + grpma(i)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,divdex,k) = grds(i,k) - grda(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,duhdex,k) = gruhs(i,k) - gruha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,dvhdex,k) = grvhs(i,k) - grvha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,dthdex,k) = grths(i,k) - grtha(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,tldex,k)  = grtls(i,k) - grtla(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,tmdex,k)  = grtms(i,k) - grtma(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,qldex,k)  = grqls(i,k) - grqla(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,qmdex,k)  = grqms(i,k) - grqma(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,u3dex,k)  = grus(i,k) - grua(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,v3dex,k)  = grvs(i,k) - grva(i,k)
cam/src/dynamics/sld/spegrd.F90:            fftbuf(i,t3dex,k)  = grts(i,k) - grta(i,k)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsdex,plevp)  = grdps(i) - grdpa(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,psdex,plevp)   = grpss(i) - grpsa(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsldex,plevp) = grpls(i) - grpla(i)
cam/src/dynamics/sld/spegrd.F90:         fftbuf(i,dpsmdex,plevp) = grpms(i) - grpma(i)
cam/src/dynamics/sld/spegrd.F90:subroutine spegrd_ift (nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out)
cam/src/dynamics/sld/spegrd.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of first FFT work array
cam/src/dynamics/sld/spegrd.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of second FFT work array
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(in) :: fftbuf_in(nlon_fft_in,11,plevp,plat) 
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(in) :: fftbuf_in(1,1,1,1) 
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(inout) :: fftbuf_out(nlon_fft_out,11,plevp,beglat:endlat) 
cam/src/dynamics/sld/spegrd.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/sld/spegrd.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/spegrd.F90:   real(r8) work((plon+1)*pcray) ! workspace needed by fft991
cam/src/dynamics/sld/spegrd.F90:   call realloc4b(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out)
cam/src/dynamics/sld/spegrd.F90:   fftbuf_out(begtrm:nlon_fft_out,:,:,:) = 0.0_r8
cam/src/dynamics/sld/spegrd.F90:      call fft991 (fftbuf_out(1,1,1,lat), work, trig(1,lat), ifax(1,lat), inc, &
cam/src/dynamics/sld/spegrd.F90:                   nlon_fft_out, nlon(lat), ntr, isign)
cam/src/dynamics/sld/spegrd.F90:subroutine spegrd_aft (ztodt   ,lat     ,nlon    ,nlon_fft, &
cam/src/dynamics/sld/spegrd.F90:                       qm      ,t3m1    ,engy2alat,engy2blat,difftalat, &
cam/src/dynamics/sld/spegrd.F90:                       difftblat,phis   ,fftbuf  )
cam/src/dynamics/sld/spegrd.F90:   integer, intent(in) :: nlon_fft                ! first dimension of FFT work arrays
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(out) :: difftalat
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(out) :: difftblat
cam/src/dynamics/sld/spegrd.F90:   real(r8), intent(in) :: fftbuf(nlon_fft,11,plevp) ! buffer used for in-place FFTs
cam/src/dynamics/sld/spegrd.F90:   integer, parameter :: divdex = 1      ! indices into fftbuf 
cam/src/dynamics/sld/spegrd.F90:! Copy 3D fields out of FFT buffer, removing cosine(latitude) from momentum variables
cam/src/dynamics/sld/spegrd.F90:         div(i,k) = fftbuf(i,divdex,k)
cam/src/dynamics/sld/spegrd.F90:         duh(i,k) = fftbuf(i,duhdex,k)*rcoslat
cam/src/dynamics/sld/spegrd.F90:         dvh(i,k) = fftbuf(i,dvhdex,k)*rcoslat
cam/src/dynamics/sld/spegrd.F90:         dth(i,k) = fftbuf(i,dthdex,k)
cam/src/dynamics/sld/spegrd.F90:         tl (i,k) = fftbuf(i,tldex,k)
cam/src/dynamics/sld/spegrd.F90:         tm (i,k) = fftbuf(i,tmdex,k)
cam/src/dynamics/sld/spegrd.F90:         ql (i,k) = fftbuf(i,qldex,k)
cam/src/dynamics/sld/spegrd.F90:         qm (i,k) = fftbuf(i,qmdex,k)
cam/src/dynamics/sld/spegrd.F90:         u3(i,k)  = fftbuf(i,u3dex,k)*rcoslat
cam/src/dynamics/sld/spegrd.F90:         v3(i,k)  = fftbuf(i,v3dex,k)*rcoslat
cam/src/dynamics/sld/spegrd.F90:         t3(i,k)  = fftbuf(i,t3dex,k)
cam/src/dynamics/sld/spegrd.F90:! Copy 2D fields out of FFT buffer, converting
cam/src/dynamics/sld/spegrd.F90:      dps(i)  = fftbuf(i,dpsdex,plevp)
cam/src/dynamics/sld/spegrd.F90:      ps(i)   = exp(fftbuf(i,psdex,plevp))
cam/src/dynamics/sld/spegrd.F90:      dpsl(i) = fftbuf(i,dpsldex,plevp)
cam/src/dynamics/sld/spegrd.F90:      dpsm(i) = fftbuf(i,dpsmdex,plevp)
cam/src/dynamics/sld/spegrd.F90:   difftalat = 0._r8
cam/src/dynamics/sld/spegrd.F90:   difftblat = 0._r8
cam/src/dynamics/sld/spegrd.F90:   call engy_tdif(cwava ,w(lat) ,t3  ,t3m1             ,pdela, difftalat ,nlon)
cam/src/dynamics/sld/spegrd.F90:   call engy_tdif(cwava ,w(lat) ,t3  ,t3m1             ,pdelb, difftblat ,nlon)
cam/src/dynamics/sld/scanslt.F90:  integer, public, parameter :: plondfft = plon + 2
cam/src/dynamics/sld/scanslt.F90:  integer :: nlon_fft_in        ! FFT work array inner dimension
cam/src/dynamics/sld/scanslt.F90:  integer :: nlon_fft_out       ! FFT work array inner dimension
cam/src/dynamics/sld/scanslt.F90:! FFT buffers
cam/src/dynamics/sld/scanslt.F90:  real(r8), allocatable:: fftbuf_in(:,:,:,:)          ! fftbuf_in(nlon_fft_in,plev,5,beglat:endlat) 
cam/src/dynamics/sld/scanslt.F90:  real(r8), allocatable:: fftbuf_out(:,:,:,:)         ! fftbuf_out(nlon_fft_out,plev,5,plat)
cam/src/dynamics/sld/scanslt.F90:  nlon_fft_in = plondfft
cam/src/dynamics/sld/scanslt.F90:  allocate(fftbuf_in(nlon_fft_in,plev,5,beglat:endlat))
cam/src/dynamics/sld/scanslt.F90:  nlon_fft_out = 2*maxm + 1
cam/src/dynamics/sld/scanslt.F90:  nlon_fft_out = 2*maxm
cam/src/dynamics/sld/scanslt.F90:  allocate(fftbuf_out(nlon_fft_out,plev,5,plat))
cam/src/dynamics/sld/scanslt.F90:  nlon_fft_out = 1
cam/src/dynamics/sld/scanslt.F90:  allocate(fftbuf_out(1,1,1,1))
cam/src/dynamics/sld/scanslt.F90:                      nlon(lat)         ,nlon_fft_in         ,       &
cam/src/dynamics/sld/scanslt.F90:                      fftbuf_in(1,1,1,lat), adv_state )
cam/src/dynamics/sld/scanslt.F90:  call t_startf ('scanslt_fft')
cam/src/dynamics/sld/scanslt.F90:  call scanslt_fft(nlon_fft_in,nlon_fft_out,fftbuf_in,fftbuf_out)
cam/src/dynamics/sld/scanslt.F90:  call t_stopf ('scanslt_fft')
cam/src/dynamics/sld/scanslt.F90:      call scanslt_aft(irow, nlon_fft_out, &
cam/src/dynamics/sld/scanslt.F90:                       fftbuf_out(1,1,1,lats), fftbuf_out(1,1,1,latn), &
cam/src/dynamics/sld/scanslt.F90:      call scanslt_aft(irow, nlon_fft_in, &
cam/src/dynamics/sld/scanslt.F90:                       fftbuf_in(1,1,1,lats), fftbuf_in(1,1,1,latn), &
cam/src/dynamics/sld/scanslt.F90:  deallocate(fftbuf_in)
cam/src/dynamics/sld/scanslt.F90:  deallocate(fftbuf_out)
cam/src/dynamics/sld/scanslt.F90:                        u3      ,v3      ,etadot  ,nlon    ,nlon_fft, &
cam/src/dynamics/sld/scanslt.F90:                        fftbuf  ,adv_state )
cam/src/dynamics/sld/scanslt.F90:  integer, intent(in)    :: nlon_fft              ! first dimension of FFT work array
cam/src/dynamics/sld/scanslt.F90:  real(r8), intent(out)  :: fftbuf(nlon_fft,plev,5)   ! buffer used for in-place FFTs
cam/src/dynamics/sld/scanslt.F90:  integer, parameter :: fudex = 1  ! indices into fftbuf 
cam/src/dynamics/sld/scanslt.F90:! Copy fu,fv,T,q,Ps into FFT buffer
cam/src/dynamics/sld/scanslt.F90:        fftbuf(i,k,fudex) = grfulat(i,k)
cam/src/dynamics/sld/scanslt.F90:        fftbuf(i,k,fvdex) = grfvlat(i,k)
cam/src/dynamics/sld/scanslt.F90:        fftbuf(i,k,tdex)  = grtlat(i,k)
cam/src/dynamics/sld/scanslt.F90:        fftbuf(i,k,qdex)  = grqlat(i,k)
cam/src/dynamics/sld/scanslt.F90:     fftbuf(i,1,psdex)    = grpslat(i)
cam/src/dynamics/sld/scanslt.F90:subroutine scanslt_fft (nlon_fft,nlon_fft2,fftbuf,fftbuf2)
cam/src/dynamics/sld/scanslt.F90:! Compute FFT of non-linear dynamical terms
cam/src/dynamics/sld/scanslt.F90:   integer, intent(in) :: nlon_fft         ! first dimension of first FFT work array
cam/src/dynamics/sld/scanslt.F90:   integer, intent(in) :: nlon_fft2        ! first dimension of second FFT work array
cam/src/dynamics/sld/scanslt.F90:   real(r8), intent(inout) :: fftbuf(nlon_fft,plev,5,beglat:endlat) 
cam/src/dynamics/sld/scanslt.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/sld/scanslt.F90:   real(r8), intent(out) :: fftbuf2(nlon_fft2,plev,5,plat) 
cam/src/dynamics/sld/scanslt.F90:   real(r8), intent(in) :: fftbuf2(1) 
cam/src/dynamics/sld/scanslt.F90:! the proprietary Cray assembly language version of the FFT library
cam/src/dynamics/sld/scanslt.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/scanslt.F90:   real(r8) work((plon+1)*pcray) ! workspace array for fft991
cam/src/dynamics/sld/scanslt.F90:   integer inc               ! increment for fft991
cam/src/dynamics/sld/scanslt.F90:      fftbuf(nlon(lat)+1:nlon_fft,:,:,lat) = 0.0_r8
cam/src/dynamics/sld/scanslt.F90:      call fft991(fftbuf(1,1,1,lat)     ,work    ,trig(1,lat),ifax(1,lat),inc     ,&
cam/src/dynamics/sld/scanslt.F90:                  nlon_fft ,nlon(lat)   ,ntr     ,isign   )
cam/src/dynamics/sld/scanslt.F90:   call realloc4a(nlon_fft, nlon_fft2, fftbuf, fftbuf2)
cam/src/dynamics/sld/scanslt.F90:end subroutine scanslt_fft
cam/src/dynamics/sld/scanslt.F90:subroutine scanslt_aft (irow    ,nlon_fft,fftbufs ,fftbufn , &
cam/src/dynamics/sld/scanslt.F90:  integer, intent(in)  :: nlon_fft            ! first dimension of FFT work arrays
cam/src/dynamics/sld/scanslt.F90:  real(r8), intent(in) :: fftbufs(nlon_fft,plev,5) ! southern latitude Fourier coefficients
cam/src/dynamics/sld/scanslt.F90:  real(r8), intent(in) :: fftbufn(nlon_fft,plev,5) ! northern latitude Fourier coefficients
cam/src/dynamics/sld/scanslt.F90:  integer, parameter :: fudex = 1  ! indices into fftbuf 
cam/src/dynamics/sld/scanslt.F90:        grfu1(i,k) = 0.5_r8*(fftbufn(i,k,fudex)+fftbufs(i,k,fudex))
cam/src/dynamics/sld/scanslt.F90:        grfu2(i,k) = 0.5_r8*(fftbufn(i,k,fudex)-fftbufs(i,k,fudex))
cam/src/dynamics/sld/scanslt.F90:        grfv1(i,k) = 0.5_r8*(fftbufn(i,k,fvdex)+fftbufs(i,k,fvdex))
cam/src/dynamics/sld/scanslt.F90:        grfv2(i,k) = 0.5_r8*(fftbufn(i,k,fvdex)-fftbufs(i,k,fvdex))
cam/src/dynamics/sld/scanslt.F90:        grt1 (i,k) = 0.5_r8*(fftbufn(i,k,tdex)+fftbufs(i,k,tdex))
cam/src/dynamics/sld/scanslt.F90:        grt2 (i,k) = 0.5_r8*(fftbufn(i,k,tdex)-fftbufs(i,k,tdex))
cam/src/dynamics/sld/scanslt.F90:        grq1 (i,k) = 0.5_r8*(fftbufn(i,k,qdex)+fftbufs(i,k,qdex))
cam/src/dynamics/sld/scanslt.F90:        grq2 (i,k) = 0.5_r8*(fftbufn(i,k,qdex)-fftbufs(i,k,qdex))
cam/src/dynamics/sld/scanslt.F90:     grlps1(i) = 0.5_r8*(fftbufn(i,1,psdex)+fftbufs(i,1,psdex))
cam/src/dynamics/sld/scanslt.F90:     grlps2(i) = 0.5_r8*(fftbufn(i,1,psdex)-fftbufs(i,1,psdex))
cam/src/dynamics/sld/sld_control_mod.F90:! from comfft.h
cam/src/dynamics/sld/sld_control_mod.F90:   real(r8) ,public :: trig (3*plon/2+1,plat)  ! trigonometric funct values used by fft
cam/src/dynamics/sld/sld_control_mod.F90:   integer  ,public :: ifax(19,plat)           ! fft factorization of plon/2
cam/src/dynamics/sld/realloc4.F90:!   1) After FFT preceding Legendre analysis, reallocate fftbuf
cam/src/dynamics/sld/realloc4.F90:!   2) Before FFT following Legendre synthesis, reallocate fftbuf
cam/src/dynamics/sld/realloc4.F90:subroutine realloc4a(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/sld/realloc4.F90:!   After FFT preceding Legendre analysis, reallocate fftbuf
cam/src/dynamics/sld/realloc4.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of input array
cam/src/dynamics/sld/realloc4.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of output array
cam/src/dynamics/sld/realloc4.F90:   real(r8), intent(in)  :: fftbuf_in(nlon_fft_in,plev,5,beglat:endlat) 
cam/src/dynamics/sld/realloc4.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/sld/realloc4.F90:   real(r8), intent(out) :: fftbuf_out(nlon_fft_out,plev,5,plat) 
cam/src/dynamics/sld/realloc4.F90:               fftbuf_out(i,k,ifld,lat_l) = fftbuf_in(locrm(i,iam),k,ifld,lat_l)
cam/src/dynamics/sld/realloc4.F90:         fftbuf_out(i,1,5,lat_l) = fftbuf_in(locrm(i,iam),1,5,lat_l)
cam/src/dynamics/sld/realloc4.F90:                  buf1(bpos+i) = fftbuf_in(locrm(i,procid),k,ifld,lat_l)
cam/src/dynamics/sld/realloc4.F90:            buf1(bpos+i) = fftbuf_in(locrm(i,procid),1,5,lat_l)
cam/src/dynamics/sld/realloc4.F90:                  fftbuf_out(i,k,ifld,lat_r) = buf2(bpos+i)
cam/src/dynamics/sld/realloc4.F90:            fftbuf_out(i,1,5,lat_r) = buf2(bpos+i)
cam/src/dynamics/sld/realloc4.F90:subroutine realloc4b(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/sld/realloc4.F90:!   Before FFT following Legendre synthesis, reallocate fftbuf
cam/src/dynamics/sld/realloc4.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of input array
cam/src/dynamics/sld/realloc4.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of output array
cam/src/dynamics/sld/realloc4.F90:   real(r8), intent(in)  :: fftbuf_in(nlon_fft_in,11,plevp,plat) 
cam/src/dynamics/sld/realloc4.F90:   real(r8), intent(out) :: fftbuf_out(nlon_fft_out,11,plevp,beglat:endlat) 
cam/src/dynamics/sld/realloc4.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/sld/realloc4.F90:               fftbuf_out(locrm(i,iam),ifld,k,lat_l) = fftbuf_in(i,ifld,k,lat_l)
cam/src/dynamics/sld/realloc4.F90:            fftbuf_out(locrm(i,iam),ifld,plevp,lat_l) = fftbuf_in(i,ifld,plevp,lat_l)
cam/src/dynamics/sld/realloc4.F90:                  buf1(bpos+i) = fftbuf_in(i,ifld,k,lat_r)
cam/src/dynamics/sld/realloc4.F90:               buf1(bpos+i) = fftbuf_in(i,ifld,plevp,lat_r)
cam/src/dynamics/sld/realloc4.F90:                  fftbuf_out(locrm(i,procid),ifld,k,lat_l) = buf2(bpos+i)
cam/src/dynamics/sld/realloc4.F90:               fftbuf_out(locrm(i,procid),ifld,plevp,lat_l) = buf2(bpos+i)
cam/src/dynamics/sld/scan2.F90:   use scanslt,      only: plondfft, hw1, hw2, hw3, alpha, qfcst, hw1lat, engy1lat
cam/src/dynamics/sld/scan2.F90:   real(r8) difft         ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/sld/scan2.F90:   real(r8) diffta        ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/sld/scan2.F90:   real(r8) difftb        ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/sld/scan2.F90:   real(r8) difftalat(plat)     ! lat contribution to delta-temperature integral
cam/src/dynamics/sld/scan2.F90:   real(r8) difftblat(plat)     ! lat contribution to delta-temperature integral
cam/src/dynamics/sld/scan2.F90:   integer :: nlon_fft_in              ! FFT work array inner dimension
cam/src/dynamics/sld/scan2.F90:   integer :: nlon_fft_out             ! FFT work array inner dimension
cam/src/dynamics/sld/scan2.F90:! FFT buffers
cam/src/dynamics/sld/scan2.F90:   real(r8), allocatable:: fftbuf_in(:,:,:,:)  ! fftbuf_in(nlon_fft_in,11,plevp,plat) 
cam/src/dynamics/sld/scan2.F90:   real(r8), allocatable:: fftbuf_out(:,:,:,:) ! fftbuf_out(nlon_fft_out,11,plevp,beglat:endlat) 
cam/src/dynamics/sld/scan2.F90:   nlon_fft_in = 2*maxm
cam/src/dynamics/sld/scan2.F90:   allocate(fftbuf_in(nlon_fft_in,11,plevp,plat))
cam/src/dynamics/sld/scan2.F90:   nlon_fft_in = 1
cam/src/dynamics/sld/scan2.F90:   allocate(fftbuf_in(1,1,1,1))
cam/src/dynamics/sld/scan2.F90:   nlon_fft_out = plondfft
cam/src/dynamics/sld/scan2.F90:   allocate(fftbuf_out(nlon_fft_out,11,plevp,beglat:endlat))
cam/src/dynamics/sld/scan2.F90:   fftbuf_in(:,:,:,:) = nan
cam/src/dynamics/sld/scan2.F90:   fftbuf_out(:,:,:,:) = nan
cam/src/dynamics/sld/scan2.F90:      call spegrd_bft (lat, nlon_fft_in, &
cam/src/dynamics/sld/scan2.F90:                       grtma(1,1,irow), grtla(1,1,irow), grqma(1,1,irow), grqla(1,1,irow), fftbuf_in(1,1,1,lat))
cam/src/dynamics/sld/scan2.F90:      call spegrd_bft (lat, nlon_fft_out, &
cam/src/dynamics/sld/scan2.F90:                       grtma(1,1,irow), grtla(1,1,irow), grqma(1,1,irow), grqla(1,1,irow), fftbuf_out(1,1,1,lat))
cam/src/dynamics/sld/scan2.F90:   call spegrd_ift ( nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/sld/scan2.F90:      call spegrd_aft (ztodt, lat, nlon(lat), nlon_fft_out, &
cam/src/dynamics/sld/scan2.F90:                       difftalat(lat), difftblat(lat), phis(1,lat), fftbuf_out(1,1,1,lat))
cam/src/dynamics/sld/scan2.F90:   deallocate(fftbuf_in)
cam/src/dynamics/sld/scan2.F90:   deallocate(fftbuf_out)
cam/src/dynamics/sld/scan2.F90:                  engy2blat, difftalat, difftblat)
cam/src/dynamics/sld/scan2.F90:   diffta = 0._r8
cam/src/dynamics/sld/scan2.F90:   difftb = 0._r8
cam/src/dynamics/sld/scan2.F90:      diffta  = diffta  + difftalat(lat)
cam/src/dynamics/sld/scan2.F90:      difftb  = difftb  + difftblat(lat)
cam/src/dynamics/sld/scan2.F90:   difft    = diffta + fixmas*difftb
cam/src/dynamics/sld/scan2.F90:   if(difft .ne. 0._r8) then
cam/src/dynamics/sld/scan2.F90:     beta = -residual*ztodt/(cpair*difft)
cam/src/dynamics/sld/scan2.F90:                     engy2blat,difftalat,difftblat      )
cam/src/dynamics/sld/scan2.F90:   real(r8), intent(inout)   :: difftalat(plat)  ! lat contribution to delta-T integral
cam/src/dynamics/sld/scan2.F90:   real(r8), intent(inout)   :: difftblat(plat)  ! lat contribution to delta-T integral
cam/src/dynamics/sld/scan2.F90:! difftalat
cam/src/dynamics/sld/scan2.F90:      buf1(bufpos+j) = difftalat(jstrt+j)
cam/src/dynamics/sld/scan2.F90:! difftblat
cam/src/dynamics/sld/scan2.F90:      buf1(bufpos+j) = difftblat(jstrt+j)
cam/src/dynamics/sld/scan2.F90:! difftalat
cam/src/dynamics/sld/scan2.F90:         difftalat(jstrt_p+j) = buf2(bufpos+j)
cam/src/dynamics/sld/scan2.F90:! difftblat
cam/src/dynamics/sld/scan2.F90:         difftblat(jstrt_p+j) = buf2(bufpos+j)
cam/src/dynamics/sld/spetru.F90:  integer, parameter :: plondfft = plon + 2   ! Size of longitude needed for FFT's
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: phis_tmp(:,:)      ! Temporary to compute Phis of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: phisl_tmp(:,:)     ! Temporary to compute phisl of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: phism_tmp(:,:)     ! Temporary to compute phism of size needed for FFT
cam/src/dynamics/sld/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   allocate(phis_tmp(plondfft,plat))
cam/src/dynamics/sld/spetru.F90:      call fft991(phis_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      allocate(phisl_tmp(plondfft,plat))
cam/src/dynamics/sld/spetru.F90:      allocate(phism_tmp(plondfft,plat))
cam/src/dynamics/sld/spetru.F90:      call fft991(phis_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:         call fft991 (phisl_tmp(1,lat),work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/sld/spetru.F90:                      plondfft       ,nlon(lat),1           ,+1      )
cam/src/dynamics/sld/spetru.F90:         call fft991 (phism_tmp(1,lat),work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/sld/spetru.F90:                      plondfft       ,nlon(lat),1           ,+1      )
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: dpsm_tmp(:,:)  ! Temporary to compute dpsm of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: dpsl_tmp(:,:)  ! Temporary to compute dpsl of size needed for FFT
cam/src/dynamics/sld/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   allocate( log_ps(plondfft,plat) )
cam/src/dynamics/sld/spetru.F90:      call fft991(log_ps(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:   allocate( dpsl_tmp(plondfft,plat) )
cam/src/dynamics/sld/spetru.F90:   allocate( dpsm_tmp(plondfft,plat) )
cam/src/dynamics/sld/spetru.F90:      call fft991(log_ps(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      call fft991(dpsl_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      call fft991(dpsm_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: x3_tmp(:,:,:)   ! Temporary to compute x3 of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: dl_tmp(:,:,:)   ! Temporary to compute dl of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: dm_tmp(:,:,:)   ! Temporary to compute dm of size needed for FFT
cam/src/dynamics/sld/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   allocate( x3_tmp(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:   if(present(dm)) allocate( dm_tmp(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:   if(present(dl)) allocate( dl_tmp(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:      call fft991(x3_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      call fft991(x3_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/sld/spetru.F90:                  plondfft       ,nlon(lat),plev        ,+1)
cam/src/dynamics/sld/spetru.F90:         call fft991(dl_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/sld/spetru.F90:                     plondfft       ,nlon(lat),plev        ,+1      )
cam/src/dynamics/sld/spetru.F90:         call fft991(dm_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/sld/spetru.F90:                     plondfft       ,nlon(lat),plev        ,+1      )
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: div_tmp(:,:,:)   ! Temporary to compute div of size needed for FFT
cam/src/dynamics/sld/spetru.F90:   real(r8), pointer :: vort_tmp(:,:,:)  ! Temporary to compute vort of size needed for FFT
cam/src/dynamics/sld/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/sld/spetru.F90:   allocate( u_cosphi(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:   allocate( v_cosphi(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:      call fft991(u_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      call fft991(v_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:   if ( present(div) ) allocate( div_tmp(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:   if ( present(vort) ) allocate( vort_tmp(plondfft,plev,plat) )
cam/src/dynamics/sld/spetru.F90:      call fft991(u_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:      call fft991(v_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/spetru.F90:         call fft991(vort_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1, &
cam/src/dynamics/sld/spetru.F90:                     plondfft,nlon(lat),plev,+1)
cam/src/dynamics/sld/spetru.F90:         call fft991(div_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/sld/scandyn.F90:! Set up  FFT and combine terms in preparation for Fourier -> spectral
cam/src/dynamics/sld/scandyn.F90:!  - prefix gr contains grid point values before FFT and Fourier
cam/src/dynamics/sld/initcom.F90:! Set up trigonometric tables for fft
cam/src/dynamics/eul/spegrd.F90:subroutine spegrd_bft (lat     ,nlon_fft, &
cam/src/dynamics/eul/spegrd.F90:                       grva    ,grta    ,grpla   ,grpma   ,fftbuf  )
cam/src/dynamics/eul/spegrd.F90:   integer, intent(in) :: nlon_fft             ! first dimension of FFT work array
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(out) :: fftbuf(nlon_fft,8,plevp) ! buffer used for in-place FFTs
cam/src/dynamics/eul/spegrd.F90:   integer, parameter :: vortdex = 1     ! indices into fftbuf 
cam/src/dynamics/eul/spegrd.F90:! symmetric and antisymmetric fourier coefficients: pre-FFT
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,vortdex,k) = grzs(i,k) + grza(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,divdex,k) = grds(i,k) + grda(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,duhdex,k) = gruhs(i,k) + gruha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,dvhdex,k) = grvhs(i,k) + grvha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,dthdex,k) = grths(i,k) + grtha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,u3dex,k) = grus(i,k) + grua(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,v3dex,k) = grvs(i,k) + grva(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,t3dex,k) = grts(i,k) + grta(i,k)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsdex,plevp) = grdps(i) + grdpa(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,psdex,plevp) = grpss(i) + grpsa(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsldex,plevp) = grpls(i) + grpla(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsmdex,plevp) = grpms(i) + grpma(i)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,vortdex,k) = grzs(i,k) - grza(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,divdex,k) = grds(i,k) - grda(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,duhdex,k) = gruhs(i,k) - gruha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,dvhdex,k) = grvhs(i,k) - grvha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,dthdex,k) = grths(i,k) - grtha(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,u3dex,k) = grus(i,k) - grua(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,v3dex,k) = grvs(i,k) - grva(i,k)
cam/src/dynamics/eul/spegrd.F90:            fftbuf(i,t3dex,k) = grts(i,k) - grta(i,k)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsdex,plevp) = grdps(i) - grdpa(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,psdex,plevp) = grpss(i) - grpsa(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsldex,plevp) = grpls(i) - grpla(i)
cam/src/dynamics/eul/spegrd.F90:         fftbuf(i,dpsmdex,plevp) = grpms(i) - grpma(i)
cam/src/dynamics/eul/spegrd.F90:subroutine spegrd_ift (nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out)
cam/src/dynamics/eul/spegrd.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of first FFT work array
cam/src/dynamics/eul/spegrd.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of second FFT work array
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(in) :: fftbuf_in(nlon_fft_in,8,plevp,plat) 
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(in) :: fftbuf_in(1,1,1,1) 
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(inout) :: fftbuf_out(nlon_fft_out,8,plevp,beglat:endlat) 
cam/src/dynamics/eul/spegrd.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/eul/spegrd.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/spegrd.F90:   real(r8) work((plon+1)*pcray) ! workspace needed by fft991
cam/src/dynamics/eul/spegrd.F90:   call realloc4b(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out)
cam/src/dynamics/eul/spegrd.F90:         fftbuf_out(begtrm:nlon_fft_out,:,k,lat) = 0.0_r8
cam/src/dynamics/eul/spegrd.F90:         call fft991 (fftbuf_out(1,1,k,lat), work, trig(1,lat), ifax(1,lat), inc, &
cam/src/dynamics/eul/spegrd.F90:                      nlon_fft_out, nlon(lat), ntr, isign)
cam/src/dynamics/eul/spegrd.F90:         fftbuf_out(begtrm:nlon_fft_out,ifld,plevp,lat) = 0.0_r8
cam/src/dynamics/eul/spegrd.F90:         call fft991 (fftbuf_out(1,ifld,plevp,lat), work, trig(1,lat), ifax(1,lat), inc, &
cam/src/dynamics/eul/spegrd.F90:                      nlon_fft_out, nlon(lat), ntr, isign)
cam/src/dynamics/eul/spegrd.F90:subroutine spegrd_aft (ztodt   ,lat     ,nlon    ,nlon_fft, &
cam/src/dynamics/eul/spegrd.F90:                       engy2blat,difftalat, difftblat,phis,fftbuf  )
cam/src/dynamics/eul/spegrd.F90:   integer, intent(in) :: nlon_fft            ! first dimension of FFT work arrays
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(out) :: difftalat
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(out) :: difftblat
cam/src/dynamics/eul/spegrd.F90:   real(r8), intent(in) :: fftbuf(nlon_fft,8,plevp) ! buffer used for in-place FFTs
cam/src/dynamics/eul/spegrd.F90:   integer, parameter :: vortdex = 1     ! indices into fftbuf 
cam/src/dynamics/eul/spegrd.F90:! Copy 3D fields out of FFT buffer, removing cosine(latitude) from momentum variables
cam/src/dynamics/eul/spegrd.F90:         vort(i,k) = fftbuf(i,vortdex,k)
cam/src/dynamics/eul/spegrd.F90:         div(i,k) = fftbuf(i,divdex,k)
cam/src/dynamics/eul/spegrd.F90:         duh(i,k) = fftbuf(i,duhdex,k)*rcoslat
cam/src/dynamics/eul/spegrd.F90:         dvh(i,k) = fftbuf(i,dvhdex,k)*rcoslat
cam/src/dynamics/eul/spegrd.F90:         dth(i,k) = fftbuf(i,dthdex,k)
cam/src/dynamics/eul/spegrd.F90:         u3(i,k) = fftbuf(i,u3dex,k)*rcoslat
cam/src/dynamics/eul/spegrd.F90:         v3(i,k) = fftbuf(i,v3dex,k)*rcoslat
cam/src/dynamics/eul/spegrd.F90:         t3(i,k) = fftbuf(i,t3dex,k)
cam/src/dynamics/eul/spegrd.F90:! Copy 2D fields out of FFT buffer, converting
cam/src/dynamics/eul/spegrd.F90:      dps(i) = fftbuf(i,dpsdex,plevp)
cam/src/dynamics/eul/spegrd.F90:      dpsl(i) = fftbuf(i,dpsldex,plevp)
cam/src/dynamics/eul/spegrd.F90:      dpsm(i) = fftbuf(i,dpsmdex,plevp)
cam/src/dynamics/eul/spegrd.F90:      ps(i) = exp(fftbuf(i,psdex,plevp))
cam/src/dynamics/eul/spegrd.F90:   difftalat = 0._r8
cam/src/dynamics/eul/spegrd.F90:   difftblat = 0._r8
cam/src/dynamics/eul/spegrd.F90:         call engy_tdif(cwava ,w(lat) ,t3  ,t3m2             ,pdela, difftalat ,nlon)
cam/src/dynamics/eul/spegrd.F90:         call engy_tdif(cwava ,w(lat) ,t3  ,t3m2             ,pdelb, difftblat ,nlon)
cam/src/dynamics/eul/linemsdyn.F90:! Control non-linear dynamical terms, FFT and combine terms
cam/src/dynamics/eul/linemsdyn.F90:!  - prefix gr contains grid point values before FFT and Fourier
cam/src/dynamics/eul/linemsdyn.F90:   public linemsdyn_bft    ! Before FFT
cam/src/dynamics/eul/linemsdyn.F90:   public linemsdyn_fft    ! FFT
cam/src/dynamics/eul/linemsdyn.F90:   public linemsdyn_aft    ! After FFT
cam/src/dynamics/eul/linemsdyn.F90:   integer, public, parameter :: plondfft  = plon + 2      ! Length needed for FFT
cam/src/dynamics/eul/linemsdyn.F90:   integer, public, parameter :: plndlvfft = plondfft*plev ! Length of multilevel 3-d field slice
cam/src/dynamics/eul/linemsdyn.F90:                     lat     ,nlon    ,nlon_fft,                   &
cam/src/dynamics/eul/linemsdyn.F90:                     fftbuf             )
cam/src/dynamics/eul/linemsdyn.F90:! Control non-linear dynamical terms and fill FFT buffer 
cam/src/dynamics/eul/linemsdyn.F90:   integer, intent(in) :: nlon_fft          ! first dimension of FFT work array
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(out) :: fftbuf(nlon_fft,9,plev) ! buffer used for in-place FFTs
cam/src/dynamics/eul/linemsdyn.F90:   integer, parameter :: tdyndex = 1     ! indices into fftbuf 
cam/src/dynamics/eul/linemsdyn.F90:! Apply cos(lat) to momentum terms before fft
cam/src/dynamics/eul/linemsdyn.F90:! Copy fields into FFT buffer
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,tdyndex,k) = tdyn(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,fudex,k)   = fu(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,fvdex,k)   = fv(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,utdex,k)   = ut(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,vtdex,k)   = vt(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,drhsdex,k) = drhs(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,vortdyndex,k) = vortm2(i,k)
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(i,divdyndex,k)  = divm2(i,k)
cam/src/dynamics/eul/linemsdyn.F90:      fftbuf(i,bpstrdex,1) = bpstr(i)
cam/src/dynamics/eul/linemsdyn.F90:subroutine linemsdyn_fft(nlon_fft,nlon_fft2,fftbuf,fftbuf2)
cam/src/dynamics/eul/linemsdyn.F90:! Compute FFT of non-linear dynamical terms
cam/src/dynamics/eul/linemsdyn.F90:   integer, intent(in) :: nlon_fft         ! first dimension of first FFT work array
cam/src/dynamics/eul/linemsdyn.F90:   integer, intent(in) :: nlon_fft2        ! first dimension of second FFT work array
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(inout) :: fftbuf(nlon_fft,9,plev,beglat:endlat) 
cam/src/dynamics/eul/linemsdyn.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(out) :: fftbuf2(nlon_fft2,9,plev,plat) 
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(in) :: fftbuf2(1) 
cam/src/dynamics/eul/linemsdyn.F90:! the proprietary Cray assembly language version of the FFT library
cam/src/dynamics/eul/linemsdyn.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/linemsdyn.F90:   real(r8) work((plon+1)*pcray) ! workspace array for fft991
cam/src/dynamics/eul/linemsdyn.F90:   integer inc               ! increment for fft991
cam/src/dynamics/eul/linemsdyn.F90:         fftbuf(nlon(lat)+1:nlon_fft,:,k,lat) = 0.0_r8
cam/src/dynamics/eul/linemsdyn.F90:         call fft991(fftbuf(1,1,k,lat)     ,work    ,trig(1,lat),ifax(1,lat),inc     ,&
cam/src/dynamics/eul/linemsdyn.F90:                     nlon_fft ,nlon(lat)   ,ntr     ,isign   )
cam/src/dynamics/eul/linemsdyn.F90:      fftbuf(nlon(lat)+1:nlon_fft,9,1,lat) = 0.0_r8
cam/src/dynamics/eul/linemsdyn.F90:      call fft991(fftbuf(1,9,1,lat)     ,work    ,trig(1,lat),ifax(1,lat),inc     ,&
cam/src/dynamics/eul/linemsdyn.F90:                  nlon_fft ,nlon(lat)   ,ntr     ,isign   )
cam/src/dynamics/eul/linemsdyn.F90:   call realloc4a(nlon_fft, nlon_fft2, fftbuf, fftbuf2)
cam/src/dynamics/eul/linemsdyn.F90:end subroutine linemsdyn_fft
cam/src/dynamics/eul/linemsdyn.F90:                     irow    ,nlon_fft,fftbufs ,fftbufn ,          &
cam/src/dynamics/eul/linemsdyn.F90:   integer, intent(in) :: nlon_fft            ! first dimension of FFT work arrays
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(in) :: fftbufs(nlon_fft,9,plev) ! southern latitude Fourier coefficients
cam/src/dynamics/eul/linemsdyn.F90:   real(r8), intent(in) :: fftbufn(nlon_fft,9,plev) ! northern latitude Fourier coefficients
cam/src/dynamics/eul/linemsdyn.F90:   integer, parameter :: tdyndex = 1     ! indices into fftbuf 
cam/src/dynamics/eul/linemsdyn.F90:         grt1(i,k) = 0.5_r8*(fftbufn(i,tdyndex,k)+fftbufs(i,tdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grt2(i,k) = 0.5_r8*(fftbufn(i,tdyndex,k)-fftbufs(i,tdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grz1(i,k) = 0.5_r8*(fftbufn(i,vortdyndex,k)+fftbufs(i,vortdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grz2(i,k) = 0.5_r8*(fftbufn(i,vortdyndex,k)-fftbufs(i,vortdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grd1(i,k) = 0.5_r8*(fftbufn(i,divdyndex,k)+fftbufs(i,divdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grd2(i,k) = 0.5_r8*(fftbufn(i,divdyndex,k)-fftbufs(i,divdyndex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grfu1(i,k) = 0.5_r8*(fftbufn(i,fudex,k)+fftbufs(i,fudex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grfu2(i,k) = 0.5_r8*(fftbufn(i,fudex,k)-fftbufs(i,fudex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grfv1(i,k) = 0.5_r8*(fftbufn(i,fvdex,k)+fftbufs(i,fvdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grfv2(i,k) = 0.5_r8*(fftbufn(i,fvdex,k)-fftbufs(i,fvdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grut1(i,k) = 0.5_r8*(fftbufn(i,utdex,k)+fftbufs(i,utdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grut2(i,k) = 0.5_r8*(fftbufn(i,utdex,k)-fftbufs(i,utdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grvt1(i,k) = 0.5_r8*(fftbufn(i,vtdex,k)+fftbufs(i,vtdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grvt2(i,k) = 0.5_r8*(fftbufn(i,vtdex,k)-fftbufs(i,vtdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grrh1(i,k) = 0.5_r8*(fftbufn(i,drhsdex,k)+fftbufs(i,drhsdex,k))
cam/src/dynamics/eul/linemsdyn.F90:         grrh2(i,k) = 0.5_r8*(fftbufn(i,drhsdex,k)-fftbufs(i,drhsdex,k))
cam/src/dynamics/eul/linemsdyn.F90:      grlps1(i) = 0.5_r8*(fftbufn(i,bpstrdex,1)+fftbufs(i,bpstrdex,1))
cam/src/dynamics/eul/linemsdyn.F90:      grlps2(i) = 0.5_r8*(fftbufn(i,bpstrdex,1)-fftbufs(i,bpstrdex,1))
cam/src/dynamics/eul/realloc4.F90:!   1) After FFT preceding Legendre analysis, reallocate fftbuf
cam/src/dynamics/eul/realloc4.F90:!   2) Before FFT following Legendre synthesis, reallocate fftbuf
cam/src/dynamics/eul/realloc4.F90:subroutine realloc4a(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/eul/realloc4.F90:!   After FFT preceding Legendre analysis, reallocate fftbuf
cam/src/dynamics/eul/realloc4.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of input array
cam/src/dynamics/eul/realloc4.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of output array
cam/src/dynamics/eul/realloc4.F90:   real(r8), intent(in)  :: fftbuf_in(nlon_fft_in,9,plev,beglat:endlat) 
cam/src/dynamics/eul/realloc4.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/eul/realloc4.F90:   real(r8), intent(out) :: fftbuf_out(nlon_fft_out,9,plev,plat) 
cam/src/dynamics/eul/realloc4.F90:               fftbuf_out(i,ifld,k,lat_l) = fftbuf_in(locrm(i,iam),ifld,k,lat_l)
cam/src/dynamics/eul/realloc4.F90:         fftbuf_out(i,9,1,lat_l) = fftbuf_in(locrm(i,iam),9,1,lat_l)
cam/src/dynamics/eul/realloc4.F90:                  buf1(bpos+i) = fftbuf_in(locrm(i,procid),ifld,k,lat_l)
cam/src/dynamics/eul/realloc4.F90:            buf1(bpos+i) = fftbuf_in(locrm(i,procid),9,1,lat_l)
cam/src/dynamics/eul/realloc4.F90:                  fftbuf_out(i,ifld,k,lat_r) = buf2(bpos+i)
cam/src/dynamics/eul/realloc4.F90:            fftbuf_out(i,9,1,lat_r) = buf2(bpos+i)
cam/src/dynamics/eul/realloc4.F90:subroutine realloc4b(nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/eul/realloc4.F90:!   Before FFT following Legendre synthesis, reallocate fftbuf
cam/src/dynamics/eul/realloc4.F90:   integer, intent(in) :: nlon_fft_in      ! first dimension of input array
cam/src/dynamics/eul/realloc4.F90:   integer, intent(in) :: nlon_fft_out     ! first dimension of output array
cam/src/dynamics/eul/realloc4.F90:   real(r8), intent(in)  :: fftbuf_in(nlon_fft_in,8,plevp,plat) 
cam/src/dynamics/eul/realloc4.F90:   real(r8), intent(out) :: fftbuf_out(nlon_fft_out,8,plevp,beglat:endlat) 
cam/src/dynamics/eul/realloc4.F90:                            ! buffer used for in-place FFTs
cam/src/dynamics/eul/realloc4.F90:               fftbuf_out(locrm(i,iam),ifld,k,lat_l) = fftbuf_in(i,ifld,k,lat_l)
cam/src/dynamics/eul/realloc4.F90:            fftbuf_out(locrm(i,iam),ifld,plevp,lat_l) = fftbuf_in(i,ifld,plevp,lat_l)
cam/src/dynamics/eul/realloc4.F90:                  buf1(bpos+i) = fftbuf_in(i,ifld,k,lat_r)
cam/src/dynamics/eul/realloc4.F90:               buf1(bpos+i) = fftbuf_in(i,ifld,plevp,lat_r)
cam/src/dynamics/eul/realloc4.F90:                  fftbuf_out(locrm(i,procid),ifld,k,lat_l) = buf2(bpos+i)
cam/src/dynamics/eul/realloc4.F90:               fftbuf_out(locrm(i,procid),ifld,plevp,lat_l) = buf2(bpos+i)
cam/src/dynamics/eul/scan2.F90:   integer, parameter :: plondfft = plon + 2
cam/src/dynamics/eul/scan2.F90:   real(r8) difft         ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/eul/scan2.F90:   real(r8) diffta        ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/eul/scan2.F90:   real(r8) difftb        ! component of global delta-temp integral ( (n+1) - n )
cam/src/dynamics/eul/scan2.F90:   real(r8) difftalat(plat)     ! lat contribution to delta-temperature integral
cam/src/dynamics/eul/scan2.F90:   real(r8) difftblat(plat)     ! lat contribution to delta-temperature integral
cam/src/dynamics/eul/scan2.F90:   integer nlon_fft_in                 ! FFT work array inner dimension
cam/src/dynamics/eul/scan2.F90:   integer nlon_fft_out                ! FFT work array inner dimension
cam/src/dynamics/eul/scan2.F90:! FFT buffers
cam/src/dynamics/eul/scan2.F90:   real(r8), allocatable:: fftbuf_in(:,:,:,:)  ! fftbuf_in(nlon_fft_in,8,plevp,plat) 
cam/src/dynamics/eul/scan2.F90:   real(r8), allocatable:: fftbuf_out(:,:,:,:) ! fftbuf_out(nlon_fft_out,8,plevp,beglat:endlat) 
cam/src/dynamics/eul/scan2.F90:   nlon_fft_in = 2*maxm
cam/src/dynamics/eul/scan2.F90:   allocate(fftbuf_in(nlon_fft_in,8,plevp,plat))
cam/src/dynamics/eul/scan2.F90:   nlon_fft_in = 1
cam/src/dynamics/eul/scan2.F90:   allocate(fftbuf_in(1,1,1,1))
cam/src/dynamics/eul/scan2.F90:   nlon_fft_out = plondfft
cam/src/dynamics/eul/scan2.F90:   allocate(fftbuf_out(nlon_fft_out,8,plevp,beglat:endlat))
cam/src/dynamics/eul/scan2.F90:      call spegrd_bft (lat, nlon_fft_in, &
cam/src/dynamics/eul/scan2.F90:                       grva(1,1,irow), grta(1,1,irow), grpla(1,irow), grpma(1,irow), fftbuf_in(1,1,1,lat) )
cam/src/dynamics/eul/scan2.F90:      call spegrd_bft (lat, nlon_fft_out, &
cam/src/dynamics/eul/scan2.F90:                       grva(1,1,irow), grta(1,1,irow), grpla(1,irow), grpma(1,irow), fftbuf_out(1,1,1,lat) )
cam/src/dynamics/eul/scan2.F90:   call spegrd_ift ( nlon_fft_in, nlon_fft_out, fftbuf_in, fftbuf_out )
cam/src/dynamics/eul/scan2.F90:      call spegrd_aft (ztodt, lat, nlon(lat), nlon_fft_out, &
cam/src/dynamics/eul/scan2.F90:                   difftalat(lat), difftblat(lat), phis(1,lat), fftbuf_out(1,1,1,lat) )
cam/src/dynamics/eul/scan2.F90:   deallocate(fftbuf_in)
cam/src/dynamics/eul/scan2.F90:   deallocate(fftbuf_out)
cam/src/dynamics/eul/scan2.F90:                  engy2blat, difftalat, difftblat)
cam/src/dynamics/eul/scan2.F90:	difftalat=0._r8
cam/src/dynamics/eul/scan2.F90:	difftblat=0._r8
cam/src/dynamics/eul/scan2.F90:   diffta = 0._r8
cam/src/dynamics/eul/scan2.F90:   difftb = 0._r8
cam/src/dynamics/eul/scan2.F90:      diffta  = diffta  + difftalat(lat)
cam/src/dynamics/eul/scan2.F90:      difftb  = difftb  + difftblat(lat)
cam/src/dynamics/eul/scan2.F90:   difft    = diffta + fixmas*difftb
cam/src/dynamics/eul/scan2.F90:   if(difft .ne. 0._r8) then
cam/src/dynamics/eul/scan2.F90:     beta = -residual*ztodt/(cpair*difft)
cam/src/dynamics/eul/scan2.F90:                     engy2blat,difftalat,difftblat      )
cam/src/dynamics/eul/scan2.F90:   real(r8), intent(inout)   :: difftalat(plat)  ! lat contribution to delta-T integral
cam/src/dynamics/eul/scan2.F90:   real(r8), intent(inout)   :: difftblat(plat)  ! lat contribution to delta-T integral
cam/src/dynamics/eul/scan2.F90:! difftalat
cam/src/dynamics/eul/scan2.F90:      buf1(bufpos+j) = difftalat(jstrt+j)
cam/src/dynamics/eul/scan2.F90:! difftblat
cam/src/dynamics/eul/scan2.F90:      buf1(bufpos+j) = difftblat(jstrt+j)
cam/src/dynamics/eul/scan2.F90:! difftalat
cam/src/dynamics/eul/scan2.F90:         difftalat(jstrt_p+j) = buf2(bufpos+j)
cam/src/dynamics/eul/scan2.F90:! difftblat
cam/src/dynamics/eul/scan2.F90:         difftblat(jstrt_p+j) = buf2(bufpos+j)
cam/src/dynamics/eul/spetru.F90:  integer, parameter :: plondfft = plon + 2   ! Size of longitude needed for FFT's
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: phis_tmp(:,:)      ! Temporary to compute Phis of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: phisl_tmp(:,:)     ! Temporary to compute phisl of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: phism_tmp(:,:)     ! Temporary to compute phism of size needed for FFT
cam/src/dynamics/eul/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   allocate(phis_tmp(plondfft,plat))
cam/src/dynamics/eul/spetru.F90:      call fft991(phis_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      allocate(phisl_tmp(plondfft,plat))
cam/src/dynamics/eul/spetru.F90:      allocate(phism_tmp(plondfft,plat))
cam/src/dynamics/eul/spetru.F90:      call fft991(phis_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:         call fft991 (phisl_tmp(1,lat),work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/eul/spetru.F90:                      plondfft       ,nlon(lat),1           ,+1      )
cam/src/dynamics/eul/spetru.F90:         call fft991 (phism_tmp(1,lat),work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/eul/spetru.F90:                      plondfft       ,nlon(lat),1           ,+1      )
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: dpsm_tmp(:,:)  ! Temporary to compute dpsm of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: dpsl_tmp(:,:)  ! Temporary to compute dpsl of size needed for FFT
cam/src/dynamics/eul/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   allocate( log_ps(plondfft,plat) )
cam/src/dynamics/eul/spetru.F90:      call fft991(log_ps(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:   allocate( dpsl_tmp(plondfft,plat) )
cam/src/dynamics/eul/spetru.F90:   allocate( dpsm_tmp(plondfft,plat) )
cam/src/dynamics/eul/spetru.F90:      call fft991(log_ps(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      call fft991(dpsl_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      call fft991(dpsm_tmp(1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: x3_tmp(:,:,:)   ! Temporary to compute x3 of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: dl_tmp(:,:,:)   ! Temporary to compute dl of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: dm_tmp(:,:,:)   ! Temporary to compute dm of size needed for FFT
cam/src/dynamics/eul/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   allocate( x3_tmp(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:   if(present(dm)) allocate( dm_tmp(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:   if(present(dl)) allocate( dl_tmp(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:      call fft991(x3_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      call fft991(x3_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/eul/spetru.F90:                  plondfft       ,nlon(lat),plev        ,+1)
cam/src/dynamics/eul/spetru.F90:         call fft991(dl_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/eul/spetru.F90:                     plondfft       ,nlon(lat),plev        ,+1      )
cam/src/dynamics/eul/spetru.F90:         call fft991(dm_tmp(1,1,lat) ,work     ,trig(1,irow),ifax(1,irow),1       , &
cam/src/dynamics/eul/spetru.F90:                     plondfft       ,nlon(lat),plev        ,+1      )
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: div_tmp(:,:,:)   ! Temporary to compute div of size needed for FFT
cam/src/dynamics/eul/spetru.F90:   real(r8), pointer :: vort_tmp(:,:,:)  ! Temporary to compute vort of size needed for FFT
cam/src/dynamics/eul/spetru.F90:#if ( ! defined USEFFTLIB )
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*plev)  ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   real(r8) work((plon+1)*pcray)   ! Workspace for fft
cam/src/dynamics/eul/spetru.F90:   allocate( u_cosphi(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:   allocate( v_cosphi(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:      call fft991(u_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      call fft991(v_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:   if ( present(div) ) allocate( div_tmp(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:   if ( present(vort) ) allocate( vort_tmp(plondfft,plev,plat) )
cam/src/dynamics/eul/spetru.F90:      call fft991(u_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:      call fft991(v_cosphi(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/spetru.F90:         call fft991(vort_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1, &
cam/src/dynamics/eul/spetru.F90:                     plondfft,nlon(lat),plev,+1)
cam/src/dynamics/eul/spetru.F90:         call fft991(div_tmp(1,1,lat),work,trig(1,irow),ifax(1,irow),1,plondfft, &
cam/src/dynamics/eul/scandyn.F90:   use linemsdyn,    only: linemsdyn_bft, linemsdyn_fft, linemsdyn_aft, &
cam/src/dynamics/eul/scandyn.F90:                     plondfft
cam/src/dynamics/eul/scandyn.F90:   integer nlon_fft_in       ! FFT work array inner dimension
cam/src/dynamics/eul/scandyn.F90:   integer nlon_fft_out      ! FFT work array inner dimension
cam/src/dynamics/eul/scandyn.F90:! FFT buffers
cam/src/dynamics/eul/scandyn.F90:   real(r8), allocatable:: fftbuf_in(:,:,:,:)          ! fftbuf_in(nlon_fft_in,9,plev,beglat:endlat) 
cam/src/dynamics/eul/scandyn.F90:   real(r8), allocatable:: fftbuf_out(:,:,:,:)         ! fftbuf_out(nlon_fft_out,9,plev,plat)
cam/src/dynamics/eul/scandyn.F90:   nlon_fft_in = plondfft
cam/src/dynamics/eul/scandyn.F90:   allocate(fftbuf_in(nlon_fft_in,9,plev,beglat:endlat))
cam/src/dynamics/eul/scandyn.F90:   nlon_fft_out = 2*maxm + 1
cam/src/dynamics/eul/scandyn.F90:   nlon_fft_out = 2*maxm
cam/src/dynamics/eul/scandyn.F90:   allocate(fftbuf_out(nlon_fft_out,9,plev,plat))
cam/src/dynamics/eul/scandyn.F90:   nlon_fft_out = 1
cam/src/dynamics/eul/scandyn.F90:   allocate(fftbuf_out(1,1,1,1))
cam/src/dynamics/eul/scandyn.F90:      call linemsdyn_bft (lat, nlon(lat), nlon_fft_in, &
cam/src/dynamics/eul/scandyn.F90:                      cwava(lat), flx_net(1,lat), fftbuf_in(1,1,1,lat) )
cam/src/dynamics/eul/scandyn.F90:   call t_startf ('linemsdyn_fft')
cam/src/dynamics/eul/scandyn.F90:   call linemsdyn_fft (nlon_fft_in,nlon_fft_out,fftbuf_in,fftbuf_out)
cam/src/dynamics/eul/scandyn.F90:   call t_stopf ('linemsdyn_fft')
cam/src/dynamics/eul/scandyn.F90:      call linemsdyn_aft (irow, nlon_fft_out, fftbuf_out(1,1,1,lats), fftbuf_out(1,1,1,latn), &
cam/src/dynamics/eul/scandyn.F90:      call linemsdyn_aft (irow, nlon_fft_in, fftbuf_in(1,1,1,lats), fftbuf_in(1,1,1,latn), &
cam/src/dynamics/eul/scandyn.F90:   deallocate(fftbuf_in)
cam/src/dynamics/eul/scandyn.F90:   deallocate(fftbuf_out)
cam/src/dynamics/eul/initcom.F90:! Set up trigonometric tables for fft
cam/src/dynamics/eul/eul_control_mod.F90:! from comfft.h
cam/src/dynamics/eul/eul_control_mod.F90:   real(r8) ,public :: trig (3*plon/2+1,plat)  ! trigonometric funct values used by fft
cam/src/dynamics/eul/eul_control_mod.F90:   integer  ,public :: ifax(19,plat)           ! fft factorization of plon/2
cam/src/utils/.svn/all-wcprops:fft99.F90
cam/src/utils/.svn/all-wcprops:/!svn/ver/35/model_versions/cesm1_0_3/models/atm/cam/src/utils/fft99.F90
cam/src/utils/.svn/entries:fft99.F90
cam/src/utils/.svn/text-base/fft99.F90.svn-base:! FFT99F
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              THE PACKAGE FFT99F CONTAINS SEVERAL USER-LEVEL ROUTINES:
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!                BEFORE A SEQUENCE OF CALLS TO THE FFT ROUTINES
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!            SUBROUTINES FFT99 AND FFT991
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!                TWO FFT ROUTINES THAT RETURN SLIGHTLY DIFFERENT
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!                   *FORTRAN,P=XLIB,SN=FFT99F
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!                   FETCH P=CRAYLIB,SN=FFT99
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!                   CALL FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              SEE THE INDIVIDUAL WRITE-UPS FOR SET99, FFT99, AND
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              FFT991 BELOW, FOR A DETAILED DESCRIPTION OF THE
cam/src/utils/.svn/text-base/fft99.F90.svn-base:! PURPOSE      A SET-UP ROUTINE FOR FFT99 AND FFT991.  IT NEED ONLY BE
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              CALLED ONCE BEFORE A SEQUENCE OF CALLS TO THE FFT
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!               THE DOCUMENTATION FOR FFT99 AND FFT991 FOR THE
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!               USED BY THE FFT ROUTINES.
cam/src/utils/.svn/text-base/fft99.F90.svn-base:! SUBROUTINE FFT991 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:! SUBROUTINE FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              VALUES (FFT991) OR EXPLICIT CYCLIC CONTINUITY IN THE
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              GRIDPOINT VALUES (FFT99).  GIVEN A SET
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!              OF 2, 3, AND 5.  THESE VERSION OF FFT991 AND FFT99 ARE
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!               FOR FFT991, X(0), X(1), X(2),...,X(N-1),0,0.
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!               FOR FFT99, X(N-1),X(0),X(1),X(2),...,X(N-1),X(0).
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!               AND FFT99 SHOULD BE USED (BECAUSE OF THE EXPLICIT CYCLIC
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      SUBROUTINE FFT99(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     SUBROUTINE "FFT99" - MULTIPLE FAST REAL PERIODIC TRANSFORM
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     CORRESPONDING TO OLD SCALAR ROUTINE FFT9
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      CALL FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      CALL FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      END SUBROUTINE FFT99
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      SUBROUTINE FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     SUBROUTINE FFT99A - PREPROCESSING STEP FOR FFT99, ISIGN=+1
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      END SUBROUTINE FFT99A
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      SUBROUTINE FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     SUBROUTINE FFT99B - POSTPROCESSING STEP FOR FFT99, ISIGN=-1
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      END SUBROUTINE FFT99B
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      SUBROUTINE FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     SUBROUTINE "FFT991" - MULTIPLE REAL/HALF-COMPLEX PERIODIC
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     SAME AS FFT99 EXCEPT THAT ORDERING OF DATA CORRESPONDS TO
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     THAT IN MRFFT2
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      CALL FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      CALL FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      END SUBROUTINE FFT991
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      CALL FFTRIG (TRIGS, N, MODE)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      SUBROUTINE FFTRIG(TRIGS,N,MODE)
cam/src/utils/.svn/text-base/fft99.F90.svn-base:      END SUBROUTINE FFTRIG
cam/src/utils/.svn/text-base/fft99.F90.svn-base:!     AS PART OF MULTIPLE COMPLEX FFT ROUTINE
cam/src/utils/fft99.F90:! FFT99F
cam/src/utils/fft99.F90:!              THE PACKAGE FFT99F CONTAINS SEVERAL USER-LEVEL ROUTINES:
cam/src/utils/fft99.F90:!                BEFORE A SEQUENCE OF CALLS TO THE FFT ROUTINES
cam/src/utils/fft99.F90:!            SUBROUTINES FFT99 AND FFT991
cam/src/utils/fft99.F90:!                TWO FFT ROUTINES THAT RETURN SLIGHTLY DIFFERENT
cam/src/utils/fft99.F90:!                   *FORTRAN,P=XLIB,SN=FFT99F
cam/src/utils/fft99.F90:!                   FETCH P=CRAYLIB,SN=FFT99
cam/src/utils/fft99.F90:!                   CALL FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/fft99.F90:!              SEE THE INDIVIDUAL WRITE-UPS FOR SET99, FFT99, AND
cam/src/utils/fft99.F90:!              FFT991 BELOW, FOR A DETAILED DESCRIPTION OF THE
cam/src/utils/fft99.F90:! PURPOSE      A SET-UP ROUTINE FOR FFT99 AND FFT991.  IT NEED ONLY BE
cam/src/utils/fft99.F90:!              CALLED ONCE BEFORE A SEQUENCE OF CALLS TO THE FFT
cam/src/utils/fft99.F90:!               THE DOCUMENTATION FOR FFT99 AND FFT991 FOR THE
cam/src/utils/fft99.F90:!               USED BY THE FFT ROUTINES.
cam/src/utils/fft99.F90:! SUBROUTINE FFT991 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/fft99.F90:! SUBROUTINE FFT99 (A,WORK,TRIGS,IFAX,INC,JUMP,N,M,ISIGN)
cam/src/utils/fft99.F90:!              VALUES (FFT991) OR EXPLICIT CYCLIC CONTINUITY IN THE
cam/src/utils/fft99.F90:!              GRIDPOINT VALUES (FFT99).  GIVEN A SET
cam/src/utils/fft99.F90:!              OF 2, 3, AND 5.  THESE VERSION OF FFT991 AND FFT99 ARE
cam/src/utils/fft99.F90:!               FOR FFT991, X(0), X(1), X(2),...,X(N-1),0,0.
cam/src/utils/fft99.F90:!               FOR FFT99, X(N-1),X(0),X(1),X(2),...,X(N-1),X(0).
cam/src/utils/fft99.F90:!               AND FFT99 SHOULD BE USED (BECAUSE OF THE EXPLICIT CYCLIC
cam/src/utils/fft99.F90:      SUBROUTINE FFT99(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/utils/fft99.F90:!     SUBROUTINE "FFT99" - MULTIPLE FAST REAL PERIODIC TRANSFORM
cam/src/utils/fft99.F90:!     CORRESPONDING TO OLD SCALAR ROUTINE FFT9
cam/src/utils/fft99.F90:      CALL FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:      CALL FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:      END SUBROUTINE FFT99
cam/src/utils/fft99.F90:      SUBROUTINE FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:!     SUBROUTINE FFT99A - PREPROCESSING STEP FOR FFT99, ISIGN=+1
cam/src/utils/fft99.F90:      END SUBROUTINE FFT99A
cam/src/utils/fft99.F90:      SUBROUTINE FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:!     SUBROUTINE FFT99B - POSTPROCESSING STEP FOR FFT99, ISIGN=-1
cam/src/utils/fft99.F90:      END SUBROUTINE FFT99B
cam/src/utils/fft99.F90:      SUBROUTINE FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
cam/src/utils/fft99.F90:!     SUBROUTINE "FFT991" - MULTIPLE REAL/HALF-COMPLEX PERIODIC
cam/src/utils/fft99.F90:!     SAME AS FFT99 EXCEPT THAT ORDERING OF DATA CORRESPONDS TO
cam/src/utils/fft99.F90:!     THAT IN MRFFT2
cam/src/utils/fft99.F90:      CALL FFT99A(A,WORK,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:      CALL FFT99B(WORK,A,TRIGS,INC,JUMP,N,LOT)
cam/src/utils/fft99.F90:      END SUBROUTINE FFT991
cam/src/utils/fft99.F90:      CALL FFTRIG (TRIGS, N, MODE)
cam/src/utils/fft99.F90:      SUBROUTINE FFTRIG(TRIGS,N,MODE)
cam/src/utils/fft99.F90:      END SUBROUTINE FFTRIG
cam/src/utils/fft99.F90:!     AS PART OF MULTIPLE COMPLEX FFT ROUTINE
cam/src/physics/cam/radae.F90:!         CSFFT = CSFF296*(CSFF260/CSFF296)**TFAC
cam/src/physics/waccm/qbo.F90:  integer              :: coefsiz                ! size of coefficient dimension on fft dataset
cam/src/physics/waccm/qbo.F90:  real(r8)             :: cday_ref               ! reference day for fft input
cam/src/physics/waccm/qbo.F90:                                                            ! .FALSE.=> data file has fft coefficients
cam/src/physics/waccm/qbo.F90:    integer  :: fftdimid           ! netcdf id for fft coefficient dimension
cam/src/physics/waccm/qbo.F90:    integer  :: freqqboid          ! netcdf id for fft frequency variable
cam/src/physics/waccm/qbo.F90:    real(r8), allocatable :: ubar_inp(:)    ! input time-mean winds for fft input (levsiz)
cam/src/physics/waccm/qbo.F90:    real(r8), allocatable :: cosq_inp(:,:)  ! input cosine coefficients for fft input (levsiz,coefsiz)
cam/src/physics/waccm/qbo.F90:    real(r8), allocatable :: sinq_inp(:,:)  ! input sine coefficients for fft input (levsiz,coefsiz)
cam/src/physics/waccm/qbo.F90:! Figure out if the file contains qbo winds by month or fft coefficients 
cam/src/physics/waccm/qbo.F90:          call wrap_inq_dimid( ncid, 'ncoef', fftdimid  )
cam/src/physics/waccm/qbo.F90:          call wrap_inq_dimlen( ncid, fftdimid, coefsiz  )
cam/src/physics/waccm/qbo.F90:! Allocate arrays, depending on type of input data: monthly or fft
cam/src/physics/waccm/qbo.F90:! Wind at this timestep for fft input data
cam/src/physics/waccm/qbo.F90:! Set past and future days for data, generate winds for current day from fft data
cam/src/chemistry/mozart/mo_drydep.F90:  real(r8), parameter    :: difft       = 2.060e-5_r8
cam/src/chemistry/mozart/mo_drydep.F90:    crb = (difft/diffm)**(2._r8/3._r8) !.666666_r8
cam/src/advection/slt/engy_tdif.F90:                     difft   ,nlon    )
cam/src/advection/slt/engy_tdif.F90:  real(r8), intent(out) :: difft                ! accumulator
cam/src/advection/slt/engy_tdif.F90:  difft = 0._r8
cam/src/advection/slt/engy_tdif.F90:        difft = difft + pdel(i,k)
cam/src/advection/slt/engy_tdif.F90:  difft = difft*const
wrf/test/em_heldsuarez/.svn/text-base/namelist.input.svn-base: fft_filter_lat                      = 45
wrf/test/em_heldsuarez/namelist.input: fft_filter_lat                      = 45
wrf/test/em_real/namelist.input.global: fft_filter_lat                      = 45.,
wrf/test/em_real/.svn/text-base/namelist.input.global.svn-base: fft_filter_lat                      = 45.,
wrf/compile:    setenv DA_ARCHFLAGS "${BUFR_CPP} ${MADIS_CPP} -DFFTPACK -DNORESHAPE"
wrf/bld/.svn/text-base/wrf.cpl7.template.svn-base:cd \$objdir/wrf/external/fftpack/fftpack5
wrf/bld/wrf.cpl7.template:cd \$objdir/wrf/external/fftpack/fftpack5
wrf/var/obsproc/MAP_plot/Dir_map/DA_Constants.f90:! FFTs:
wrf/var/obsproc/MAP_plot/Dir_map/DA_Constants.f90:  INTEGER, PARAMETER :: Forward_FFT     = -1 ! Grid to spectral
wrf/var/obsproc/MAP_plot/Dir_map/DA_Constants.f90:  INTEGER, PARAMETER :: Inverse_FFT     =  1 ! Spectral to grid.
wrf/var/obsproc/MAP_plot/Dir_map/DA_Constants.f90:  INTEGER, PARAMETER :: num_fft_factors = 10 ! Max number of factors.
wrf/var/obsproc/MAP_plot/Dir_map/DA_Define_Structures.f90:!     FFT variables:
wrf/var/obsproc/MAP_plot/Dir_map/DA_Define_Structures.f90:      INTEGER, POINTER :: fft_factors_y(:)   ! FFT factors in y direction.
wrf/var/obsproc/MAP_plot/Dir_map/DA_Define_Structures.f90:      INTEGER, POINTER :: fft_factors_x(:)   ! FFT factors in x direction.
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Define_Structures.f90.svn-base:!     FFT variables:
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Define_Structures.f90.svn-base:      INTEGER, POINTER :: fft_factors_y(:)   ! FFT factors in y direction.
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Define_Structures.f90.svn-base:      INTEGER, POINTER :: fft_factors_x(:)   ! FFT factors in x direction.
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Constants.f90.svn-base:! FFTs:
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Constants.f90.svn-base:  INTEGER, PARAMETER :: Forward_FFT     = -1 ! Grid to spectral
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Constants.f90.svn-base:  INTEGER, PARAMETER :: Inverse_FFT     =  1 ! Spectral to grid.
wrf/var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Constants.f90.svn-base:  INTEGER, PARAMETER :: num_fft_factors = 10 ! Max number of factors.
wrf/var/gen_be/gen_spectra.f90:   integer             :: lenr                       ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/gen_be/gen_spectra.f90:   integer             :: ier                        ! FFT error flag.
wrf/var/gen_be/Makefile:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/var/gen_be/Makefile:  $(DA)/module_wrf_error.o $(DA)/da_reporting.o $(DA)/module_ffts.o \
wrf/var/gen_be/gen_be_stage4_global.f90:   integer             :: lenr                       ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   use da_control, only : num_fft_factors, pi, stdout, stderr, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   use da_tools_serial, only : da_get_unit, da_free_unit,da_find_fft_factors, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      da_find_fft_trig_funcs
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   use module_ffts, only : fft551, fft661
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, parameter    :: nrange = 50               ! Range to search for efficient FFT.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer               :: fft_method                ! For poisson_method=1: 1=FCT, 2=FST.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer               :: ifax1(1:num_fft_factors)  ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer               :: ifax2(1:num_fft_factors)  ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer               :: ifax1s(1:num_fft_factors) ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer               :: ifax2s(1:num_fft_factors) ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: trigs1(:)                 ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: trigs2(:)                 ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: fft_coeffs(:,:)           ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: trigs1s(:)                ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: trigs2s(:)                ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, allocatable     :: fft_coeffss(:,:)          ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   fft_method = 2
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:!  Initialize FFT coefficients:
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_fft_initialize1( dim1, dim2, n1, n2, ifax1, ifax2 )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_fft_initialize1( dim1s, dim2s, n1s, n2s, ifax1s, ifax2s )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      allocate( fft_coeffs(1:n1+1,1:n2+1) )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_fft_initialize2( n1, n2, ds, trigs1, trigs2, fft_coeffs )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      allocate( fft_coeffss(1:n1s+1,1:n2s+1) )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_fft_initialize2( n1s, n2s, ds, trigs1s, trigs2s, fft_coeffss )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:            call da_del2a_to_a( dim1s, dim2s, n1s, n2s, fft_method, ifax1s, ifax2s, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                                trigs1s, trigs2s, fft_coeffss, vor, psi2d )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:            call da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                                trigs1, trigs2, fft_coeffs, div, chi2d )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                                  n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, fft_coeffs, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                                  n1s, n2s, ifax1s, ifax2s, trigs1s, trigs2s, fft_coeffss, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:subroutine da_fft_initialize1( dim1, dim2, n1, n2, ifax1, ifax2 )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(out):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(out):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer            :: fft_pad1, fft_pad2           ! Range to search for efficient FFT.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer            :: fft_factors(1:num_fft_factors)! FFT factors. 
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:!  Ensure efficient FFT dimensions by padding if necessary:
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_find_fft_factors( n, found_magic, fft_factors ) 
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         fft_pad1 = n - n1
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         ifax1 = fft_factors
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   n1 = n1 + fft_pad1
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call da_find_fft_factors( n, found_magic, fft_factors )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         fft_pad2 = n - n2
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         ifax2 = fft_factors
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   n2 = n2 + fft_pad2
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:end subroutine da_fft_initialize1
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:subroutine da_fft_initialize2( n1, n2, ds, trigs1, trigs2, fft_coeffs )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:!  Need to split fft_initialize as array dimensions need to be calculated first.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(out)  :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(out)  :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(out)  :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   fft_coeffs(1,1) = 0.0 ! Not used?
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         fft_coeffs(i,j) = const / ( 2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      fft_coeffs(i,j) = const / ( 2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   call da_find_fft_trig_funcs( n1, trigs1 )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   call da_find_fft_trig_funcs( n2, trigs2 )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:end subroutine da_fft_initialize2
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:subroutine da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                          fft_coeffs, del2a, a )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: fft_method                   ! 1=Cosine, 2=Sine transform.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      if ( fft_method == 1 ) then ! Cosine transform.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      else if ( fft_method == 2 ) then ! Sine transform:
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   if ( fft_method == 1 ) then ! Cosine transform.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   else if ( fft_method == 2 ) then ! Sine transform:
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   if ( fft_method == 1 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   else if ( fft_method == 2 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   if ( fft_method == 1 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   else if ( fft_method == 2 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:!  Note fft_coeffs(1,1)=0 so a(k=0,l=0) is also 0.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:         a1d(ij) = fft_coeffs(i,j) * a1d(ij)
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   if ( fft_method == 1 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   else if ( fft_method == 2 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   if ( fft_method == 1 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   else if ( fft_method == 2 ) then
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                            n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, fft_coeffs, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                            n1s, n2s, ifax1s, ifax2s, trigs1s, trigs2s, fft_coeffss, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: fft_method                   ! 1=Cosine, 2=Sine transform.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax1s(1:num_fft_factors)    ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   integer, intent(in):: ifax2s(1:num_fft_factors)    ! FFT factors.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs1s(1:3*n1)              ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: trigs2s(1:3*n2)              ! FFT trig functions.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   real, intent(in)   :: fft_coeffss(1:n1+1,1:n2+1)   ! FFT coefficients.
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   write(6,'(a,i4)')' Using FFT method (1=Cosine, 2=Sine): ', fft_method
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   call da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                       fft_coeffs, div, chi1 )
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:   call da_del2a_to_a( dim1s, dim2s, n1s, n2s, fft_method, ifax1s, ifax2s, trigs1s, trigs2s, &
wrf/var/gen_be/.svn/text-base/gen_be_stage0_wrf.f90.svn-base:                       fft_coeffss, vor, psi1 )
wrf/var/gen_be/.svn/text-base/gen_be_stage4_global.f90.svn-base:   integer             :: lenr                       ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/gen_be/.svn/text-base/gen_spectra.f90.svn-base:   integer             :: lenr                       ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/gen_be/.svn/text-base/gen_spectra.f90.svn-base:   integer             :: ier                        ! FFT error flag.
wrf/var/gen_be/.svn/text-base/Makefile.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/var/gen_be/.svn/text-base/Makefile.svn-base:  $(DA)/module_wrf_error.o $(DA)/da_reporting.o $(DA)/module_ffts.o \
wrf/var/gen_be/gen_be_stage0_wrf.f90:   use da_control, only : num_fft_factors, pi, stdout, stderr, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   use da_tools_serial, only : da_get_unit, da_free_unit,da_find_fft_factors, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:      da_find_fft_trig_funcs
wrf/var/gen_be/gen_be_stage0_wrf.f90:   use module_ffts, only : fft551, fft661
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, parameter    :: nrange = 50               ! Range to search for efficient FFT.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer               :: fft_method                ! For poisson_method=1: 1=FCT, 2=FST.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer               :: ifax1(1:num_fft_factors)  ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer               :: ifax2(1:num_fft_factors)  ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer               :: ifax1s(1:num_fft_factors) ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer               :: ifax2s(1:num_fft_factors) ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: trigs1(:)                 ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: trigs2(:)                 ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: fft_coeffs(:,:)           ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: trigs1s(:)                ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: trigs2s(:)                ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, allocatable     :: fft_coeffss(:,:)          ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   fft_method = 2
wrf/var/gen_be/gen_be_stage0_wrf.f90:!  Initialize FFT coefficients:
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_fft_initialize1( dim1, dim2, n1, n2, ifax1, ifax2 )
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_fft_initialize1( dim1s, dim2s, n1s, n2s, ifax1s, ifax2s )
wrf/var/gen_be/gen_be_stage0_wrf.f90:      allocate( fft_coeffs(1:n1+1,1:n2+1) )
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_fft_initialize2( n1, n2, ds, trigs1, trigs2, fft_coeffs )
wrf/var/gen_be/gen_be_stage0_wrf.f90:      allocate( fft_coeffss(1:n1s+1,1:n2s+1) )
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_fft_initialize2( n1s, n2s, ds, trigs1s, trigs2s, fft_coeffss )
wrf/var/gen_be/gen_be_stage0_wrf.f90:            call da_del2a_to_a( dim1s, dim2s, n1s, n2s, fft_method, ifax1s, ifax2s, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                                trigs1s, trigs2s, fft_coeffss, vor, psi2d )
wrf/var/gen_be/gen_be_stage0_wrf.f90:            call da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                                trigs1, trigs2, fft_coeffs, div, chi2d )
wrf/var/gen_be/gen_be_stage0_wrf.f90:                                  n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, fft_coeffs, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                                  n1s, n2s, ifax1s, ifax2s, trigs1s, trigs2s, fft_coeffss, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:subroutine da_fft_initialize1( dim1, dim2, n1, n2, ifax1, ifax2 )
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(out):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(out):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer            :: fft_pad1, fft_pad2           ! Range to search for efficient FFT.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer            :: fft_factors(1:num_fft_factors)! FFT factors. 
wrf/var/gen_be/gen_be_stage0_wrf.f90:!  Ensure efficient FFT dimensions by padding if necessary:
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_find_fft_factors( n, found_magic, fft_factors ) 
wrf/var/gen_be/gen_be_stage0_wrf.f90:         fft_pad1 = n - n1
wrf/var/gen_be/gen_be_stage0_wrf.f90:         ifax1 = fft_factors
wrf/var/gen_be/gen_be_stage0_wrf.f90:   n1 = n1 + fft_pad1
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call da_find_fft_factors( n, found_magic, fft_factors )
wrf/var/gen_be/gen_be_stage0_wrf.f90:         fft_pad2 = n - n2
wrf/var/gen_be/gen_be_stage0_wrf.f90:         ifax2 = fft_factors
wrf/var/gen_be/gen_be_stage0_wrf.f90:   n2 = n2 + fft_pad2
wrf/var/gen_be/gen_be_stage0_wrf.f90:end subroutine da_fft_initialize1
wrf/var/gen_be/gen_be_stage0_wrf.f90:subroutine da_fft_initialize2( n1, n2, ds, trigs1, trigs2, fft_coeffs )
wrf/var/gen_be/gen_be_stage0_wrf.f90:!  Need to split fft_initialize as array dimensions need to be calculated first.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(out)  :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(out)  :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(out)  :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   fft_coeffs(1,1) = 0.0 ! Not used?
wrf/var/gen_be/gen_be_stage0_wrf.f90:         fft_coeffs(i,j) = const / ( 2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/gen_be/gen_be_stage0_wrf.f90:      fft_coeffs(i,j) = const / ( 2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/gen_be/gen_be_stage0_wrf.f90:   call da_find_fft_trig_funcs( n1, trigs1 )
wrf/var/gen_be/gen_be_stage0_wrf.f90:   call da_find_fft_trig_funcs( n2, trigs2 )
wrf/var/gen_be/gen_be_stage0_wrf.f90:end subroutine da_fft_initialize2
wrf/var/gen_be/gen_be_stage0_wrf.f90:subroutine da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                          fft_coeffs, del2a, a )
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: fft_method                   ! 1=Cosine, 2=Sine transform.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:      if ( fft_method == 1 ) then ! Cosine transform.
wrf/var/gen_be/gen_be_stage0_wrf.f90:      else if ( fft_method == 2 ) then ! Sine transform:
wrf/var/gen_be/gen_be_stage0_wrf.f90:   if ( fft_method == 1 ) then ! Cosine transform.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   else if ( fft_method == 2 ) then ! Sine transform:
wrf/var/gen_be/gen_be_stage0_wrf.f90:   if ( fft_method == 1 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   else if ( fft_method == 2 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   if ( fft_method == 1 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   else if ( fft_method == 2 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:!  Note fft_coeffs(1,1)=0 so a(k=0,l=0) is also 0.
wrf/var/gen_be/gen_be_stage0_wrf.f90:         a1d(ij) = fft_coeffs(i,j) * a1d(ij)
wrf/var/gen_be/gen_be_stage0_wrf.f90:   if ( fft_method == 1 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   else if ( fft_method == 2 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   if ( fft_method == 1 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft551( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   else if ( fft_method == 2 ) then
wrf/var/gen_be/gen_be_stage0_wrf.f90:      call fft661( isign, inc, jump, lot, n, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                            n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, fft_coeffs, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                            n1s, n2s, ifax1s, ifax2s, trigs1s, trigs2s, fft_coeffss, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: fft_method                   ! 1=Cosine, 2=Sine transform.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax1(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax2(1:num_fft_factors)     ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs1(1:3*n1)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs2(1:3*n2)               ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: fft_coeffs(1:n1+1,1:n2+1)    ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax1s(1:num_fft_factors)    ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   integer, intent(in):: ifax2s(1:num_fft_factors)    ! FFT factors.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs1s(1:3*n1)              ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: trigs2s(1:3*n2)              ! FFT trig functions.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   real, intent(in)   :: fft_coeffss(1:n1+1,1:n2+1)   ! FFT coefficients.
wrf/var/gen_be/gen_be_stage0_wrf.f90:   write(6,'(a,i4)')' Using FFT method (1=Cosine, 2=Sine): ', fft_method
wrf/var/gen_be/gen_be_stage0_wrf.f90:   call da_del2a_to_a( dim1, dim2, n1, n2, fft_method, ifax1, ifax2, trigs1, trigs2, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                       fft_coeffs, div, chi1 )
wrf/var/gen_be/gen_be_stage0_wrf.f90:   call da_del2a_to_a( dim1s, dim2s, n1s, n2s, fft_method, ifax1s, ifax2s, trigs1s, trigs2s, &
wrf/var/gen_be/gen_be_stage0_wrf.f90:                       fft_coeffss, vor, psi1 )
wrf/var/da/da_spectral/da_spectral.f90:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   integer, intent(in) :: lenr                       ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   integer, intent(in) :: lenwrk                     ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   integer, intent(in) :: lensav                     ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   integer, intent(in) :: inc                        ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   real, intent(in)    :: wsave(1:lensav)            ! Primes for FFT.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   real                :: r_fou(1:lenr)              ! FFT array.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:   real                :: work(1:lenwrk)             ! FFT work array.
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:      call rfft1f(ide, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/da_vtovv_spectral_adj.inc:      call da_error(__FILE__,__LINE__,(/"Must compile with FFTPACK"/))
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:   integer, intent(in) :: lenr             ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:   real, intent(in)    :: wsave(1:lensav)  ! Primes for FFT.
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:   real                :: r_fou(1:lenr)          ! FFT array.
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:   real                :: work(1:lenwrk)         ! FFT work array. 
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:      call rfft1f(ni, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/da_vv_to_v_spectral.inc:      call da_error(__FILE__,__LINE__,(/"Needs to be compiled with FFTPACK"/))
wrf/var/da/da_spectral/da_initialize_h.inc:   integer, intent(in)  :: lensav                     ! Size of FFTs wsave array.
wrf/var/da/da_spectral/da_initialize_h.inc:   real,    intent(out) :: wsave(1:lensav)            ! Primes for FFT.
wrf/var/da/da_spectral/da_initialize_h.inc:   ! [1] Initialize FFT coefficients.'
wrf/var/da/da_spectral/da_initialize_h.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_initialize_h.inc:   call rfft1i(ni, wsave, lensav, ierr)
wrf/var/da/da_spectral/da_initialize_h.inc:   call da_error(__FILE__,__LINE__,(/"Needs to be compiled with FFTPACK"/))
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:   integer, intent(in) :: lenr             ! FFT array dimension (at least inc*(n-1)+1).
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:   real, intent(in)    :: wsave(1:lensav)  ! Primes for FFT.
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:   real                :: r_fou(1:lenr)          ! FFT array.
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:   real                :: work(1:lenwrk)         ! FFT work array. 
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:      call rfft1f(ni, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/.svn/text-base/da_vv_to_v_spectral.inc.svn-base:      call da_error(__FILE__,__LINE__,(/"Needs to be compiled with FFTPACK"/))
wrf/var/da/da_spectral/.svn/text-base/da_spectral.f90.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:   integer, intent(in)  :: lensav                     ! Size of FFTs wsave array.
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:   real,    intent(out) :: wsave(1:lensav)            ! Primes for FFT.
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:   ! [1] Initialize FFT coefficients.'
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:   call rfft1i(ni, wsave, lensav, ierr)
wrf/var/da/da_spectral/.svn/text-base/da_initialize_h.inc.svn-base:   call da_error(__FILE__,__LINE__,(/"Needs to be compiled with FFTPACK"/))
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   integer, intent(in) :: lenr                     ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   integer, intent(in) :: lenwrk                   ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   integer, intent(in) :: lensav                   ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   integer, intent(in) :: inc                      ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   real, intent(in)    :: wsave(1:lensav)          ! Primes for FFT.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   real    :: r_fou(1:lenr)            ! FFT array.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:   real    :: work(1:lenwrk)           ! FFT work array. 
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:      call rfft1b(ide, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral.inc.svn-base:      call da_error(__FILE__,__LINE__,(/"Must compile with FFTPACK"/))
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   integer, intent(in) :: lenr                       ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   integer, intent(in) :: lenwrk                     ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   integer, intent(in) :: lensav                     ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   integer, intent(in) :: inc                        ! FFT info.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   real, intent(in)    :: wsave(1:lensav)            ! Primes for FFT.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   real                :: r_fou(1:lenr)              ! FFT array.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:   real                :: work(1:lenwrk)             ! FFT work array.
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:#ifdef FFTPACK
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:      call rfft1f(ide, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/.svn/text-base/da_vtovv_spectral_adj.inc.svn-base:      call da_error(__FILE__,__LINE__,(/"Must compile with FFTPACK"/))
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   integer, intent(in) :: lenr                     ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   integer, intent(in) :: lenwrk                   ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   integer, intent(in) :: lensav                   ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   integer, intent(in) :: inc                      ! FFT info.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   real, intent(in)    :: wsave(1:lensav)          ! Primes for FFT.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   real    :: r_fou(1:lenr)            ! FFT array.
wrf/var/da/da_spectral/da_vtovv_spectral.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vtovv_spectral.inc:   real    :: work(1:lenwrk)           ! FFT work array. 
wrf/var/da/da_spectral/da_vtovv_spectral.inc:#ifdef FFTPACK
wrf/var/da/da_spectral/da_vtovv_spectral.inc:      call rfft1b(ide, inc, r_fou, lenr, wsave, lensav, work, lenwrk, ierr)
wrf/var/da/da_spectral/da_vtovv_spectral.inc:      call da_error(__FILE__,__LINE__,(/"Must compile with FFTPACK"/))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   integer, parameter       :: nrange = 50 ! Range to search for efficient FFT.
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   integer                  :: fft_size_i  ! Efficient FFT 1st dimension.
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   integer                  :: fft_size_j  ! Efficient FFT 2nd dimension.
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   logical                  :: found_magic ! true when efficient FFT found
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   ! [1.0] Calculate padded grid-size required for efficient FFTs and factors:
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   allocate(xbx % fft_factors_x(num_fft_factors))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:      call da_find_fft_factors(n, found_magic, xbx % fft_factors_x)
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            fft_size_i = n
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            xbx % fft_pad_i = n - nx
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   allocate(xbx % trig_functs_x(1:3*fft_size_i))  
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   call da_find_fft_trig_funcs(fft_size_i, xbx % trig_functs_x(:))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   allocate(xbx % fft_factors_y(num_fft_factors))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:      call da_find_fft_factors(n, found_magic, xbx % fft_factors_y)
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            fft_size_j = n
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            xbx % fft_pad_j = n - ny
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   allocate(xbx % trig_functs_y(1:3*fft_size_j))  
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   call da_find_fft_trig_funcs(fft_size_j, xbx % trig_functs_y(:))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   nx = ide - ids + xbx%fft_pad_i
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   ny = jde - jds + xbx%fft_pad_j
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   xbx%fft_ix = nx + 1
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   xbx%fft_jy = ny + 1
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   allocate(xbx%fft_coeffs(1:xbx%fft_ix,1:xbx%fft_jy))
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:         ! xbx%fft_coeffs(i,j) = const / (1.0 - cos_coeff_nx * cos_coeff_ny)
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            xbx%fft_coeffs(i,j) = 0.0
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:            xbx%fft_coeffs(i,j) = const / (2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   !mslee      xbx%fft_coeffs(1,1:xbx%fft_jy)  = 0.0
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   !mslee      xbx%fft_coeffs(xbx%fft_ix,1:xbx%fft_jy) = 0.0
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   !mslee      xbx%fft_coeffs(1:xbx%fft_ix,1)  = 0.0
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   !mslee      xbx%fft_coeffs(1:xbx%fft_ix,xbx%fft_jy) = 0.0
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   xbx%fft_adjoint_factor = 4.0 / real(nx * ny)
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   if (xbx%fft_pad_i <= 0) then
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:   else if (xbx%fft_pad_i > (ide-ids+1)) then
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:       'FFT xbx%fft_pad_i is too large!'
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:         'xbx%fft_pad_i = ', xbx%fft_pad_i
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:      xbx%pad_inc = (ide-ids+1)/xbx%fft_pad_i
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:      do n=1, xbx%fft_pad_i
wrf/var/da/da_setup_structures/da_setup_runconstants.inc:      do n=1, xbx%fft_pad_i
wrf/var/da/da_setup_structures/da_setup_structures.f90:      truelat1_3dv,xlonc,t0,num_fft_factors,pi,print_detail_spectral, global, print_detail_obs, &
wrf/var/da/da_setup_structures/da_setup_structures.f90:   use da_tools_serial, only : da_get_unit, da_free_unit, da_array_print, da_find_fft_factors, &
wrf/var/da/da_setup_structures/da_setup_structures.f90:      da_find_fft_trig_funcs
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_structures.f90.svn-base:      truelat1_3dv,xlonc,t0,num_fft_factors,pi,print_detail_spectral, global, print_detail_obs, &
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_structures.f90.svn-base:   use da_tools_serial, only : da_get_unit, da_free_unit, da_array_print, da_find_fft_factors, &
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_structures.f90.svn-base:      da_find_fft_trig_funcs
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   integer, parameter       :: nrange = 50 ! Range to search for efficient FFT.
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   integer                  :: fft_size_i  ! Efficient FFT 1st dimension.
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   integer                  :: fft_size_j  ! Efficient FFT 2nd dimension.
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   logical                  :: found_magic ! true when efficient FFT found
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   ! [1.0] Calculate padded grid-size required for efficient FFTs and factors:
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   allocate(xbx % fft_factors_x(num_fft_factors))
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:      call da_find_fft_factors(n, found_magic, xbx % fft_factors_x)
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            fft_size_i = n
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            xbx % fft_pad_i = n - nx
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   allocate(xbx % trig_functs_x(1:3*fft_size_i))  
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   call da_find_fft_trig_funcs(fft_size_i, xbx % trig_functs_x(:))
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   allocate(xbx % fft_factors_y(num_fft_factors))
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:      call da_find_fft_factors(n, found_magic, xbx % fft_factors_y)
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            fft_size_j = n
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            xbx % fft_pad_j = n - ny
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   allocate(xbx % trig_functs_y(1:3*fft_size_j))  
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   call da_find_fft_trig_funcs(fft_size_j, xbx % trig_functs_y(:))
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   nx = ide - ids + xbx%fft_pad_i
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   ny = jde - jds + xbx%fft_pad_j
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   xbx%fft_ix = nx + 1
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   xbx%fft_jy = ny + 1
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   allocate(xbx%fft_coeffs(1:xbx%fft_ix,1:xbx%fft_jy))
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:         ! xbx%fft_coeffs(i,j) = const / (1.0 - cos_coeff_nx * cos_coeff_ny)
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            xbx%fft_coeffs(i,j) = 0.0
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:            xbx%fft_coeffs(i,j) = const / (2.0 - cos_coeff_nx - cos_coeff_ny)
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   !mslee      xbx%fft_coeffs(1,1:xbx%fft_jy)  = 0.0
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   !mslee      xbx%fft_coeffs(xbx%fft_ix,1:xbx%fft_jy) = 0.0
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   !mslee      xbx%fft_coeffs(1:xbx%fft_ix,1)  = 0.0
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   !mslee      xbx%fft_coeffs(1:xbx%fft_ix,xbx%fft_jy) = 0.0
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   xbx%fft_adjoint_factor = 4.0 / real(nx * ny)
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   if (xbx%fft_pad_i <= 0) then
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:   else if (xbx%fft_pad_i > (ide-ids+1)) then
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:       'FFT xbx%fft_pad_i is too large!'
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:         'xbx%fft_pad_i = ', xbx%fft_pad_i
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:      xbx%pad_inc = (ide-ids+1)/xbx%fft_pad_i
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:      do n=1, xbx%fft_pad_i
wrf/var/da/da_setup_structures/.svn/text-base/da_setup_runconstants.inc.svn-base:      do n=1, xbx%fft_pad_i
wrf/var/da/da_define_structures/da_define_structures.f90:      integer          :: fft_pad_i          ! Padding to get 2**p 3**q 5**r. (p>=1)
wrf/var/da/da_define_structures/da_define_structures.f90:      integer          :: fft_pad_j          ! Padding to get 2**p 3**q 5**r.
wrf/var/da/da_define_structures/da_define_structures.f90:      integer          :: pad_num            ! Splitted fft_pad_i on this processor.
wrf/var/da/da_define_structures/da_define_structures.f90:      integer          :: fft_ix             ! x-direction FFT number, in 2**p 3**q 5**r.
wrf/var/da/da_define_structures/da_define_structures.f90:      integer          :: fft_jy             ! y-direction FFT number, in 2**p 3**q 5**r.
wrf/var/da/da_define_structures/da_define_structures.f90:      integer, pointer :: fft_factors_x(:)   ! FFT factors in x direction.
wrf/var/da/da_define_structures/da_define_structures.f90:      integer, pointer :: fft_factors_y(:)   ! FFT factors in y direction.
wrf/var/da/da_define_structures/da_define_structures.f90:      real, pointer    :: fft_coeffs(:,:)    ! FFT Coefficients
wrf/var/da/da_define_structures/da_define_structures.f90:      real             :: fft_adjoint_factor ! FFT Adjoint factor
wrf/var/da/da_define_structures/da_define_structures.f90:      real, pointer       :: wsave(:)          ! Primes for FFT.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer          :: fft_pad_i          ! Padding to get 2**p 3**q 5**r. (p>=1)
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer          :: fft_pad_j          ! Padding to get 2**p 3**q 5**r.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer          :: pad_num            ! Splitted fft_pad_i on this processor.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer          :: fft_ix             ! x-direction FFT number, in 2**p 3**q 5**r.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer          :: fft_jy             ! y-direction FFT number, in 2**p 3**q 5**r.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer, pointer :: fft_factors_x(:)   ! FFT factors in x direction.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      integer, pointer :: fft_factors_y(:)   ! FFT factors in y direction.
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      real, pointer    :: fft_coeffs(:,:)    ! FFT Coefficients
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      real             :: fft_adjoint_factor ! FFT Adjoint factor
wrf/var/da/da_define_structures/.svn/text-base/da_define_structures.f90.svn-base:      real, pointer       :: wsave(:)          ! Primes for FFT.
wrf/var/da/da_physics/.svn/text-base/da_trh_to_td.inc.svn-base:   real    :: invdifftd, invtd
wrf/var/da/da_physics/.svn/text-base/da_trh_to_td.inc.svn-base:   !$OMP PRIVATE( ij, i, j, k, invdifftd, invtd )
wrf/var/da/da_physics/.svn/text-base/da_trh_to_td.inc.svn-base:            invdifftd = log (grid%xb%rh(i,j,k)/100.0) / l_over_rv
wrf/var/da/da_physics/.svn/text-base/da_trh_to_td.inc.svn-base:            invtd = 1/grid%xb%t(i,j,k)  - invdifftd
wrf/var/da/da_physics/da_trh_to_td.inc:   real    :: invdifftd, invtd
wrf/var/da/da_physics/da_trh_to_td.inc:   !$OMP PRIVATE( ij, i, j, k, invdifftd, invtd )
wrf/var/da/da_physics/da_trh_to_td.inc:            invdifftd = log (grid%xb%rh(i,j,k)/100.0) / l_over_rv
wrf/var/da/da_physics/da_trh_to_td.inc:            invtd = 1/grid%xb%t(i,j,k)  - invdifftd
wrf/var/da/da_dynamics/.svn/text-base/da_dynamics.f90.svn-base:   use da_ffts, only : da_solve_poissoneqn_fst, da_solve_poissoneqn_fst_adj
wrf/var/da/da_dynamics/da_dynamics.f90:   use da_ffts, only : da_solve_poissoneqn_fst, da_solve_poissoneqn_fst_adj
wrf/var/da/da_tools/da_tools_serial.f90:   use da_control, only : unit_used, unit_end, unit_start, stdout, num_fft_factors, pi
wrf/var/da/da_tools/da_tools_serial.f90:#include "da_find_fft_factors.inc"
wrf/var/da/da_tools/da_tools_serial.f90:#include "da_find_fft_trig_funcs.inc"
wrf/var/da/da_tools/da_find_fft_trig_funcs.inc:subroutine da_find_fft_trig_funcs(n, trig_functs)
wrf/var/da/da_tools/da_find_fft_trig_funcs.inc:   ! if (trace_use) call da_trace_entry("da_find_fft_trig_funcs")
wrf/var/da/da_tools/da_find_fft_trig_funcs.inc:   !if (trace_use) call da_trace_exit("da_find_fft_trig_funcs")
wrf/var/da/da_tools/da_find_fft_trig_funcs.inc:end subroutine da_find_fft_trig_funcs
wrf/var/da/da_tools/.svn/entries:da_find_fft_factors.inc
wrf/var/da/da_tools/.svn/entries:da_find_fft_trig_funcs.inc
wrf/var/da/da_tools/.svn/text-base/da_find_fft_trig_funcs.inc.svn-base:subroutine da_find_fft_trig_funcs(n, trig_functs)
wrf/var/da/da_tools/.svn/text-base/da_find_fft_trig_funcs.inc.svn-base:   ! if (trace_use) call da_trace_entry("da_find_fft_trig_funcs")
wrf/var/da/da_tools/.svn/text-base/da_find_fft_trig_funcs.inc.svn-base:   !if (trace_use) call da_trace_exit("da_find_fft_trig_funcs")
wrf/var/da/da_tools/.svn/text-base/da_find_fft_trig_funcs.inc.svn-base:end subroutine da_find_fft_trig_funcs
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:subroutine da_find_fft_factors(n, n_ok, fft_factors)
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   integer, intent(out) :: fft_factors(:)
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   integer :: jfax(num_fft_factors)
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   !if (trace_use) call da_trace_entry("da_find_fft_factors")
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   fft_factors(:) = 0
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   fft_factors(1)=nfax
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:      fft_factors(nfax+2-i)=jfax(i)
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:   !if (trace_use) call da_trace_exit("da_find_fft_factors")
wrf/var/da/da_tools/.svn/text-base/da_find_fft_factors.inc.svn-base:end subroutine da_find_fft_factors
wrf/var/da/da_tools/.svn/text-base/da_tools_serial.f90.svn-base:   use da_control, only : unit_used, unit_end, unit_start, stdout, num_fft_factors, pi
wrf/var/da/da_tools/.svn/text-base/da_tools_serial.f90.svn-base:#include "da_find_fft_factors.inc"
wrf/var/da/da_tools/.svn/text-base/da_tools_serial.f90.svn-base:#include "da_find_fft_trig_funcs.inc"
wrf/var/da/da_tools/da_find_fft_factors.inc:subroutine da_find_fft_factors(n, n_ok, fft_factors)
wrf/var/da/da_tools/da_find_fft_factors.inc:   integer, intent(out) :: fft_factors(:)
wrf/var/da/da_tools/da_find_fft_factors.inc:   integer :: jfax(num_fft_factors)
wrf/var/da/da_tools/da_find_fft_factors.inc:   !if (trace_use) call da_trace_entry("da_find_fft_factors")
wrf/var/da/da_tools/da_find_fft_factors.inc:   fft_factors(:) = 0
wrf/var/da/da_tools/da_find_fft_factors.inc:   fft_factors(1)=nfax
wrf/var/da/da_tools/da_find_fft_factors.inc:      fft_factors(nfax+2-i)=jfax(i)
wrf/var/da/da_tools/da_find_fft_factors.inc:   !if (trace_use) call da_trace_exit("da_find_fft_factors")
wrf/var/da/da_tools/da_find_fft_factors.inc:end subroutine da_find_fft_factors
wrf/var/da/da_main/da_solve.inc:   deallocate (xbx % fft_factors_x)
wrf/var/da/da_main/da_solve.inc:   deallocate (xbx % fft_factors_y)
wrf/var/da/da_main/da_solve.inc:   deallocate (xbx % fft_coeffs)
wrf/var/da/da_main/.svn/text-base/da_solve.inc.svn-base:   deallocate (xbx % fft_factors_x)
wrf/var/da/da_main/.svn/text-base/da_solve.inc.svn-base:   deallocate (xbx % fft_factors_y)
wrf/var/da/da_main/.svn/text-base/da_solve.inc.svn-base:   deallocate (xbx % fft_coeffs)
wrf/var/da/da_control/da_control.f90:   ! FFTs:
wrf/var/da/da_control/da_control.f90:   integer, parameter :: Forward_FFT     = -1 ! Grid to spectral
wrf/var/da/da_control/da_control.f90:   integer, parameter :: Inverse_FFT     =  1 ! Spectral to grid.
wrf/var/da/da_control/da_control.f90:   integer, parameter :: num_fft_factors = 10 ! Max number of factors.
wrf/var/da/da_control/.svn/text-base/da_control.f90.svn-base:   ! FFTs:
wrf/var/da/da_control/.svn/text-base/da_control.f90.svn-base:   integer, parameter :: Forward_FFT     = -1 ! Grid to spectral
wrf/var/da/da_control/.svn/text-base/da_control.f90.svn-base:   integer, parameter :: Inverse_FFT     =  1 ! Spectral to grid.
wrf/var/da/da_control/.svn/text-base/da_control.f90.svn-base:   integer, parameter :: num_fft_factors = 10 ! Max number of factors.
wrf/var/da/da_test/da_test.f90:   use da_ffts, only : da_solve_poissoneqn_fct
wrf/var/da/da_test/.svn/text-base/da_test.f90.svn-base:   use da_ffts, only : da_solve_poissoneqn_fct
wrf/var/da/.svn/entries:da_ffts
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   real, allocatable :: work_1d(:)    ! FFT work array for x dir.
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [2.0] Perform forward FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral 
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   !       Poisson equation, and then perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      do j=jds, xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:            grid%xp%v1x(i,j,k) = work_1d(ij)*xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fst_adj.inc:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:                                     xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   !       Poisson equation, and then perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      do j=grid%xp%jds, xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:            grid%xp%v1x(i,j,k) = work_1d(ij)*xbx%fft_adjoint_factor
wrf/var/da/da_ffts/da_solve_poissoneqn_fct_adj.inc:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/fft551.inc:!DECK FFT551
wrf/var/da/da_ffts/fft551.inc:!     SUBROUTINE 'FFT551' - MULTIPLE FAST COSINE TRANSFORM
wrf/var/da/da_ffts/fft551.inc:!     SEE FOR EXAMPLE PAUL SWARZTRAUBER, "SYMMETRIC FFT'S",
wrf/var/da/da_ffts/fft551.inc:! N.B.  FFT551 has an unusual definition of the FFTs,
wrf/var/da/da_ffts/fft551.inc:Subroutine FFT551 & ! in
wrf/var/da/da_ffts/fft551.inc:CHARACTER (LEN=*), PARAMETER :: RoutineName = "Var_FFT551"
wrf/var/da/da_ffts/fft551.inc:      END SUBROUTINE FFT551
wrf/var/da/da_ffts/fft661.inc:Subroutine FFT661  & ! in
wrf/var/da/da_ffts/fft661.inc:!     (Originally called FFT661, then Var_SinTrans)
wrf/var/da/da_ffts/fft661.inc:!     see for example paul swarztrauber, "symmetric fft's",
wrf/var/da/da_ffts/fft661.inc:End subroutine FFT661
wrf/var/da/da_ffts/module_ffts.f90:module module_ffts
wrf/var/da/da_ffts/module_ffts.f90:#include "fft551.inc"
wrf/var/da/da_ffts/module_ffts.f90:#include "fft661.inc"
wrf/var/da/da_ffts/module_ffts.f90:end module module_ffts
wrf/var/da/da_ffts/qpassm.inc:!C     SUBROUTINE 'QPASSM' - PERFORMS ONE PASS THROUGH DATA AS PART!C     OF MULTIPLE REAL FFT (FOURIER ANALYSIS) ROUTINE
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:         do i=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:                                     xbx%fft_factors_x, xbx%trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   !       Poisson equation, and then perform inverse FFT in y direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! [2.3] Perform forward FFT in j:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      do j=grid%xp%jds, xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   ! Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:                                     xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fct.inc:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/entries:svn+ssh://jhe@everest.msrc.sunysb.edu/ptmp/jhe/ccsm4_wrf_cam/models/atm/wrf/var/da/da_ffts
wrf/var/da/da_ffts/.svn/entries:fft551.inc
wrf/var/da/da_ffts/.svn/entries:da_ffts.f90
wrf/var/da/da_ffts/.svn/entries:fft661.inc
wrf/var/da/da_ffts/.svn/entries:module_ffts.f90
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   real, allocatable :: work_1d(:)    ! FFT work array for x dir.
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [2.0] Perform forward FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral 
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   !       Poisson equation, and then perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      do j=jds, xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:            grid%xp%v1x(i,j,k) = work_1d(ij)*xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst_adj.inc.svn-base:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:!DECK FFT551
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:!     SUBROUTINE 'FFT551' - MULTIPLE FAST COSINE TRANSFORM
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:!     SEE FOR EXAMPLE PAUL SWARZTRAUBER, "SYMMETRIC FFT'S",
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:! N.B.  FFT551 has an unusual definition of the FFTs,
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:Subroutine FFT551 & ! in
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:CHARACTER (LEN=*), PARAMETER :: RoutineName = "Var_FFT551"
wrf/var/da/da_ffts/.svn/text-base/fft551.inc.svn-base:      END SUBROUTINE FFT551
wrf/var/da/da_ffts/.svn/text-base/fft661.inc.svn-base:Subroutine FFT661  & ! in
wrf/var/da/da_ffts/.svn/text-base/fft661.inc.svn-base:!     (Originally called FFT661, then Var_SinTrans)
wrf/var/da/da_ffts/.svn/text-base/fft661.inc.svn-base:!     see for example paul swarztrauber, "symmetric fft's",
wrf/var/da/da_ffts/.svn/text-base/fft661.inc.svn-base:End subroutine FFT661
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:                                     xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   !       Poisson equation, and then perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      do j=grid%xp%jds, xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)/xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:                                   xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:            grid%xp%v1x(i,j,k) = work_1d(ij)*xbx%fft_adjoint_factor
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct_adj.inc.svn-base:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/module_ffts.f90.svn-base:module module_ffts
wrf/var/da/da_ffts/.svn/text-base/module_ffts.f90.svn-base:#include "fft551.inc"
wrf/var/da/da_ffts/.svn/text-base/module_ffts.f90.svn-base:#include "fft661.inc"
wrf/var/da/da_ffts/.svn/text-base/module_ffts.f90.svn-base:end module module_ffts
wrf/var/da/da_ffts/.svn/text-base/qpassm.inc.svn-base:!C     SUBROUTINE 'QPASSM' - PERFORMS ONE PASS THROUGH DATA AS PART!C     OF MULTIPLE REAL FFT (FOURIER ANALYSIS) ROUTINE
wrf/var/da/da_ffts/.svn/text-base/da_ffts.f90.svn-base:module da_ffts
wrf/var/da/da_ffts/.svn/text-base/da_ffts.f90.svn-base:      Inverse_FFT,  Forward_FFT, ids,jds, trace_use, &
wrf/var/da/da_ffts/.svn/text-base/da_ffts.f90.svn-base:   use module_ffts, only : fft661, fft551
wrf/var/da/da_ffts/.svn/text-base/da_ffts.f90.svn-base:end module da_ffts
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:         do i=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:                                     xbx%fft_factors_x, xbx%trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   !       Poisson equation, and then perform inverse FFT in y direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! [2.3] Perform forward FFT in j:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      call fft551(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      do j=grid%xp%jds, xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:                                   xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   ! Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:      call fft551(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:                                     xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fct.inc.svn-base:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [2.0] Perform forward FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         do i=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral 
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   !        Poisson equation, and then perform inverse FFT in y direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! [2.3] Perform forward FFT in j:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      do j=jds, xbx%fft_jy
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   ! Set up FFT parameters:
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:   idim = xbx%fft_ix
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/.svn/text-base/da_solve_poissoneqn_fst.inc.svn-base:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   real, allocatable :: work_1d(:)     ! FFT work array
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   n = max(xbx%fft_ix*(grid%xp%jtex-grid%xp%jtsx+1), &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:           xbx%fft_jy*(grid%xp%itey-grid%xp%itsy+1+xbx%pad_num))
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [2.0] Perform forward FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [2.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [2.3] Perform forward FFT:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         do i=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [3.0] For each k-level, perform forward FFT in y direction, apply spectral 
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   !        Poisson equation, and then perform inverse FFT in y direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [3.2] Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   jdim = xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! [2.3] Perform forward FFT in j:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      do j=1, xbx%fft_pad_j
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      call fft661(Forward_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      do j=jds, xbx%fft_jy
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:            work_1d(ij) = xbx%fft_coeffs(i,j)*work_1d(ij)
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         xbx % fft_factors_y, xbx % trig_functs_y, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! Perform inverse FFT in x direction:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   ! Set up FFT parameters:
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:   idim = xbx%fft_ix
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         do n=1, xbx%fft_pad_i
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:      call fft661(Inverse_FFT, vector_inc, vector_jump, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         xbx % fft_factors_x, xbx % trig_functs_x, &
wrf/var/da/da_ffts/da_solve_poissoneqn_fst.inc:         ij=ij+xbx%fft_pad_i
wrf/var/da/da_ffts/da_ffts.f90:module da_ffts
wrf/var/da/da_ffts/da_ffts.f90:      Inverse_FFT,  Forward_FFT, ids,jds, trace_use, &
wrf/var/da/da_ffts/da_ffts.f90:   use module_ffts, only : fft661, fft551
wrf/var/da/da_ffts/da_ffts.f90:end module da_ffts
wrf/var/build/da.make:   da_ffts.o \
wrf/var/build/da.make:   module_ffts.o \
wrf/var/build/da.make:	$(FC) -c $(FCFLAGS) $(PROMOTION) -I../../external/fftpack/fftpack5  $*.f
wrf/var/build/setup.csh:#if (-d ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}) then
wrf/var/build/setup.csh:#   setenv FFTPACK ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}
wrf/var/build/setup.csh:#if ($?FFTPACK) then
wrf/var/build/setup.csh:#   echo "FFTPACK         " $FFTPACK
wrf/var/build/gen_be.make:	module_ffts.o 
wrf/var/build/gen_be.make:GEN_BE_LIB = $(LIB_EXTERNAL) -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack
wrf/var/build/depend.txt:module_polarfft.o : module_polarfft.F module_comm_dm.o module_driver_constants.o module_dm.o module_domain.o module_state_description.o module_wrf_error.o module_model_constants.o 
wrf/var/build/depend.txt:solve_em.o : solve_em.F module_avgflx_em.o module_llxy.o module_first_rk_step_part2.o module_first_rk_step_part1.o module_polarfft.o module_diffusion_em.o module_solvedebug_em.o module_bc_em.o module_bc.o module_big_step_utilities_em.o module_em.o module_small_step_em.o module_model_constants.o module_utility.o module_comm_dm.o module_dm.o module_tiles.o module_machine.o module_driver_constants.o module_configure.o module_domain_type.o module_domain.o module_state_description.o 
wrf/var/build/depend.txt:da_dynamics.o : da_dynamics.f90 da_wz_base.inc da_uv_to_vorticity.inc da_w_adjustment_adj.inc da_w_adjustment_lin.inc da_uv_to_divergence_adj.inc da_uv_to_divergence.inc da_psichi_to_uv_adj.inc da_psichi_to_uv.inc da_hydrostaticp_to_rho_lin.inc da_hydrostaticp_to_rho_adj.inc da_balance_geoterm_lin.inc da_balance_geoterm_adj.inc da_balance_equation_lin.inc da_balance_equation_adj.inc da_balance_cycloterm_lin.inc da_balance_cycloterm_adj.inc da_balance_cycloterm.inc da_tools.o da_tracing.o da_ffts.o da_reporting.o da_define_structures.o module_comm_dm.o module_dm.o module_domain.o da_control.o 
wrf/var/build/depend.txt:da_ffts.o : da_ffts.f90 da_solve_poissoneqn_fst_adj.inc da_solve_poissoneqn_fst.inc da_solve_poissoneqn_fct_adj.inc da_solve_poissoneqn_fct.inc module_ffts.o module_comm_dm.o module_dm.o da_wrf_interfaces.o da_tracing.o da_par_util.o da_define_structures.o da_control.o module_domain.o 
wrf/var/build/depend.txt:da_test.o : da_test.f90 da_get_y_lhs_value.inc da_check_vtoy_adjoint.inc da_set_tst_trnsf_fld.inc da_check_psfc.inc da_check_sfc_assi.inc da_setup_testfield.inc da_check_xtoy_adjoint_buoy.inc da_check_xtoy_adjoint_profiler.inc da_check_xtoy_adjoint_ssmt2.inc da_check_xtoy_adjoint_ssmt1.inc da_check_xtoy_adjoint_qscat.inc da_check_xtoy_adjoint_pseudo.inc da_check.inc da_transform_xtovp.inc da_check_xtoy_adjoint_rad.inc da_check_xtoy_adjoint_synop.inc da_check_xtoy_adjoint_tamdar_sfc.inc da_check_xtoy_adjoint_tamdar.inc da_check_xtoy_adjoint_mtgirs.inc da_check_xtoy_adjoint_sonde_sfc.inc da_check_xtoy_adjoint_sound.inc da_check_xtoy_adjoint_bogus.inc da_check_xtoy_adjoint_radar.inc da_check_xtoy_adjoint_ships.inc da_check_xtoy_adjoint_polaramv.inc da_check_xtoy_adjoint_geoamv.inc da_check_xtoy_adjoint_satem.inc da_check_xtoy_adjoint_ssmi_tb.inc da_check_xtoy_adjoint_ssmi_rv.inc da_check_xtoy_adjoint_pilot.inc da_check_xtoy_adjoint_metar.inc da_check_xtoy_adjoint_gpsref.inc da_check_xtoy_adjoint_gpspw.inc da_check_xtoy_adjoint_airep.inc da_check_xtoy_adjoint.inc da_check_xtovptox_errors.inc da_check_vvtovp_adjoint.inc da_check_vp_errors.inc da_check_vptox_adjoint.inc da_check_vtox_adjoint.inc da_check_cvtovv_adjoint.inc da_check_balance.inc da_vtox_transforms.o da_wrfvar_io.o da_wrf_interfaces.o da_transfer_model.o da_tracing.o da_tools_serial.o da_statistics.o da_ssmi.o da_spectral.o da_reporting.o da_physics.o da_par_util1.o da_par_util.o da_obs.o da_minimisation.o da_ffts.o da_dynamics.o da_define_structures.o module_state_description.o module_domain.o da_control.o module_comm_dm.o module_dm.o module_configure.o 
wrf/var/build/depend.txt:da_tools_serial.o : da_tools_serial.f90 da_find_fft_trig_funcs.inc da_find_fft_factors.inc da_advance_time.inc da_advance_cymdh.inc da_array_print.inc da_change_date.inc da_free_unit.inc da_get_unit.inc da_reporting.o da_control.o 
wrf/var/build/depend.txt:gen_be_stage0_wrf.o : gen_be_stage0_wrf.f90 module_ffts.o da_tools_serial.o da_gen_be.o da_control.o 
wrf/var/build/depend.txt:module_ffts.o : module_ffts.f90 qpassm.inc fft661.inc fft551.inc 
wrf/var/build/depend.txt:module_kma_wave2grid.o : module_kma_wave2grid.f90 ZNME2PXX.inc WEIHT2.inc WAVMAG.inc W2GUV.inc W2GPXY.inc W2GCONV.inc W2G.inc SETARY.inc RFTI1M.inc RFTF9M.inc RFTF3M.inc RFTF2M.inc RFTF1M.inc RFTB9M.inc RFTB2M.inc RFTB1M.inc RFFTIM.inc RFFTFM.inc RFFTBM.inc RESET.inc REOWV.inc REOWAV.inc RADFGM.inc RADF5M.inc RADF4M.inc RADF3M.inc RADF2M.inc RADBGM.inc RADB5M.inc RADB4M.inc RADB3M.inc RADB2M.inc MNMX.inc LT2GAU.inc LGNW2G.inc LGNUV.inc LGNDR1.inc IDCMP.inc GOUT.inc GAUSS.inc G2WPP.inc G2WDZ.inc G2W.inc FFT991.inc CUT.inc BSSLZ1.inc 
wrf/var/build/.svn/text-base/decode_l2_airs.make.svn-base:                  -I$(FFTPACK) -I$(HDF4)/include $*.f90
wrf/var/build/.svn/text-base/gen_be.make.svn-base:	module_ffts.o 
wrf/var/build/.svn/text-base/gen_be.make.svn-base:GEN_BE_LIB = $(LIB_EXTERNAL) -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack
wrf/var/build/.svn/text-base/setup.csh.svn-base:#if (-d ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}) then
wrf/var/build/.svn/text-base/setup.csh.svn-base:#   setenv FFTPACK ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}
wrf/var/build/.svn/text-base/setup.csh.svn-base:#if ($?FFTPACK) then
wrf/var/build/.svn/text-base/setup.csh.svn-base:#   echo "FFTPACK         " $FFTPACK
wrf/var/build/.svn/text-base/da.make.svn-base:   da_ffts.o \
wrf/var/build/.svn/text-base/da.make.svn-base:   module_ffts.o \
wrf/var/build/.svn/text-base/da.make.svn-base:	$(FC) -c $(FCFLAGS) $(PROMOTION) -I../../external/fftpack/fftpack5  $*.f
wrf/var/build/.svn/text-base/setup.ksh.svn-base:#if test -d ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}; then
wrf/var/build/.svn/text-base/setup.ksh.svn-base:#   export FFTPACK=${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}
wrf/var/build/.svn/text-base/setup.ksh.svn-base:#echo "FFTPACK         " $FFTPACK
wrf/var/build/.svn/text-base/depend.txt.svn-base:module_polarfft.o : module_polarfft.F module_comm_dm.o module_driver_constants.o module_dm.o module_domain.o module_state_description.o module_wrf_error.o module_model_constants.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:solve_em.o : solve_em.F module_avgflx_em.o module_llxy.o module_first_rk_step_part2.o module_first_rk_step_part1.o module_polarfft.o module_diffusion_em.o module_solvedebug_em.o module_bc_em.o module_bc.o module_big_step_utilities_em.o module_em.o module_small_step_em.o module_model_constants.o module_utility.o module_comm_dm.o module_dm.o module_tiles.o module_machine.o module_driver_constants.o module_configure.o module_domain_type.o module_domain.o module_state_description.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:da_dynamics.o : da_dynamics.f90 da_wz_base.inc da_uv_to_vorticity.inc da_w_adjustment_adj.inc da_w_adjustment_lin.inc da_uv_to_divergence_adj.inc da_uv_to_divergence.inc da_psichi_to_uv_adj.inc da_psichi_to_uv.inc da_hydrostaticp_to_rho_lin.inc da_hydrostaticp_to_rho_adj.inc da_balance_geoterm_lin.inc da_balance_geoterm_adj.inc da_balance_equation_lin.inc da_balance_equation_adj.inc da_balance_cycloterm_lin.inc da_balance_cycloterm_adj.inc da_balance_cycloterm.inc da_tools.o da_tracing.o da_ffts.o da_reporting.o da_define_structures.o module_comm_dm.o module_dm.o module_domain.o da_control.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:da_ffts.o : da_ffts.f90 da_solve_poissoneqn_fst_adj.inc da_solve_poissoneqn_fst.inc da_solve_poissoneqn_fct_adj.inc da_solve_poissoneqn_fct.inc module_ffts.o module_comm_dm.o module_dm.o da_wrf_interfaces.o da_tracing.o da_par_util.o da_define_structures.o da_control.o module_domain.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:da_test.o : da_test.f90 da_get_y_lhs_value.inc da_check_vtoy_adjoint.inc da_set_tst_trnsf_fld.inc da_check_psfc.inc da_check_sfc_assi.inc da_setup_testfield.inc da_check_xtoy_adjoint_buoy.inc da_check_xtoy_adjoint_profiler.inc da_check_xtoy_adjoint_ssmt2.inc da_check_xtoy_adjoint_ssmt1.inc da_check_xtoy_adjoint_qscat.inc da_check_xtoy_adjoint_pseudo.inc da_check.inc da_transform_xtovp.inc da_check_xtoy_adjoint_rad.inc da_check_xtoy_adjoint_synop.inc da_check_xtoy_adjoint_tamdar_sfc.inc da_check_xtoy_adjoint_tamdar.inc da_check_xtoy_adjoint_mtgirs.inc da_check_xtoy_adjoint_sonde_sfc.inc da_check_xtoy_adjoint_sound.inc da_check_xtoy_adjoint_bogus.inc da_check_xtoy_adjoint_radar.inc da_check_xtoy_adjoint_ships.inc da_check_xtoy_adjoint_polaramv.inc da_check_xtoy_adjoint_geoamv.inc da_check_xtoy_adjoint_satem.inc da_check_xtoy_adjoint_ssmi_tb.inc da_check_xtoy_adjoint_ssmi_rv.inc da_check_xtoy_adjoint_pilot.inc da_check_xtoy_adjoint_metar.inc da_check_xtoy_adjoint_gpsref.inc da_check_xtoy_adjoint_gpspw.inc da_check_xtoy_adjoint_airep.inc da_check_xtoy_adjoint.inc da_check_xtovptox_errors.inc da_check_vvtovp_adjoint.inc da_check_vp_errors.inc da_check_vptox_adjoint.inc da_check_vtox_adjoint.inc da_check_cvtovv_adjoint.inc da_check_balance.inc da_vtox_transforms.o da_wrfvar_io.o da_wrf_interfaces.o da_transfer_model.o da_tracing.o da_tools_serial.o da_statistics.o da_ssmi.o da_spectral.o da_reporting.o da_physics.o da_par_util1.o da_par_util.o da_obs.o da_minimisation.o da_ffts.o da_dynamics.o da_define_structures.o module_state_description.o module_domain.o da_control.o module_comm_dm.o module_dm.o module_configure.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:da_tools_serial.o : da_tools_serial.f90 da_find_fft_trig_funcs.inc da_find_fft_factors.inc da_advance_time.inc da_advance_cymdh.inc da_array_print.inc da_change_date.inc da_free_unit.inc da_get_unit.inc da_reporting.o da_control.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:gen_be_stage0_wrf.o : gen_be_stage0_wrf.f90 module_ffts.o da_tools_serial.o da_gen_be.o da_control.o 
wrf/var/build/.svn/text-base/depend.txt.svn-base:module_ffts.o : module_ffts.f90 qpassm.inc fft661.inc fft551.inc 
wrf/var/build/.svn/text-base/depend.txt.svn-base:module_kma_wave2grid.o : module_kma_wave2grid.f90 ZNME2PXX.inc WEIHT2.inc WAVMAG.inc W2GUV.inc W2GPXY.inc W2GCONV.inc W2G.inc SETARY.inc RFTI1M.inc RFTF9M.inc RFTF3M.inc RFTF2M.inc RFTF1M.inc RFTB9M.inc RFTB2M.inc RFTB1M.inc RFFTIM.inc RFFTFM.inc RFFTBM.inc RESET.inc REOWV.inc REOWAV.inc RADFGM.inc RADF5M.inc RADF4M.inc RADF3M.inc RADF2M.inc RADBGM.inc RADB5M.inc RADB4M.inc RADB3M.inc RADB2M.inc MNMX.inc LT2GAU.inc LGNW2G.inc LGNUV.inc LGNDR1.inc IDCMP.inc GOUT.inc GAUSS.inc G2WPP.inc G2WDZ.inc G2W.inc FFT991.inc CUT.inc BSSLZ1.inc 
wrf/var/build/decode_l2_airs.make:                  -I$(FFTPACK) -I$(HDF4)/include $*.f90
wrf/var/build/setup.ksh:#if test -d ${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}; then
wrf/var/build/setup.ksh:#   export FFTPACK=${EXT_DIR}/fftpack/fftpack5/${COMPILER}_${PROCESSOR}
wrf/var/build/setup.ksh:#echo "FFTPACK         " $FFTPACK
Binary file wrf/var/convertor/convertor.tar matches
wrf/var/convertor/Makefile:		kma_wave2grid/FFT991.inc \
wrf/var/convertor/Makefile:		kma_wave2grid/RFFTBM.inc \
wrf/var/convertor/Makefile:		kma_wave2grid/RFFTFM.inc \
wrf/var/convertor/Makefile:		kma_wave2grid/RFFTIM.inc \
wrf/var/convertor/kma_wave2grid/RFFTBM.inc:      SUBROUTINE RFFTBM (N,INC,JUMP,LOT, R, WA,IFAC, WSAVE)
wrf/var/convertor/kma_wave2grid/RFFTBM.inc:cch? 500 FORMAT(1H0,' RFFTBM: INC,JUMP,N,LOT =',4I6,'  TOTAL CPU =',F13.6
wrf/var/convertor/kma_wave2grid/RFFTBM.inc:      END SUBROUTINE RFFTBM
wrf/var/convertor/kma_wave2grid/module_kma_wave2grid.f90:#include "FFT991.inc"
wrf/var/convertor/kma_wave2grid/module_kma_wave2grid.f90:#include "RFFTBM.inc"
wrf/var/convertor/kma_wave2grid/module_kma_wave2grid.f90:#include "RFFTFM.inc"
wrf/var/convertor/kma_wave2grid/module_kma_wave2grid.f90:#include "RFFTIM.inc"
wrf/var/convertor/kma_wave2grid/W2G.inc:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2G.inc:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/RFFTIM.inc:      SUBROUTINE RFFTIM (N, WA,IFAC)
wrf/var/convertor/kma_wave2grid/RFFTIM.inc:      END SUBROUTINE RFFTIM
wrf/var/convertor/kma_wave2grid/W2GPXY.inc:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2GPXY.inc:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2GCONV.inc:C  +++ SET UP FFT COEFFICIENTS +++
wrf/var/convertor/kma_wave2grid/W2GCONV.inc:      CALL RFFTIM(IMAX,TRIGS,IFAX)
wrf/var/convertor/kma_wave2grid/W2GUV.inc:      CALL FFT991(GU,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2GUV.inc:      CALL FFT991(GV,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2GUV.inc:C     CALL FFT991(GU  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/W2GUV.inc:C     CALL FFT991(GV  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/RFFTFM.inc:      SUBROUTINE RFFTFM (N,INC,JUMP,LOT, R, WA,IFAC, WSAVE)
wrf/var/convertor/kma_wave2grid/RFFTFM.inc:cch? 500 FORMAT(1H0,' RFFTBM: INC,JUMP,N,LOT =',4I6,'  TOTAL CPU =',F13.6
wrf/var/convertor/kma_wave2grid/RFFTFM.inc:      END SUBROUTINE RFFTFM
wrf/var/convertor/kma_wave2grid/G2WDZ.inc:      CALL FFT991(GU,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/G2WDZ.inc:      CALL FFT991(GV,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/G2WDZ.inc:C     CALL FFT991(GU  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/G2WDZ.inc:C     CALL FFT991(GV  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/entries:FFT991.inc
wrf/var/convertor/kma_wave2grid/.svn/entries:RFFTIM.inc
wrf/var/convertor/kma_wave2grid/.svn/entries:RFFTBM.inc
wrf/var/convertor/kma_wave2grid/.svn/entries:RFFTFM.inc
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2W.inc.svn-base:      print*,' in G2W calling FFT991 with LOT= ',LOT
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2W.inc.svn-base:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2W.inc.svn-base:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      SUBROUTINE FFT991(A,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:C      SUBROUTINE FFT991(A,WORKX,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:C      SUBROUTINE FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      PARAMETER(NFFT=256)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      DIMENSION A(N,LOT),WORK(JUMP,NFFT),TRIGS(N),IFAX(*)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      DIMENSION WORK2(N*JUMP*NFFT)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      DO L0=1,LOT,NFFT
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      LOTL=MIN(NFFT,LOT-L0+1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:          CALL RFFTFM (N,INC,JUMP,LOTL, WORK, TRIGS,IFAX, WORK2 )
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      DO L0=1,LOT,NFFT
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      LOTL=MIN(NFFT,LOT-L0+1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:          CALL RFFTBM (N,INC,JUMP,LOTL, WORK, TRIGS,IFAX, WORK2)
wrf/var/convertor/kma_wave2grid/.svn/text-base/FFT991.inc.svn-base:      END SUBROUTINE FFT991
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTIM.inc.svn-base:      SUBROUTINE RFFTIM (N, WA,IFAC)
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTIM.inc.svn-base:      END SUBROUTINE RFFTIM
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2WDZ.inc.svn-base:      CALL FFT991(GU,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2WDZ.inc.svn-base:      CALL FFT991(GV,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2WDZ.inc.svn-base:C     CALL FFT991(GU  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/G2WDZ.inc.svn-base:C     CALL FFT991(GV  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GPXY.inc.svn-base:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GPXY.inc.svn-base:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2G.inc.svn-base:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2G.inc.svn-base:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GCONV.inc.svn-base:C  +++ SET UP FFT COEFFICIENTS +++
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GCONV.inc.svn-base:      CALL RFFTIM(IMAX,TRIGS,IFAX)
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTBM.inc.svn-base:      SUBROUTINE RFFTBM (N,INC,JUMP,LOT, R, WA,IFAC, WSAVE)
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTBM.inc.svn-base:cch? 500 FORMAT(1H0,' RFFTBM: INC,JUMP,N,LOT =',4I6,'  TOTAL CPU =',F13.6
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTBM.inc.svn-base:      END SUBROUTINE RFFTBM
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTFM.inc.svn-base:      SUBROUTINE RFFTFM (N,INC,JUMP,LOT, R, WA,IFAC, WSAVE)
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTFM.inc.svn-base:cch? 500 FORMAT(1H0,' RFFTBM: INC,JUMP,N,LOT =',4I6,'  TOTAL CPU =',F13.6
wrf/var/convertor/kma_wave2grid/.svn/text-base/RFFTFM.inc.svn-base:      END SUBROUTINE RFFTFM
wrf/var/convertor/kma_wave2grid/.svn/text-base/module_kma_wave2grid.f90.svn-base:#include "FFT991.inc"
wrf/var/convertor/kma_wave2grid/.svn/text-base/module_kma_wave2grid.f90.svn-base:#include "RFFTBM.inc"
wrf/var/convertor/kma_wave2grid/.svn/text-base/module_kma_wave2grid.f90.svn-base:#include "RFFTFM.inc"
wrf/var/convertor/kma_wave2grid/.svn/text-base/module_kma_wave2grid.f90.svn-base:#include "RFFTIM.inc"
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GUV.inc.svn-base:      CALL FFT991(GU,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GUV.inc.svn-base:      CALL FFT991(GV,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GUV.inc.svn-base:C     CALL FFT991(GU  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/.svn/text-base/W2GUV.inc.svn-base:C     CALL FFT991(GV  ,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,1)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      SUBROUTINE FFT991(A,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/FFT991.inc:C      SUBROUTINE FFT991(A,WORKX,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/FFT991.inc:C      SUBROUTINE FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      PARAMETER(NFFT=256)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      DIMENSION A(N,LOT),WORK(JUMP,NFFT),TRIGS(N),IFAX(*)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      DIMENSION WORK2(N*JUMP*NFFT)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      DO L0=1,LOT,NFFT
wrf/var/convertor/kma_wave2grid/FFT991.inc:      LOTL=MIN(NFFT,LOT-L0+1)
wrf/var/convertor/kma_wave2grid/FFT991.inc:          CALL RFFTFM (N,INC,JUMP,LOTL, WORK, TRIGS,IFAX, WORK2 )
wrf/var/convertor/kma_wave2grid/FFT991.inc:      DO L0=1,LOT,NFFT
wrf/var/convertor/kma_wave2grid/FFT991.inc:      LOTL=MIN(NFFT,LOT-L0+1)
wrf/var/convertor/kma_wave2grid/FFT991.inc:          CALL RFFTBM (N,INC,JUMP,LOTL, WORK, TRIGS,IFAX, WORK2)
wrf/var/convertor/kma_wave2grid/FFT991.inc:      END SUBROUTINE FFT991
wrf/var/convertor/kma_wave2grid/G2W.inc:      print*,' in G2W calling FFT991 with LOT= ',LOT
wrf/var/convertor/kma_wave2grid/G2W.inc:      CALL FFT991(GDAT,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
wrf/var/convertor/kma_wave2grid/G2W.inc:C     CALL FFT991(GDAT,GWRK,TRIGS,IFAX,1,IMX,IMAX,LOT,-1)                       
Binary file wrf/var/convertor/.svn/text-base/convertor.tar.svn-base matches
wrf/var/convertor/.svn/text-base/Makefile.svn-base:		kma_wave2grid/FFT991.inc \
wrf/var/convertor/.svn/text-base/Makefile.svn-base:		kma_wave2grid/RFFTBM.inc \
wrf/var/convertor/.svn/text-base/Makefile.svn-base:		kma_wave2grid/RFFTFM.inc \
wrf/var/convertor/.svn/text-base/Makefile.svn-base:		kma_wave2grid/RFFTIM.inc \
wrf/dyn_em/Makefile:	module_polarfft.o		\
wrf/dyn_em/Makefile:module_polarfft.o: ../share/module_model_constants.o \
wrf/dyn_em/module_initialize_real.F:         IF ( ( config_flags%polar ) .AND. ( grid%fft_filter_lat .GT. 90 ) ) THEN
wrf/dyn_em/module_initialize_real.F:            CALL wrf_error_fatal ( 'If the polar boundary condition is used, then fft_filter_lat must be set in namelist.input' )
wrf/dyn_em/module_initialize_real.F:                               grid%fft_filter_lat , &
wrf/dyn_em/module_initialize_real.F:                               grid%fft_filter_lat , &
wrf/dyn_em/module_initialize_real.F:   SUBROUTINE filter_topo ( ht_in , xlat , msftx , fft_filter_lat , &
wrf/dyn_em/module_initialize_real.F:      REAL , INTENT(IN) :: fft_filter_lat
wrf/dyn_em/module_initialize_real.F:            IF ( ABS(xlat(its,j)) .LT. fft_filter_lat ) THEN
wrf/dyn_em/module_initialize_real.F:            IF ( xlat(its,j) .GE. fft_filter_lat ) THEN
wrf/dyn_em/module_polarfft.F:MODULE module_polarfft
wrf/dyn_em/module_polarfft.F:                 ,fft_filter_lat, dclat         &
wrf/dyn_em/module_polarfft.F:   REAL  , INTENT(IN) :: fft_filter_lat
wrf/dyn_em/module_polarfft.F:! The idea is that this parallel transpose fft routine can be
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, dclat,                 &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, dclat,             &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, dclat,             &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, dclat,             &
wrf/dyn_em/module_polarfft.F:                                fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:                           fft_filter_lat, 0.,                &
wrf/dyn_em/module_polarfft.F:SUBROUTINE polar_filter_3d( f, xlat, piggyback, fft_filter_lat, dvlat, &
wrf/dyn_em/module_polarfft.F:  REAL   ,       INTENT(IN   ) :: fft_filter_lat
wrf/dyn_em/module_polarfft.F:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/dyn_em/module_polarfft.F:     WRITE ( wrf_err_message , * ) 'module_polarfft: 3d: (its /= ids) or (ite /= ide)',its,ids,ite,ide
wrf/dyn_em/module_polarfft.F:     IF (abs(lat) >= fft_filter_lat) THEN
wrf/dyn_em/module_polarfft.F:        CALL polar_filter_fft_2d_ncar(nx,ny,sheet,lat,fft_filter_lat,piggyback)
wrf/dyn_em/module_polarfft.F:SUBROUTINE polar_filter_fft_2d_ncar(nx,ny,fin,lat,filter_latitude,piggyback)
wrf/dyn_em/module_polarfft.F:!  we are following the naming convention of the fftpack5 routines
wrf/dyn_em/module_polarfft.F:  call rfftmi(n,wsave,lensav,ier)
wrf/dyn_em/module_polarfft.F:    write(0,*) ' error in rfftmi ',ier
wrf/dyn_em/module_polarfft.F:  call rfftmf( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/dyn_em/module_polarfft.F:    write(0,*) ' error in rfftmf ',ier
wrf/dyn_em/module_polarfft.F:  call rfftmb( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/dyn_em/module_polarfft.F:    write(0,*) ' error in rfftmb ',ier
wrf/dyn_em/module_polarfft.F:END SUBROUTINE polar_filter_fft_2d_ncar
wrf/dyn_em/module_polarfft.F:END MODULE module_polarfft
wrf/dyn_em/module_big_step_utilities_em.F:     msfxffl = 1.0/COS(config_flags%fft_filter_lat*degrad) 
wrf/dyn_em/solve_em.F:   USE module_polarfft
wrf/dyn_em/solve_em.F:                      1.0/COS(config_flags%fft_filter_lat*degrad) )
wrf/dyn_em/solve_em.F:               ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/solve_em.F:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/entries:module_polarfft.F
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:MODULE module_polarfft
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                 ,fft_filter_lat, dclat         &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:   REAL  , INTENT(IN) :: fft_filter_lat
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:! The idea is that this parallel transpose fft routine can be
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, dclat,                 &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, dclat,             &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                 fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, dclat,             &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, dclat,             &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                                fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:                           fft_filter_lat, 0.,                &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:SUBROUTINE polar_filter_3d( f, xlat, piggyback, fft_filter_lat, dvlat, &
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:  REAL   ,       INTENT(IN   ) :: fft_filter_lat
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:     WRITE ( wrf_err_message , * ) 'module_polarfft: 3d: (its /= ids) or (ite /= ide)',its,ids,ite,ide
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:     IF (abs(lat) >= fft_filter_lat) THEN
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:        CALL polar_filter_fft_2d_ncar(nx,ny,sheet,lat,fft_filter_lat,piggyback)
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:SUBROUTINE polar_filter_fft_2d_ncar(nx,ny,fin,lat,filter_latitude,piggyback)
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:!  we are following the naming convention of the fftpack5 routines
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:  call rfftmi(n,wsave,lensav,ier)
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:    write(0,*) ' error in rfftmi ',ier
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:  call rfftmf( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:    write(0,*) ' error in rfftmf ',ier
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:  call rfftmb( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:    write(0,*) ' error in rfftmb ',ier
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:END SUBROUTINE polar_filter_fft_2d_ncar
wrf/dyn_em/.svn/text-base/module_polarfft.F.svn-base:END MODULE module_polarfft
wrf/dyn_em/.svn/text-base/module_big_step_utilities_em.F.svn-base:     msfxffl = 1.0/COS(config_flags%fft_filter_lat*degrad) 
wrf/dyn_em/.svn/text-base/Makefile.svn-base:	module_polarfft.o		\
wrf/dyn_em/.svn/text-base/Makefile.svn-base:module_polarfft.o: ../share/module_model_constants.o \
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:         IF ( ( config_flags%polar ) .AND. ( grid%fft_filter_lat .GT. 90 ) ) THEN
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:            CALL wrf_error_fatal ( 'If the polar boundary condition is used, then fft_filter_lat must be set in namelist.input' )
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:                               grid%fft_filter_lat , &
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:                               grid%fft_filter_lat , &
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:   SUBROUTINE filter_topo ( ht_in , xlat , msftx , fft_filter_lat , &
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:      REAL , INTENT(IN) :: fft_filter_lat
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:            IF ( ABS(xlat(its,j)) .LT. fft_filter_lat ) THEN
wrf/dyn_em/.svn/text-base/module_initialize_real.F.svn-base:            IF ( xlat(its,j) .GE. fft_filter_lat ) THEN
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:   USE module_polarfft
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                      1.0/COS(config_flags%fft_filter_lat*degrad) )
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:               ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                    ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/dyn_em/.svn/text-base/solve_em.F.svn-base:                  ,fft_filter_lat = config_flags%fft_filter_lat                &
wrf/phys/module_ra_cam_support.F:!         CSFFT = CSFF296*(CSFF260/CSFF296)**TFAC
wrf/phys/module_fdda_spnudging.F:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/phys/module_fdda_spnudging.F:        CALL spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,sheet)
wrf/phys/module_fdda_spnudging.F:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/phys/module_fdda_spnudging.F:        CALL spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,sheet)
wrf/phys/module_fdda_spnudging.F:SUBROUTINE spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,fin)
wrf/phys/module_fdda_spnudging.F:!  we are following the naming convention of the fftpack5 routines
wrf/phys/module_fdda_spnudging.F:  call rfftmi(n,wsave,lensav,ier)
wrf/phys/module_fdda_spnudging.F:    write(0,*) ' error in rfftmi ',ier
wrf/phys/module_fdda_spnudging.F:  call rfftmf( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/phys/module_fdda_spnudging.F:    write(0,*) ' error in rfftmf ',ier
wrf/phys/module_fdda_spnudging.F:  call rfftmb( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/phys/module_fdda_spnudging.F:    write(0,*) ' error in rfftmb ',ier
wrf/phys/module_fdda_spnudging.F:END SUBROUTINE spectral_nudging_filter_fft_2d_ncar
wrf/phys/.svn/text-base/module_ra_cam_support.F.svn-base:!         CSFFT = CSFF296*(CSFF260/CSFF296)**TFAC
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:        CALL spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,sheet)
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:  ! There may be other ways of doing FFTs, but we haven't learned them yet...
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:        CALL spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,sheet)
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:SUBROUTINE spectral_nudging_filter_fft_2d_ncar(nx,ny,nwave,fin)
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:!  we are following the naming convention of the fftpack5 routines
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:  call rfftmi(n,wsave,lensav,ier)
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:    write(0,*) ' error in rfftmi ',ier
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:  call rfftmf( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:    write(0,*) ' error in rfftmf ',ier
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:  call rfftmb( lot, jump, n, inc, fin, lenr, wsave, lensav, work, lenwrk, ier )
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:    write(0,*) ' error in rfftmb ',ier
wrf/phys/.svn/text-base/module_fdda_spnudging.F.svn-base:END SUBROUTINE spectral_nudging_filter_fft_2d_ncar
wrf/configure.wrf.bk.cloud.v32.doubleprecision:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.cloud.v32.doubleprecision:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.cloud.v32.doubleprecision:fftpack :
wrf/configure.wrf.bk.cloud.v32.doubleprecision:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/configure.wrf.bk.cloud.v32:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.cloud.v32:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.cloud.v32:fftpack :
wrf/configure.wrf.bk.cloud.v32:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_new.defaults:                     ../external/fftpack/fftpack5/libfftpack.a \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF CONFIGURE_WRFIO_PNF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F $(ESMF_TARGET) fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 CONFIGURE_WRFIO_PHDF5 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int wrfio_mcel gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:			-L/home/michalak/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a CONFIGURE_WRFIO_NF CONFIGURE_WRFIO_PNF wrfio_int module_dm.F esmf_time gen_comms.c fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  esmf_time fftpack
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L../external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  wrfio_nf wrfio_int module_dm.F wrfio_grib_share wrfio_grib1  esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd ../external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L../external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  wrfio_nf ../external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1  esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd ../external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int  esmf_time  module_dm.F fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes wrfio_nf wrfio_grib_share wrfio_grib1  wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib1 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/archive_configure.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/archive_configure.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/archive_configure.defaults:fftpack :
wrf/arch/archive_configure.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  esmf_time fftpack
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int  esmf_time  module_dm.F fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib1 wrfio_grib_share $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/configure_old.defaults:                        $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/configure_old.defaults:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/configure_old.defaults:fftpack :
wrf/arch/configure_old.defaults:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/postamble_new:#NOWIN                      $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/postamble_new:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack CONFIGURE_ATMPOM
wrf/arch/postamble_new:fftpack :
wrf/arch/postamble_new:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_new.defaults.svn-base:                     ../external/fftpack/fftpack5/libfftpack.a \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF CONFIGURE_WRFIO_PNF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F $(ESMF_TARGET) fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 CONFIGURE_WRFIO_PHDF5 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int wrfio_mcel gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:			-L/home/michalak/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a CONFIGURE_WRFIO_NF CONFIGURE_WRFIO_PNF wrfio_int module_dm.F esmf_time gen_comms.c fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L../external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  wrfio_nf wrfio_int module_dm.F wrfio_grib_share wrfio_grib1  esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd ../external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L../external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  wrfio_nf ../external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1  esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd ../external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int  esmf_time  module_dm.F fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                    -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes wrfio_nf wrfio_grib_share wrfio_grib1  wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib1 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals :  CONFIGURE_WRFIO_NF $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF  wrfio_int module_dm.F wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 esmf_time fftpack
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/archive_configure.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2  esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int  esmf_time  module_dm.F fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib1 wrfio_grib_share $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 wrfio_int module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:                        $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:externals : wrf_ioapi_includes CONFIGURE_WRFIO_NF wrfio_grib_share wrfio_grib1 CONFIGURE_WRFIO_GRIB2 $(WRF_SRC_ROOT_DIR)/external/RSL_LITE/librsl_lite.a wrfio_int gen_comms.c module_dm.F esmf_time fftpack
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:fftpack :
wrf/arch/.svn/text-base/configure_old.defaults.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/arch/.svn/text-base/postamble_new.svn-base:#NOWIN                      $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5/libfftpack.a \
wrf/arch/.svn/text-base/postamble_new.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack CONFIGURE_ATMPOM
wrf/arch/.svn/text-base/postamble_new.svn-base:fftpack :
wrf/arch/.svn/text-base/postamble_new.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/configure.wrf.bk.pingo.v32:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.pingo.v32:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.pingo.v32:fftpack :
wrf/configure.wrf.bk.pingo.v32:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/configure.wrf.bk.v32:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.v32:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.v32:fftpack :
wrf/configure.wrf.bk.v32:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
Binary file wrf/run/CAM_ABS_DATA matches
wrf/run/README.namelist: fft_filter_lat                      = 45.      ; the latitude above which the polar filter is turned on
Binary file wrf/run/.svn/text-base/RRTMG_LW_DATA.svn-base matches
wrf/run/.svn/text-base/README.namelist.svn-base: fft_filter_lat                      = 45.      ; the latitude above which the polar filter is turned on
Binary file wrf/run/.svn/text-base/CAM_ABS_DATA.svn-base matches
Binary file wrf/run/RRTMG_LW_DATA matches
wrf/configure.wrf.bk:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk:fftpack :
wrf/configure.wrf.bk:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/configure.wrf.bk.everest.v32:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.everest.v32:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.everest.v32:fftpack :
wrf/configure.wrf.bk.everest.v32:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/.svn/text-base/configure.wrf.bk.pingo.v32.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/.svn/text-base/configure.wrf.bk.pingo.v32.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/.svn/text-base/configure.wrf.bk.pingo.v32.svn-base:fftpack :
wrf/.svn/text-base/configure.wrf.bk.pingo.v32.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/.svn/text-base/configure.wrf.bk.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/.svn/text-base/configure.wrf.bk.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/.svn/text-base/configure.wrf.bk.svn-base:fftpack :
wrf/.svn/text-base/configure.wrf.bk.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/.svn/text-base/configure.wrf.bk.everest.v32.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/.svn/text-base/configure.wrf.bk.everest.v32.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/.svn/text-base/configure.wrf.bk.everest.v32.svn-base:fftpack :
wrf/.svn/text-base/configure.wrf.bk.everest.v32.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/.svn/text-base/configure.wrf.bk.midnight.v32.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/.svn/text-base/configure.wrf.bk.midnight.v32.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/.svn/text-base/configure.wrf.bk.midnight.v32.svn-base:fftpack :
wrf/.svn/text-base/configure.wrf.bk.midnight.v32.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/.svn/text-base/compile.svn-base:    setenv DA_ARCHFLAGS "${BUFR_CPP} ${MADIS_CPP} -DFFTPACK -DNORESHAPE"
wrf/Registry/Registry.EM.backup.20130902:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM.backup.20130902:# xpose variables for polar fft
wrf/Registry/Registry.EM_CHEM:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM_CHEM:# xpose variables for polar fft
wrf/Registry/Registry.EM.backup.20130429:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM.backup.20130429:# xpose variables for polar fft
wrf/Registry/Registry.EM.version1:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM.version1:# xpose variables for polar fft
wrf/Registry/Registry.EM_SST:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM_SST:# xpose variables for polar fft
wrf/Registry/Registry.wrfvar:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.wrfvar:# xpose variables for polar fft
wrf/Registry/.svn/text-base/Registry.EM_SST.svn-base:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/.svn/text-base/Registry.EM_SST.svn-base:# xpose variables for polar fft
wrf/Registry/.svn/text-base/Registry.wrfvar.svn-base:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/.svn/text-base/Registry.wrfvar.svn-base:# xpose variables for polar fft
wrf/Registry/.svn/text-base/Registry.EM.svn-base:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/.svn/text-base/Registry.EM.svn-base:# xpose variables for polar fft
wrf/Registry/.svn/text-base/Registry.EM_CHEM.svn-base:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/.svn/text-base/Registry.EM_CHEM.svn-base:# xpose variables for polar fft
wrf/Registry/Registry.EM:rconfig   real    fft_filter_lat          namelist,dynamics     1              91.     h    "fft_filter_lat"   ""   "grid latitude to start polar filter"
wrf/Registry/Registry.EM:# xpose variables for polar fft
wrf/external/Makefile:	( cd fftpack/fftpack5 ; make superclean )
wrf/external/.svn/entries:fftpack
wrf/external/.svn/text-base/Makefile.svn-base:	( cd fftpack/fftpack5 ; make superclean )
wrf/external/io_mcel/configure.wrf.example:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/external/io_mcel/configure.wrf.example:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/external/io_mcel/configure.wrf.example:fftpack :
wrf/external/io_mcel/configure.wrf.example:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/external/io_mcel/timeconvert.c:  *time = difftime(tt2,tt1);
wrf/external/io_mcel/.svn/text-base/configure.wrf.example.svn-base:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/external/io_mcel/.svn/text-base/configure.wrf.example.svn-base:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/external/io_mcel/.svn/text-base/configure.wrf.example.svn-base:fftpack :
wrf/external/io_mcel/.svn/text-base/configure.wrf.example.svn-base:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/external/io_mcel/.svn/text-base/timeconvert.c.svn-base:  *time = difftime(tt2,tt1);
wrf/external/fftpack/README:Web site for fftpack5:
wrf/external/fftpack/README:http://www.cisl.ucar.edu/css/software/fftpack5/
wrf/external/fftpack/README:FFTPACK is a Fortran subroutine library of Fast Fourier Transforms (FFT's) 
wrf/external/fftpack/README:1990's. This release of FFTPACK includes single and multiple instance 
wrf/external/fftpack/README:(3) Symmetric FFTs, by P. N. Swarztrauber, Mathematics of Computation 47(1986), 
wrf/external/fftpack/README:The WRF usage of the fftpack5 package is for filtering high-latitude
wrf/external/fftpack/README:The fftpack source has been changed by the convert.f90 program, turning
wrf/external/fftpack/fftpack5/cfft1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft1i.F:!   $Id: cfft1i.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft1i.F:      SUBROUTINE CFFT1I (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/cfft1i.F:        CALL XERFFT ('CFFTMI ', 3) 
wrf/external/fftpack/fftpack5/cfft1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft1f.F:!   $Id: cfft1f.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft1f.F:      SUBROUTINE CFFT1F (N, INC, C, LENC, WSAVE, LENSAV,                &
wrf/external/fftpack/fftpack5/cfft1f.F:        CALL XERFFT ('CFFT1F ', 6) 
wrf/external/fftpack/fftpack5/cfft1f.F:        CALL XERFFT ('CFFT1F ', 8) 
wrf/external/fftpack/fftpack5/cfft1f.F:        CALL XERFFT ('CFFTMF ', 10) 
wrf/external/fftpack/fftpack5/cost1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cost1i.F:        CALL XERFFT ('COST1I', 3) 
wrf/external/fftpack/fftpack5/cost1i.F:      CALL RFFT1I (NM1, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/cost1i.F:        CALL XERFFT ('COST1I',-5) 
wrf/external/fftpack/fftpack5/sinqmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinqmi.F:        CALL XERFFT ('SINQMI', 3) 
wrf/external/fftpack/fftpack5/sinqmi.F:        CALL XERFFT ('SINQMI',-5) 
wrf/external/fftpack/fftpack5/msntb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/msntb1.F:      CALL RFFTMF(LOT,1,NP1,LOT,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/msntb1.F:        CALL XERFFT ('MSNTB1',-5) 
wrf/external/fftpack/fftpack5/r1f2kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmfgkb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmfgkb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/mcfti1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft1f.F:!   $Id: rfft1f.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft1f.F:      SUBROUTINE RFFT1F ( N, INC, R, LENR, WSAVE, LENSAV,               &
wrf/external/fftpack/fftpack5/rfft1f.F:        CALL XERFFT ('RFFT1F ', 6) 
wrf/external/fftpack/fftpack5/rfft1f.F:        CALL XERFFT ('RFFT1F ', 8) 
wrf/external/fftpack/fftpack5/rfft1f.F:        CALL XERFFT ('RFFT1F ', 10) 
wrf/external/fftpack/fftpack5/rfft1f.F:      CALL RFFTF1 (N,INC,R,WORK,WSAVE,WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/sintb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sintb1.F:      CALL RFFT1F(NP1,1,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/sintb1.F:        CALL XERFFT ('SINTB1',-5) 
wrf/external/fftpack/fftpack5/cosqmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqmi.F:        CALL XERFFT ('COSQMI', 3) 
wrf/external/fftpack/fftpack5/cosqmi.F:      CALL RFFTMI (N, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/cosqmi.F:        CALL XERFFT ('COSQMI',-5) 
wrf/external/fftpack/fftpack5/mradf4.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqmf.F:        CALL XERFFT ('COSQMF', 6) 
wrf/external/fftpack/fftpack5/cosqmf.F:        CALL XERFFT ('COSQMF', 8) 
wrf/external/fftpack/fftpack5/cosqmf.F:        CALL XERFFT ('COSQMF', 10) 
wrf/external/fftpack/fftpack5/cosqmf.F:        CALL XERFFT ('COSQMF', -1) 
wrf/external/fftpack/fftpack5/cosqmf.F:        CALL XERFFT ('COSQMF',-5) 
wrf/external/fftpack/fftpack5/Makefile:OBJ  =   c1f2kb.o c1f2kf.o c1f3kb.o c1f3kf.o c1f4kb.o c1f4kf.o c1f5kb.o c1f5kf.o c1fgkb.o c1fgkf.o c1fm1b.o c1fm1f.o cfft1b.o \
wrf/external/fftpack/fftpack5/Makefile:         cfft1f.o cfft1i.o cfft2b.o cfft2f.o cfft2i.o cfftmb.o cfftmf.o cfftmi.o cmf2kb.o \
wrf/external/fftpack/fftpack5/Makefile:         msntf1.o r1f2kb.o r1f2kf.o r1f3kb.o r1f3kf.o r1f4kb.o r1f4kf.o r1f5kb.o r1f5kf.o r1fgkb.o r1fgkf.o rfft1b.o \
wrf/external/fftpack/fftpack5/Makefile:         rfft1f.o rfft1i.o rfft2b.o rfft2f.o rfft2i.o rfftb1.o rfftf1.o rffti1.o rfftmb.o \
wrf/external/fftpack/fftpack5/Makefile:         rfftmf.o rfftmi.o sinq1b.o sinq1f.o sinq1i.o sinqmb.o sinqmf.o sinqmi.o sint1b.o sint1f.o sint1i.o sintb1.o \
wrf/external/fftpack/fftpack5/Makefile:         sintf1.o sintmb.o sintmf.o sintmi.o tables.o xercon.o xerfft.o
wrf/external/fftpack/fftpack5/Makefile:TARGET = libfftpack.a
wrf/external/fftpack/fftpack5/sinq1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinq1i.F:        CALL XERFFT ('SINQ1I', 3) 
wrf/external/fftpack/fftpack5/sinq1i.F:        CALL XERFFT ('SINQ1I',-5) 
wrf/external/fftpack/fftpack5/costmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costmi.F:        CALL XERFFT ('COSTMI', 3) 
wrf/external/fftpack/fftpack5/costmi.F:      CALL RFFTMI (NM1, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/costmi.F:        CALL XERFFT ('COSTMI',-5) 
wrf/external/fftpack/fftpack5/mradb2.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mradf5.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmf3kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/xercon.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/xercon.F:!     For multiple FFTs to execute correctly, input parameters INC,     
wrf/external/fftpack/fftpack5/rfftmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftmi.F:!   $Id: rfftmi.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfftmi.F:      SUBROUTINE RFFTMI (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/rfftmi.F:        CALL XERFFT ('RFFTMI ', 3) 
wrf/external/fftpack/fftpack5/cmf2kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosq1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosq1i.F:        CALL XERFFT ('COSQ1I', 3) 
wrf/external/fftpack/fftpack5/cosq1i.F:      CALL RFFT1I (N, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/cosq1i.F:        CALL XERFFT ('COSQ1I',-5) 
wrf/external/fftpack/fftpack5/cfftmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfftmf.F:!   $Id: cfftmf.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfftmf.F:      SUBROUTINE CFFTMF (LOT, JUMP, N, INC, C, LENC, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/cfftmf.F:        CALL XERFFT ('CFFTMF ', 6) 
wrf/external/fftpack/fftpack5/cfftmf.F:        CALL XERFFT ('CFFTMF ', 8) 
wrf/external/fftpack/fftpack5/cfftmf.F:        CALL XERFFT ('CFFTMF ', 10) 
wrf/external/fftpack/fftpack5/cfftmf.F:        CALL XERFFT ('CFFTMF ', -1) 
wrf/external/fftpack/fftpack5/sinqmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinqmb.F:        CALL XERFFT ('SINQMB', 6) 
wrf/external/fftpack/fftpack5/sinqmb.F:        CALL XERFFT ('SINQMB', 8) 
wrf/external/fftpack/fftpack5/sinqmb.F:        CALL XERFFT ('SINQMB', 10) 
wrf/external/fftpack/fftpack5/sinqmb.F:        CALL XERFFT ('SINQMB', -1) 
wrf/external/fftpack/fftpack5/sinqmb.F:        CALL XERFFT ('SINQMB',-5) 
wrf/external/fftpack/fftpack5/rfftmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftmb.F:!   $Id: rfftmb.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfftmb.F:      SUBROUTINE RFFTMB (LOT, JUMP, N, INC, R, LENR, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/rfftmb.F:        CALL XERFFT ('RFFTMB ', 6) 
wrf/external/fftpack/fftpack5/rfftmb.F:        CALL XERFFT ('RFFTMB ', 8) 
wrf/external/fftpack/fftpack5/rfftmb.F:        CALL XERFFT ('RFFTMB ', 10) 
wrf/external/fftpack/fftpack5/rfftmb.F:        CALL XERFFT ('RFFTMB ', -1) 
wrf/external/fftpack/fftpack5/c1fm1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1fm1f.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/c1fgkf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1fgkf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/sint1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sint1f.F:        CALL XERFFT ('SINT1F', 6) 
wrf/external/fftpack/fftpack5/sint1f.F:        CALL XERFFT ('SINT1F', 8) 
wrf/external/fftpack/fftpack5/sint1f.F:        CALL XERFFT ('SINT1F', 10) 
wrf/external/fftpack/fftpack5/sint1f.F:        CALL XERFFT ('SINT1F',-5) 
wrf/external/fftpack/fftpack5/cosqmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqmb.F:        CALL XERFFT ('COSQMB', 6) 
wrf/external/fftpack/fftpack5/cosqmb.F:        CALL XERFFT ('COSQMB', 8) 
wrf/external/fftpack/fftpack5/cosqmb.F:        CALL XERFFT ('COSQMB', 10) 
wrf/external/fftpack/fftpack5/cosqmb.F:        CALL XERFFT ('COSQMB', -1) 
wrf/external/fftpack/fftpack5/cosqmb.F:        CALL XERFFT ('COSQMB',-5) 
wrf/external/fftpack/fftpack5/c1f4kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f4kf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/sintmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sintmi.F:        CALL XERFFT ('SINTMI', 3) 
wrf/external/fftpack/fftpack5/sintmi.F:      CALL RFFTMI (NP1, WSAVE(NS2+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/sintmi.F:        CALL XERFFT ('SINTMI',-5) 
wrf/external/fftpack/fftpack5/Makefile-orig:OBJ  =   c1f2kb.o c1f2kf.o c1f3kb.o c1f3kf.o c1f4kb.o c1f4kf.o c1f5kb.o c1f5kf.o c1fgkb.o c1fgkf.o c1fm1b.o c1fm1f.o cfft1b.o\
wrf/external/fftpack/fftpack5/Makefile-orig:         cfft1f.o cfft1i.o cfft2b.o cfft2f.o cfft2i.o cfftmb.o cfftmf.o cfftmi.o cmf2kb.o\
wrf/external/fftpack/fftpack5/Makefile-orig:         msntf1.o r1f2kb.o r1f2kf.o r1f3kb.o r1f3kf.o r1f4kb.o r1f4kf.o r1f5kb.o r1f5kf.o r1fgkb.o r1fgkf.o rfft1b.o\
wrf/external/fftpack/fftpack5/Makefile-orig:         rfft1f.o rfft1i.o rfft2b.o rfft2f.o rfft2i.o rfftb1.o rfftf1.o rffti1.o rfftmb.o\
wrf/external/fftpack/fftpack5/Makefile-orig:         rfftmf.o rfftmi.o sinq1b.o sinq1f.o sinq1i.o sinqmb.o sinqmf.o sinqmi.o sint1b.o sint1f.o sint1i.o sintb1.o\
wrf/external/fftpack/fftpack5/Makefile-orig:         sintf1.o sintmb.o sintmf.o sintmi.o tables.o xercon.o xerfft.o
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=f90 LD=ar FFLAGS="-xO5" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=f90 LD=ar FFLAGS="-fast" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=xlf LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=g77 LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=ifort LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=f77 LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	@$(MAKE) FC=pgf77 LD=ar FFLAGS="-fast" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/Makefile-orig:	rm -f $(OBJ) libfftpack*
wrf/external/fftpack/fftpack5/mradfg.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosq1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosq1f.F:        CALL XERFFT ('COSQ1F', 6) 
wrf/external/fftpack/fftpack5/cosq1f.F:        CALL XERFFT ('COSQ1F', 8) 
wrf/external/fftpack/fftpack5/cosq1f.F:        CALL XERFFT ('COSQ1F', 10) 
wrf/external/fftpack/fftpack5/cosq1f.F:        CALL XERFFT ('COSQ1F',-5) 
wrf/external/fftpack/fftpack5/cfft2f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft2f.F:!   $Id: cfft2f.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft2f.F:      SUBROUTINE CFFT2F (LDIM, L, M, C, WSAVE, LENSAV,                  &
wrf/external/fftpack/fftpack5/cfft2f.F:        CALL XERFFT ('CFFT2F', -2) 
wrf/external/fftpack/fftpack5/cfft2f.F:        CALL XERFFT ('CFFT2F', 6) 
wrf/external/fftpack/fftpack5/cfft2f.F:        CALL XERFFT ('CFFT2F', 8) 
wrf/external/fftpack/fftpack5/cfft2f.F:      CALL CFFTMF(L, 1, M, LDIM, C, (L-1) + LDIM*(M-1) +1,              &
wrf/external/fftpack/fftpack5/cfft2f.F:        CALL XERFFT ('CFFT2F',-5) 
wrf/external/fftpack/fftpack5/cfft2f.F:      CALL CFFTMF (M, LDIM, L, 1, C, (M-1)*LDIM + L,                    &
wrf/external/fftpack/fftpack5/cfft2f.F:        CALL XERFFT ('CFFT2F',-5) 
wrf/external/fftpack/fftpack5/cosq1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosq1b.F:        CALL XERFFT ('COSQ1B', 6) 
wrf/external/fftpack/fftpack5/cosq1b.F:        CALL XERFFT ('COSQ1B', 8) 
wrf/external/fftpack/fftpack5/cosq1b.F:        CALL XERFFT ('COSQ1B', 10) 
wrf/external/fftpack/fftpack5/cosq1b.F:        CALL XERFFT ('COSQ1B',-5) 
wrf/external/fftpack/fftpack5/cost1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cost1f.F:        CALL XERFFT ('COST1F', 6) 
wrf/external/fftpack/fftpack5/cost1f.F:        CALL XERFFT ('COST1F', 8) 
wrf/external/fftpack/fftpack5/cost1f.F:        CALL XERFFT ('COST1F', 10) 
wrf/external/fftpack/fftpack5/cost1f.F:        CALL XERFFT ('COST1F',-5) 
wrf/external/fftpack/fftpack5/cmfm1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmfm1b.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/README:FFTPACK5 - a FORTRAN library of fast Fourier transforms
wrf/external/fftpack/fftpack5/README:http://www.scd.ucar.edu/css/software/fftpack5
wrf/external/fftpack/fftpack5/README:Documentation is provided in PDF format in the file fftpack5.pdf.
wrf/external/fftpack/fftpack5/README:CFFT1I    1D complex initialization
wrf/external/fftpack/fftpack5/README:CFFT1B    1D complex backward
wrf/external/fftpack/fftpack5/README:CFFT1F    1D complex forward
wrf/external/fftpack/fftpack5/README:CFFT2I    2D complex initialization
wrf/external/fftpack/fftpack5/README:CFFT2B    2D complex backward
wrf/external/fftpack/fftpack5/README:CFFT2F    2D complex forward
wrf/external/fftpack/fftpack5/README:CFFTMI    multiple complex initialization
wrf/external/fftpack/fftpack5/README:CFFTMB    multiple complex backward
wrf/external/fftpack/fftpack5/README:CFFTMF    multiple complex forward
wrf/external/fftpack/fftpack5/README:RFFT1I    1D real initialization
wrf/external/fftpack/fftpack5/README:RFFT1B    1D real backward
wrf/external/fftpack/fftpack5/README:RFFT1F    1D real forward
wrf/external/fftpack/fftpack5/README:RFFT2I    2D real initialization
wrf/external/fftpack/fftpack5/README:RFFT2B    2D real backward
wrf/external/fftpack/fftpack5/README:RFFT2F    2D real forward
wrf/external/fftpack/fftpack5/README:RFFTMI    multiple real initialization
wrf/external/fftpack/fftpack5/README:RFFTMB    multiple real backward
wrf/external/fftpack/fftpack5/README:RFFTMF    multiple real forward
wrf/external/fftpack/fftpack5/README:Library FFTPACK5 contains 1D, 2D, and multiple fast Fourier
wrf/external/fftpack/fftpack5/README:All of the FFTPACK5 routines listed above are grouped in triplets
wrf/external/fftpack/fftpack5/README:e.g. {CFFT1I, CFFT1F, CFFT1B}.  The suffix "I" denotes "initialize",
wrf/external/fftpack/fftpack5/README:All of the transform routines in FFTPACK5 are normalized.
wrf/external/fftpack/fftpack5/README:Error messages are written to unit 6 by routine XERFFT.  The
wrf/external/fftpack/fftpack5/README:standard version of XERFFT issues an error message and halts execution,
wrf/external/fftpack/fftpack5/README:so that no FFTPACK routine will return to the calling program with
wrf/external/fftpack/fftpack5/README:FFTPACK5 is written in standard Fortran 77 except for several
wrf/external/fftpack/fftpack5/cfftmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfftmb.F:!   $Id: cfftmb.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfftmb.F:      SUBROUTINE CFFTMB (LOT, JUMP, N, INC, C, LENC, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/cfftmb.F:        CALL XERFFT ('CFFTMB ', 6) 
wrf/external/fftpack/fftpack5/cfftmb.F:        CALL XERFFT ('CFFTMB ', 8) 
wrf/external/fftpack/fftpack5/cfftmb.F:        CALL XERFFT ('CFFTMB ', 10) 
wrf/external/fftpack/fftpack5/cfftmb.F:        CALL XERFFT ('CFFTMB ', -1) 
wrf/external/fftpack/fftpack5/r1f3kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mrftf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft2i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft2i.F:!   $Id: rfft2i.f,v 1.3 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft2i.F:      SUBROUTINE RFFT2I (L, M, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/rfft2i.F:        CALL XERFFT ('RFFT2I', 4) 
wrf/external/fftpack/fftpack5/rfft2i.F:      CALL RFFTMI (L, WSAVE(1), L + INT(LOG(REAL(L))) + 4, IER1) 
wrf/external/fftpack/fftpack5/rfft2i.F:        CALL XERFFT ('RFFT2I',-5) 
wrf/external/fftpack/fftpack5/rfft2i.F:      CALL CFFTMI (M, WSAVE(L+INT(LOG(REAL(L)))+5),                     &
wrf/external/fftpack/fftpack5/rfft2i.F:        CALL XERFFT ('RFFT2I',-5) 
wrf/external/fftpack/fftpack5/rfft2f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft2f.F:!   $Id: rfft2f.f,v 1.5 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft2f.F:      SUBROUTINE RFFT2F (LDIM, L, M, R, WSAVE, LENSAV, WORK,            &
wrf/external/fftpack/fftpack5/rfft2f.F:        CALL XERFFT ('RFFT2F', 6) 
wrf/external/fftpack/fftpack5/rfft2f.F:        CALL XERFFT ('RFFT2F', 8) 
wrf/external/fftpack/fftpack5/rfft2f.F:        CALL XERFFT ('RFFT2F', -6) 
wrf/external/fftpack/fftpack5/rfft2f.F:      CALL RFFTMF(M,LDIM,L,1,R,M*LDIM,WSAVE(1),                         &
wrf/external/fftpack/fftpack5/rfft2f.F:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/rfft2f.F:      CALL CFFTMF(L/2+1,1,M,LDIM/2,R,M*LDIM/2,                          &
wrf/external/fftpack/fftpack5/rfft2f.F:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/sinq1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinq1f.F:        CALL XERFFT ('SINQ1F', 6) 
wrf/external/fftpack/fftpack5/sinq1f.F:        CALL XERFFT ('SINQ1F', 8) 
wrf/external/fftpack/fftpack5/sinq1f.F:        CALL XERFFT ('SINQ1F', 10) 
wrf/external/fftpack/fftpack5/sinq1f.F:        CALL XERFFT ('SINQ1F',-5) 
wrf/external/fftpack/fftpack5/c1f2kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f2kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/r1f2kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mradb5.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfftmi.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfftmi.F:!   $Id: cfftmi.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfftmi.F:      SUBROUTINE CFFTMI (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/cfftmi.F:        CALL XERFFT ('CFFTMI ', 3) 
wrf/external/fftpack/fftpack5/cmf4kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmf4kf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/mrfti1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/r1f5kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f5kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f5kb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/rfftmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftmf.F:!   $Id: rfftmf.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfftmf.F:      SUBROUTINE RFFTMF (LOT, JUMP, N, INC, R, LENR, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/rfftmf.F:        CALL XERFFT ('RFFTMF ', 6) 
wrf/external/fftpack/fftpack5/rfftmf.F:        CALL XERFFT ('RFFTMF ', 8) 
wrf/external/fftpack/fftpack5/rfftmf.F:        CALL XERFFT ('RFFTMF ', 10) 
wrf/external/fftpack/fftpack5/rfftmf.F:        CALL XERFFT ('RFFTMF ', -1) 
wrf/external/fftpack/fftpack5/cmf5kf.F:!      Library:        FFTPACK 5.0                                      
wrf/external/fftpack/fftpack5/cmf5kf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/rffti1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rffti1.F:!   $Id: rffti1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rffti1.F:      SUBROUTINE RFFTI1 (N,WA,FAC) 
wrf/external/fftpack/fftpack5/costmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costmb.F:        CALL XERFFT ('COSTMB', 6) 
wrf/external/fftpack/fftpack5/costmb.F:        CALL XERFFT ('COSTMB', 8) 
wrf/external/fftpack/fftpack5/costmb.F:        CALL XERFFT ('COSTMB', 10) 
wrf/external/fftpack/fftpack5/costmb.F:        CALL XERFFT ('COSTMB', -1) 
wrf/external/fftpack/fftpack5/costmb.F:        CALL XERFFT ('COSTMB',-5) 
wrf/external/fftpack/fftpack5/mcstf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mcstf1.F:      CALL RFFTMF(LOT,JUMP,NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/mcstf1.F:        CALL XERFFT ('MCSTF1',-5) 
wrf/external/fftpack/fftpack5/rfft2b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft2b.F:!   $Id: rfft2b.f,v 1.5 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft2b.F:      SUBROUTINE RFFT2B (LDIM, L, M, R, WSAVE, LENSAV, WORK,            &
wrf/external/fftpack/fftpack5/rfft2b.F:        CALL XERFFT ('RFFT2B', 6) 
wrf/external/fftpack/fftpack5/rfft2b.F:        CALL XERFFT ('RFFT2B', 8) 
wrf/external/fftpack/fftpack5/rfft2b.F:        CALL XERFFT ('RFFT2B', -6) 
wrf/external/fftpack/fftpack5/rfft2b.F:      CALL CFFTMB(L/2+1,1,M,LDIM/2,R,M*LDIM/2,                          &
wrf/external/fftpack/fftpack5/rfft2b.F:         CALL XERFFT('RFFT2B',-5) 
wrf/external/fftpack/fftpack5/rfft2b.F:      CALL RFFTMB(M,LDIM,L,1,R,M*LDIM,WSAVE(1),                         &
wrf/external/fftpack/fftpack5/rfft2b.F:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/costf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costf1.F:      CALL RFFT1F(NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,                  &
wrf/external/fftpack/fftpack5/costf1.F:        CALL XERFFT ('COSTF1',-5) 
wrf/external/fftpack/fftpack5/cmf2kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftf1.F:!   $Id: rfftf1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfftf1.F:      SUBROUTINE RFFTF1 (N,IN,C,CH,WA,FAC) 
wrf/external/fftpack/fftpack5/r1f4kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costb1.F:      CALL RFFT1F(NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,                  &
wrf/external/fftpack/fftpack5/costb1.F:        CALL XERFFT ('COSTB1',-5) 
wrf/external/fftpack/fftpack5/sintmb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sintmb.F:        CALL XERFFT ('SINTMB', 6) 
wrf/external/fftpack/fftpack5/sintmb.F:        CALL XERFFT ('SINTMB', 8) 
wrf/external/fftpack/fftpack5/sintmb.F:        CALL XERFFT ('SINTMB', 10) 
wrf/external/fftpack/fftpack5/sintmb.F:        CALL XERFFT ('SINTMB', -1) 
wrf/external/fftpack/fftpack5/sintmb.F:        CALL XERFFT ('SINTMB',-5) 
wrf/external/fftpack/fftpack5/cmf4kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmf4kb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/rfft1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft1i.F:!   $Id: rfft1i.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft1i.F:      SUBROUTINE RFFT1I ( N, WSAVE, LENSAV, IER ) 
wrf/external/fftpack/fftpack5/rfft1i.F:        CALL XERFFT ('RFFT1I ', 3) 
wrf/external/fftpack/fftpack5/rfft1i.F:      CALL RFFTI1 (N,WSAVE(1),WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/tables.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sint1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sint1b.F:        CALL XERFFT ('SINT1B', 6) 
wrf/external/fftpack/fftpack5/sint1b.F:        CALL XERFFT ('SINT1B', 8) 
wrf/external/fftpack/fftpack5/sint1b.F:        CALL XERFFT ('SINT1B', 10) 
wrf/external/fftpack/fftpack5/sint1b.F:        CALL XERFFT ('SINT1B',-5) 
wrf/external/fftpack/fftpack5/mradf3.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/factor.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/entries:svn+ssh://jhe@everest.msrc.sunysb.edu/ptmp/jhe/ccsm4_wrf_cam/models/atm/wrf/external/fftpack/fftpack5
wrf/external/fftpack/fftpack5/.svn/entries:rfft2i.F
wrf/external/fftpack/fftpack5/.svn/entries:xerfft.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft2b.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft2f.F
wrf/external/fftpack/fftpack5/.svn/entries:rfftmb.F
wrf/external/fftpack/fftpack5/.svn/entries:rfftmf.F
wrf/external/fftpack/fftpack5/.svn/entries:rfft1i.F
wrf/external/fftpack/fftpack5/.svn/entries:rffti1.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft1b.F
wrf/external/fftpack/fftpack5/.svn/entries:cfftmi.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft1f.F
wrf/external/fftpack/fftpack5/.svn/entries:rfft2b.F
wrf/external/fftpack/fftpack5/.svn/entries:rfft2f.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft2i.F
wrf/external/fftpack/fftpack5/.svn/entries:rfft1b.F
wrf/external/fftpack/fftpack5/.svn/entries:rfftmi.F
wrf/external/fftpack/fftpack5/.svn/entries:rfft1f.F
wrf/external/fftpack/fftpack5/.svn/entries:cfftmb.F
wrf/external/fftpack/fftpack5/.svn/entries:cfftmf.F
wrf/external/fftpack/fftpack5/.svn/entries:cfft1i.F
wrf/external/fftpack/fftpack5/.svn/entries:rfftb1.F
wrf/external/fftpack/fftpack5/.svn/entries:rfftf1.F
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmi.F.svn-base:!   $Id: cfftmi.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmi.F.svn-base:      SUBROUTINE CFFTMI (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmi.F.svn-base:        CALL XERFFT ('CFFTMI ', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1i.F.svn-base:        CALL XERFFT ('SINQ1I', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1i.F.svn-base:        CALL XERFFT ('SINQ1I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradf3.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1i.F.svn-base:        CALL XERFFT ('COST1I', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1i.F.svn-base:      CALL RFFT1I (NM1, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1i.F.svn-base:        CALL XERFFT ('COST1I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1fm1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fm1f.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:!   $Id: rfft1b.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:      SUBROUTINE RFFT1B ( N, INC, R, LENR, WSAVE, LENSAV,               &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:        CALL XERFFT ('RFFT1B ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:        CALL XERFFT ('RFFT1B ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:        CALL XERFFT ('RFFT1B ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1b.F.svn-base:      CALL RFFTB1 (N,INC,R,WORK,WSAVE,WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:!   $Id: rfftmf.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:      SUBROUTINE RFFTMF (LOT, JUMP, N, INC, R, LENR, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:        CALL XERFFT ('RFFTMF ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:        CALL XERFFT ('RFFTMF ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:        CALL XERFFT ('RFFTMF ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmf.F.svn-base:        CALL XERFFT ('RFFTMF ', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintf1.F.svn-base:      CALL RFFT1F(NP1,1,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,                 &
wrf/external/fftpack/fftpack5/.svn/text-base/sintf1.F.svn-base:        CALL XERFFT ('SINTF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmi.F.svn-base:!   $Id: rfftmi.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmi.F.svn-base:      SUBROUTINE RFFTMI (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmi.F.svn-base:        CALL XERFFT ('RFFTMI ', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/rffti1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rffti1.F.svn-base:!   $Id: rffti1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rffti1.F.svn-base:      SUBROUTINE RFFTI1 (N,WA,FAC) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1fm1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fm1b.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1i.F.svn-base:        CALL XERFFT ('COSQ1I', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1i.F.svn-base:      CALL RFFT1I (N, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1i.F.svn-base:        CALL XERFFT ('COSQ1I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sint1f.F.svn-base:        CALL XERFFT ('SINT1F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1f.F.svn-base:        CALL XERFFT ('SINT1F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1f.F.svn-base:        CALL XERFFT ('SINT1F', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1f.F.svn-base:        CALL XERFFT ('SINT1F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1f.F.svn-base:        CALL XERFFT ('SINQ1F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1f.F.svn-base:        CALL XERFFT ('SINQ1F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1f.F.svn-base:        CALL XERFFT ('SINQ1F', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1f.F.svn-base:        CALL XERFFT ('SINQ1F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:        CALL XERFFT ('COSQMF', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:        CALL XERFFT ('COSQMF', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:        CALL XERFFT ('COSQMF', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:        CALL XERFFT ('COSQMF', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmf.F.svn-base:        CALL XERFFT ('COSQMF',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/tables.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:        CALL XERFFT ('SINTMB', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:        CALL XERFFT ('SINTMB', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:        CALL XERFFT ('SINTMB', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:        CALL XERFFT ('SINTMB', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmb.F.svn-base:        CALL XERFFT ('SINTMB',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradb4.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:!   $Id: rfft1f.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:      SUBROUTINE RFFT1F ( N, INC, R, LENR, WSAVE, LENSAV,               &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:        CALL XERFFT ('RFFT1F ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:        CALL XERFFT ('RFFT1F ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:        CALL XERFFT ('RFFT1F ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1f.F.svn-base:      CALL RFFTF1 (N,INC,R,WORK,WSAVE,WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/.svn/text-base/cmf3kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:OBJ  =   c1f2kb.o c1f2kf.o c1f3kb.o c1f3kf.o c1f4kb.o c1f4kf.o c1f5kb.o c1f5kf.o c1fgkb.o c1fgkf.o c1fm1b.o c1fm1f.o cfft1b.o\
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:         cfft1f.o cfft1i.o cfft2b.o cfft2f.o cfft2i.o cfftmb.o cfftmf.o cfftmi.o cmf2kb.o\
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:         msntf1.o r1f2kb.o r1f2kf.o r1f3kb.o r1f3kf.o r1f4kb.o r1f4kf.o r1f5kb.o r1f5kf.o r1fgkb.o r1fgkf.o rfft1b.o\
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:         rfft1f.o rfft1i.o rfft2b.o rfft2f.o rfft2i.o rfftb1.o rfftf1.o rffti1.o rfftmb.o\
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:         rfftmf.o rfftmi.o sinq1b.o sinq1f.o sinq1i.o sinqmb.o sinqmf.o sinqmi.o sint1b.o sint1f.o sint1i.o sintb1.o\
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:         sintf1.o sintmb.o sintmf.o sintmi.o tables.o xercon.o xerfft.o
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=f90 LD=ar FFLAGS="-xO5" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=f90 LD=ar FFLAGS="-fast" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=xlf LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=g77 LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=ifort LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=f77 LD=ar FFLAGS="-O3" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	@$(MAKE) FC=pgf77 LD=ar FFLAGS="-fast" LDFLAGS="cr" TARGET=libfftpack.a all
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile-orig.svn-base:	rm -f $(OBJ) libfftpack*
wrf/external/fftpack/fftpack5/.svn/text-base/costb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costb1.F.svn-base:      CALL RFFT1F(NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,                  &
wrf/external/fftpack/fftpack5/.svn/text-base/costb1.F.svn-base:        CALL XERFFT ('COSTB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cmfgkb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfgkb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sint1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sint1b.F.svn-base:        CALL XERFFT ('SINT1B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1b.F.svn-base:        CALL XERFFT ('SINT1B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1b.F.svn-base:        CALL XERFFT ('SINT1B', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1b.F.svn-base:        CALL XERFFT ('SINT1B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:!   $Id: cfftmf.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:      SUBROUTINE CFFTMF (LOT, JUMP, N, INC, C, LENC, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:        CALL XERFFT ('CFFTMF ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:        CALL XERFFT ('CFFTMF ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:        CALL XERFFT ('CFFTMF ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmf.F.svn-base:        CALL XERFFT ('CFFTMF ', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/r1f2kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1f.F.svn-base:        CALL XERFFT ('COST1F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1f.F.svn-base:        CALL XERFFT ('COST1F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1f.F.svn-base:        CALL XERFFT ('COST1F', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1f.F.svn-base:        CALL XERFFT ('COST1F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cmf4kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf4kb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/r1f4kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:!   $Id: cfft1b.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:      SUBROUTINE CFFT1B (N, INC, C, LENC, WSAVE, LENSAV,                &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:        CALL XERFFT ('CFFT1B ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:        CALL XERFFT ('CFFT1B ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1b.F.svn-base:        CALL XERFFT ('CFFT1B ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:!   $Id: rfft2i.f,v 1.3 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:      SUBROUTINE RFFT2I (L, M, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:        CALL XERFFT ('RFFT2I', 4) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:      CALL RFFTMI (L, WSAVE(1), L + INT(LOG(REAL(L))) + 4, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:        CALL XERFFT ('RFFT2I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:      CALL CFFTMI (M, WSAVE(L+INT(LOG(REAL(L)))+5),                     &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2i.F.svn-base:        CALL XERFFT ('RFFT2I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradb5.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1b.F.svn-base:        CALL XERFFT ('SINQ1B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1b.F.svn-base:        CALL XERFFT ('SINQ1B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1b.F.svn-base:        CALL XERFFT ('SINQ1B', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinq1b.F.svn-base:        CALL XERFFT ('SINQ1B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cmf2kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/r1fgkf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costf1.F.svn-base:      CALL RFFT1F(NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,                  &
wrf/external/fftpack/fftpack5/.svn/text-base/costf1.F.svn-base:        CALL XERFFT ('COSTF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/r1f4kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfm1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfm1f.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf4kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf4kf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:!   $Id: cfft2i.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:      SUBROUTINE CFFT2I (L, M, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:        CALL XERFFT ('CFFT2I', 4) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:      CALL CFFTMI (L, WSAVE(1), 2*L + INT(LOG(REAL(L))) + 4, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:        CALL XERFFT ('CFFT2I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:      CALL CFFTMI (M, WSAVE(2*L+INT(LOG(REAL(L))*LOG(2.)) + 3),         &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2i.F.svn-base:        CALL XERFFT ('CFFT2I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mrftb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mradf2.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f2kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fgkb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fgkb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf5kf.F.svn-base:!      Library:        FFTPACK 5.0                                      
wrf/external/fftpack/fftpack5/.svn/text-base/cmf5kf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/r1fgkb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1i.F.svn-base:!   $Id: rfft1i.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1i.F.svn-base:      SUBROUTINE RFFT1I ( N, WSAVE, LENSAV, IER ) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1i.F.svn-base:        CALL XERFFT ('RFFT1I ', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft1i.F.svn-base:      CALL RFFTI1 (N,WSAVE(1),WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/.svn/text-base/mrfti1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costmi.F.svn-base:        CALL XERFFT ('COSTMI', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmi.F.svn-base:      CALL RFFTMI (NM1, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmi.F.svn-base:        CALL XERFFT ('COSTMI',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/factor.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmi.F.svn-base:        CALL XERFFT ('SINQMI', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmi.F.svn-base:        CALL XERFFT ('SINQMI',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqf1.F.svn-base:      CALL RFFTMF(LOT,JUMP,N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqf1.F.svn-base:        CALL XERFFT ('MCSQF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:        CALL XERFFT ('SINQMF', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:        CALL XERFFT ('SINQMF', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:        CALL XERFFT ('SINQMF', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:        CALL XERFFT ('SINQMF', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmf.F.svn-base:        CALL XERFFT ('SINQMF',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:!   $Id: rfft2b.f,v 1.5 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:      SUBROUTINE RFFT2B (LDIM, L, M, R, WSAVE, LENSAV, WORK,            &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:        CALL XERFFT ('RFFT2B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:        CALL XERFFT ('RFFT2B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:        CALL XERFFT ('RFFT2B', -6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:      CALL CFFTMB(L/2+1,1,M,LDIM/2,R,M*LDIM/2,                          &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:         CALL XERFFT('RFFT2B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:      CALL RFFTMB(M,LDIM,L,1,R,M*LDIM,WSAVE(1),                         &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2b.F.svn-base:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/r1f3kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1b.F.svn-base:        CALL XERFFT ('COSQ1B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1b.F.svn-base:        CALL XERFFT ('COSQ1B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1b.F.svn-base:        CALL XERFFT ('COSQ1B', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1b.F.svn-base:        CALL XERFFT ('COSQ1B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1f.F.svn-base:        CALL XERFFT ('COSQ1F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1f.F.svn-base:        CALL XERFFT ('COSQ1F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1f.F.svn-base:        CALL XERFFT ('COSQ1F', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosq1f.F.svn-base:        CALL XERFFT ('COSQ1F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/r1f5kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f2kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fgkf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1fgkf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/r1f5kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintmi.F.svn-base:        CALL XERFFT ('SINTMI', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmi.F.svn-base:      CALL RFFTMI (NP1, WSAVE(NS2+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmi.F.svn-base:        CALL XERFFT ('SINTMI',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintb1.F.svn-base:      CALL RFFT1F(NP1,1,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintb1.F.svn-base:        CALL XERFFT ('SINTB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1i.F.svn-base:!   $Id: cfft1i.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1i.F.svn-base:      SUBROUTINE CFFT1I (N, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1i.F.svn-base:        CALL XERFFT ('CFFTMI ', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqb1.F.svn-base:      CALL RFFTMB(LOT,JUMP,N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/mcsqb1.F.svn-base:        CALL XERFFT ('MCSQB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1f3kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f4kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f4kb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/msntb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/msntb1.F.svn-base:      CALL RFFTMF(LOT,1,NP1,LOT,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/.svn/text-base/msntb1.F.svn-base:        CALL XERFFT ('MSNTB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:!   $Id: rfft2f.f,v 1.5 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:      SUBROUTINE RFFT2F (LDIM, L, M, R, WSAVE, LENSAV, WORK,            &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:        CALL XERFFT ('RFFT2F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:        CALL XERFFT ('RFFT2F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:        CALL XERFFT ('RFFT2F', -6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:      CALL RFFTMF(M,LDIM,L,1,R,M*LDIM,WSAVE(1),                         &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:      CALL CFFTMF(L/2+1,1,M,LDIM/2,R,M*LDIM/2,                          &
wrf/external/fftpack/fftpack5/.svn/text-base/rfft2f.F.svn-base:         CALL XERFFT('RFFT2F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1f4kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f4kf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcstb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcstb1.F.svn-base:      CALL RFFTMF(LOT,JUMP,NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/.svn/text-base/mcstb1.F.svn-base:        CALL XERFFT ('MCSTB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradf5.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:FFTPACK5 - a FORTRAN library of fast Fourier transforms
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:http://www.scd.ucar.edu/css/software/fftpack5
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:Documentation is provided in PDF format in the file fftpack5.pdf.
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT1I    1D complex initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT1B    1D complex backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT1F    1D complex forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT2I    2D complex initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT2B    2D complex backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFT2F    2D complex forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFTMI    multiple complex initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFTMB    multiple complex backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:CFFTMF    multiple complex forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT1I    1D real initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT1B    1D real backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT1F    1D real forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT2I    2D real initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT2B    2D real backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFT2F    2D real forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFTMI    multiple real initialization
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFTMB    multiple real backward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:RFFTMF    multiple real forward
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:Library FFTPACK5 contains 1D, 2D, and multiple fast Fourier
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:All of the FFTPACK5 routines listed above are grouped in triplets
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:e.g. {CFFT1I, CFFT1F, CFFT1B}.  The suffix "I" denotes "initialize",
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:All of the transform routines in FFTPACK5 are normalized.
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:Error messages are written to unit 6 by routine XERFFT.  The
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:standard version of XERFFT issues an error message and halts execution,
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:so that no FFTPACK routine will return to the calling program with
wrf/external/fftpack/fftpack5/.svn/text-base/README.svn-base:FFTPACK5 is written in standard Fortran 77 except for several
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:        CALL XERFFT ('SINTMF', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:        CALL XERFFT ('SINTMF', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:        CALL XERFFT ('SINTMF', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:        CALL XERFFT ('SINTMF', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sintmf.F.svn-base:        CALL XERFFT ('SINTMF',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1f5kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f5kb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:        CALL XERFFT ('SINQMB', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:        CALL XERFFT ('SINQMB', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:        CALL XERFFT ('SINQMB', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:        CALL XERFFT ('SINQMB', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sinqmb.F.svn-base:        CALL XERFFT ('SINQMB',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:!   $Id: cfft2f.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:      SUBROUTINE CFFT2F (LDIM, L, M, C, WSAVE, LENSAV,                  &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:        CALL XERFFT ('CFFT2F', -2) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:        CALL XERFFT ('CFFT2F', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:        CALL XERFFT ('CFFT2F', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:      CALL CFFTMF(L, 1, M, LDIM, C, (L-1) + LDIM*(M-1) +1,              &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:        CALL XERFFT ('CFFT2F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:      CALL CFFTMF (M, LDIM, L, 1, C, (M-1)*LDIM + L,                    &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2f.F.svn-base:        CALL XERFFT ('CFFT2F',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/msntf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/msntf1.F.svn-base:      CALL RFFTMF(LOT,1,NP1,LOT,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/.svn/text-base/msntf1.F.svn-base:        CALL XERFFT ('MSNTF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:        CALL XERFFT ('COSTMB', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:        CALL XERFFT ('COSTMB', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:        CALL XERFFT ('COSTMB', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:        CALL XERFFT ('COSTMB', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmb.F.svn-base:        CALL XERFFT ('COSTMB',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftf1.F.svn-base:!   $Id: rfftf1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfftf1.F.svn-base:      SUBROUTINE RFFTF1 (N,IN,C,CH,WA,FAC) 
wrf/external/fftpack/fftpack5/.svn/text-base/r1f3kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf5kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf5kb.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcstf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcstf1.F.svn-base:      CALL RFFTMF(LOT,JUMP,NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/.svn/text-base/mcstf1.F.svn-base:        CALL XERFFT ('MCSTF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cmfm1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfm1b.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:OBJ  =   c1f2kb.o c1f2kf.o c1f3kb.o c1f3kf.o c1f4kb.o c1f4kf.o c1f5kb.o c1f5kf.o c1fgkb.o c1fgkf.o c1fm1b.o c1fm1f.o cfft1b.o \
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:         cfft1f.o cfft1i.o cfft2b.o cfft2f.o cfft2i.o cfftmb.o cfftmf.o cfftmi.o cmf2kb.o \
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:         msntf1.o r1f2kb.o r1f2kf.o r1f3kb.o r1f3kf.o r1f4kb.o r1f4kf.o r1f5kb.o r1f5kf.o r1fgkb.o r1fgkf.o rfft1b.o \
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:         rfft1f.o rfft1i.o rfft2b.o rfft2f.o rfft2i.o rfftb1.o rfftf1.o rffti1.o rfftmb.o \
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:         rfftmf.o rfftmi.o sinq1b.o sinq1f.o sinq1i.o sinqmb.o sinqmf.o sinqmi.o sint1b.o sint1f.o sint1i.o sintb1.o \
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:         sintf1.o sintmb.o sintmf.o sintmi.o tables.o xercon.o xerfft.o
wrf/external/fftpack/fftpack5/.svn/text-base/Makefile.svn-base:TARGET = libfftpack.a
wrf/external/fftpack/fftpack5/.svn/text-base/cmf3kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/r1f2kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mradb3.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfgkf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmfgkf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:!   $Id: cfft2b.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:      SUBROUTINE CFFT2B (LDIM, L, M, C, WSAVE, LENSAV,                  &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:        CALL XERFFT ('CFFT2B', -2) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:        CALL XERFFT ('CFFT2B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:        CALL XERFFT ('CFFT2B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:      CALL CFFTMB(L, 1, M, LDIM, C, (L-1) + LDIM*(M-1) +1,              &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:        CALL XERFFT ('CFFT2B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:      CALL CFFTMB (M, LDIM, L, 1, C, (M-1)*LDIM + L,                    &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft2b.F.svn-base:        CALL XERFFT ('CFFT2B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradfg.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mradbg.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1b.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cost1b.F.svn-base:        CALL XERFFT ('COST1B', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1b.F.svn-base:        CALL XERFFT ('COST1B', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1b.F.svn-base:        CALL XERFFT ('COST1B', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cost1b.F.svn-base:        CALL XERFFT ('COST1B',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradb2.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmi.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmi.F.svn-base:        CALL XERFFT ('COSQMI', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmi.F.svn-base:      CALL RFFTMI (N, WSAVE(N+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmi.F.svn-base:        CALL XERFFT ('COSQMI',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftb1.F.svn-base:!   $Id: rfftb1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfftb1.F.svn-base:      SUBROUTINE RFFTB1 (N,IN,C,CH,WA,FAC) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1f3kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/xercon.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/xercon.F.svn-base:!     For multiple FFTs to execute correctly, input parameters INC,     
wrf/external/fftpack/fftpack5/.svn/text-base/cosqb1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqb1.F.svn-base:      CALL RFFT1B(N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqb1.F.svn-base:        CALL XERFFT ('COSQB1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/c1f5kf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/c1f5kf.F.svn-base:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:!   $Id: rfftmb.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:      SUBROUTINE RFFTMB (LOT, JUMP, N, INC, R, LENR, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:        CALL XERFFT ('RFFTMB ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:        CALL XERFFT ('RFFTMB ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:        CALL XERFFT ('RFFTMB ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/rfftmb.F.svn-base:        CALL XERFFT ('RFFTMB ', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:!   $Id: cfft1f.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:      SUBROUTINE CFFT1F (N, INC, C, LENC, WSAVE, LENSAV,                &
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:        CALL XERFFT ('CFFT1F ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:        CALL XERFFT ('CFFT1F ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfft1f.F.svn-base:        CALL XERFFT ('CFFTMF ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqf1.F.svn-base:      CALL RFFT1F(N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqf1.F.svn-base:        CALL XERFFT ('COSQF1',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mrftf1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cmf2kb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/mcfti1.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!   $Id: xerfft.f,v 1.3 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:      SUBROUTINE XERFFT( SRNAME, INFO) 
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!  XERFFT  is an error handler for library FFTPACK version 5.0 routines.
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!  It is called by an FFTPACK 5.0 routine if an input parameter has an  
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!          The name of the routine which called XERFFT.                 
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!          subprogram calls XERFFT with INFO = -1.                      
wrf/external/fftpack/fftpack5/.svn/text-base/xerfft.F.svn-base:!     End of XERFFT                                                     
wrf/external/fftpack/fftpack5/.svn/text-base/sint1i.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/sint1i.F.svn-base:        CALL XERFFT ('SINT1I', 3) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1i.F.svn-base:      CALL RFFT1I (NP1, WSAVE(NS2+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/.svn/text-base/sint1i.F.svn-base:        CALL XERFFT ('SINT1I',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:        CALL XERFFT ('COSTMF', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:        CALL XERFFT ('COSTMF', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:        CALL XERFFT ('COSTMF', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:        CALL XERFFT ('COSTMF', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/costmf.F.svn-base:        CALL XERFFT ('COSTMF',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:        CALL XERFFT ('COSQMB', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:        CALL XERFFT ('COSQMB', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:        CALL XERFFT ('COSQMB', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:        CALL XERFFT ('COSQMB', -1) 
wrf/external/fftpack/fftpack5/.svn/text-base/cosqmb.F.svn-base:        CALL XERFFT ('COSQMB',-5) 
wrf/external/fftpack/fftpack5/.svn/text-base/mradf4.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:!   $Id: cfftmb.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:      SUBROUTINE CFFTMB (LOT, JUMP, N, INC, C, LENC, WSAVE, LENSAV,     &
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:        CALL XERFFT ('CFFTMB ', 6) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:        CALL XERFFT ('CFFTMB ', 8) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:        CALL XERFFT ('CFFTMB ', 10) 
wrf/external/fftpack/fftpack5/.svn/text-base/cfftmb.F.svn-base:        CALL XERFFT ('CFFTMB ', -1) 
wrf/external/fftpack/fftpack5/cmf5kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmf5kb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/mcsqf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mcsqf1.F:      CALL RFFTMF(LOT,JUMP,N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/mcsqf1.F:        CALL XERFFT ('MCSQF1',-5) 
wrf/external/fftpack/fftpack5/rfftb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfftb1.F:!   $Id: rfftb1.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfftb1.F:      SUBROUTINE RFFTB1 (N,IN,C,CH,WA,FAC) 
wrf/external/fftpack/fftpack5/c1f3kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/msntf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/msntf1.F:      CALL RFFTMF(LOT,1,NP1,LOT,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/msntf1.F:        CALL XERFFT ('MSNTF1',-5) 
wrf/external/fftpack/fftpack5/cfft2i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft2i.F:!   $Id: cfft2i.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft2i.F:      SUBROUTINE CFFT2I (L, M, WSAVE, LENSAV, IER) 
wrf/external/fftpack/fftpack5/cfft2i.F:        CALL XERFFT ('CFFT2I', 4) 
wrf/external/fftpack/fftpack5/cfft2i.F:      CALL CFFTMI (L, WSAVE(1), 2*L + INT(LOG(REAL(L))) + 4, IER1) 
wrf/external/fftpack/fftpack5/cfft2i.F:        CALL XERFFT ('CFFT2I',-5) 
wrf/external/fftpack/fftpack5/cfft2i.F:      CALL CFFTMI (M, WSAVE(2*L+INT(LOG(REAL(L))*LOG(2.)) + 3),         &
wrf/external/fftpack/fftpack5/cfft2i.F:        CALL XERFFT ('CFFT2I',-5) 
wrf/external/fftpack/fftpack5/sinq1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinq1b.F:        CALL XERFFT ('SINQ1B', 6) 
wrf/external/fftpack/fftpack5/sinq1b.F:        CALL XERFFT ('SINQ1B', 8) 
wrf/external/fftpack/fftpack5/sinq1b.F:        CALL XERFFT ('SINQ1B', 10) 
wrf/external/fftpack/fftpack5/sinq1b.F:        CALL XERFFT ('SINQ1B',-5) 
wrf/external/fftpack/fftpack5/mradb4.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mcstb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mcstb1.F:      CALL RFFTMF(LOT,JUMP,NM1,INC,X,LENX,WSAVE(N+1),LNSV,WORK,         &
wrf/external/fftpack/fftpack5/mcstb1.F:        CALL XERFFT ('MCSTB1',-5) 
wrf/external/fftpack/fftpack5/sintmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sintmf.F:        CALL XERFFT ('SINTMF', 6) 
wrf/external/fftpack/fftpack5/sintmf.F:        CALL XERFFT ('SINTMF', 8) 
wrf/external/fftpack/fftpack5/sintmf.F:        CALL XERFFT ('SINTMF', 10) 
wrf/external/fftpack/fftpack5/sintmf.F:        CALL XERFFT ('SINTMF', -1) 
wrf/external/fftpack/fftpack5/sintmf.F:        CALL XERFFT ('SINTMF',-5) 
wrf/external/fftpack/fftpack5/mrftb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft1b.F:!   $Id: cfft1b.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft1b.F:      SUBROUTINE CFFT1B (N, INC, C, LENC, WSAVE, LENSAV,                &
wrf/external/fftpack/fftpack5/cfft1b.F:        CALL XERFFT ('CFFT1B ', 6) 
wrf/external/fftpack/fftpack5/cfft1b.F:        CALL XERFFT ('CFFT1B ', 8) 
wrf/external/fftpack/fftpack5/cfft1b.F:        CALL XERFFT ('CFFT1B ', 10) 
wrf/external/fftpack/fftpack5/r1f5kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f4kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f4kb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/r1fgkf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sint1i.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sint1i.F:        CALL XERFFT ('SINT1I', 3) 
wrf/external/fftpack/fftpack5/sint1i.F:      CALL RFFT1I (NP1, WSAVE(NS2+1), LNSV, IER1) 
wrf/external/fftpack/fftpack5/sint1i.F:        CALL XERFFT ('SINT1I',-5) 
wrf/external/fftpack/fftpack5/c1f5kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f5kf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/cosqf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqf1.F:      CALL RFFT1F(N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/cosqf1.F:        CALL XERFFT ('COSQF1',-5) 
wrf/external/fftpack/fftpack5/cost1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cost1b.F:        CALL XERFFT ('COST1B', 6) 
wrf/external/fftpack/fftpack5/cost1b.F:        CALL XERFFT ('COST1B', 8) 
wrf/external/fftpack/fftpack5/cost1b.F:        CALL XERFFT ('COST1B', 10) 
wrf/external/fftpack/fftpack5/cost1b.F:        CALL XERFFT ('COST1B',-5) 
wrf/external/fftpack/fftpack5/cmfgkf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmfgkf.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/cmfm1f.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmfm1f.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/c1fm1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1fm1b.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/mcsqb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mcsqb1.F:      CALL RFFTMB(LOT,JUMP,N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/mcsqb1.F:        CALL XERFFT ('MCSQB1',-5) 
wrf/external/fftpack/fftpack5/c1fgkb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1fgkb.F:! FFTPACK 5.0 auxiliary routine                                         
wrf/external/fftpack/fftpack5/mradf2.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/r1f4kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/c1f3kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft1b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/rfft1b.F:!   $Id: rfft1b.f,v 1.2 2004/06/15 21:29:20 rodney Exp $                
wrf/external/fftpack/fftpack5/rfft1b.F:      SUBROUTINE RFFT1B ( N, INC, R, LENR, WSAVE, LENSAV,               &
wrf/external/fftpack/fftpack5/rfft1b.F:        CALL XERFFT ('RFFT1B ', 6) 
wrf/external/fftpack/fftpack5/rfft1b.F:        CALL XERFFT ('RFFT1B ', 8) 
wrf/external/fftpack/fftpack5/rfft1b.F:        CALL XERFFT ('RFFT1B ', 10) 
wrf/external/fftpack/fftpack5/rfft1b.F:      CALL RFFTB1 (N,INC,R,WORK,WSAVE,WSAVE(N+1)) 
wrf/external/fftpack/fftpack5/r1f3kb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/mradbg.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqb1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cosqb1.F:      CALL RFFT1B(N,INC,X,LENX,WSAVE(N+1),LNSV,WORK,LNWK,IER1) 
wrf/external/fftpack/fftpack5/cosqb1.F:        CALL XERFFT ('COSQB1',-5) 
wrf/external/fftpack/fftpack5/r1fgkb.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/xerfft.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/xerfft.F:!   $Id: xerfft.f,v 1.3 2004/07/06 00:58:41 rodney Exp $                
wrf/external/fftpack/fftpack5/xerfft.F:      SUBROUTINE XERFFT( SRNAME, INFO) 
wrf/external/fftpack/fftpack5/xerfft.F:!  XERFFT  is an error handler for library FFTPACK version 5.0 routines.
wrf/external/fftpack/fftpack5/xerfft.F:!  It is called by an FFTPACK 5.0 routine if an input parameter has an  
wrf/external/fftpack/fftpack5/xerfft.F:!          The name of the routine which called XERFFT.                 
wrf/external/fftpack/fftpack5/xerfft.F:!          subprogram calls XERFFT with INFO = -1.                      
wrf/external/fftpack/fftpack5/xerfft.F:!     End of XERFFT                                                     
wrf/external/fftpack/fftpack5/sintf1.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sintf1.F:      CALL RFFT1F(NP1,1,XH,LNXH,WSAVE(NS2+1),LNSV,WORK,                 &
wrf/external/fftpack/fftpack5/sintf1.F:        CALL XERFFT ('SINTF1',-5) 
wrf/external/fftpack/fftpack5/cfft2b.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cfft2b.F:!   $Id: cfft2b.f,v 1.2 2004/06/15 21:08:32 rodney Exp $                
wrf/external/fftpack/fftpack5/cfft2b.F:      SUBROUTINE CFFT2B (LDIM, L, M, C, WSAVE, LENSAV,                  &
wrf/external/fftpack/fftpack5/cfft2b.F:        CALL XERFFT ('CFFT2B', -2) 
wrf/external/fftpack/fftpack5/cfft2b.F:        CALL XERFFT ('CFFT2B', 6) 
wrf/external/fftpack/fftpack5/cfft2b.F:        CALL XERFFT ('CFFT2B', 8) 
wrf/external/fftpack/fftpack5/cfft2b.F:      CALL CFFTMB(L, 1, M, LDIM, C, (L-1) + LDIM*(M-1) +1,              &
wrf/external/fftpack/fftpack5/cfft2b.F:        CALL XERFFT ('CFFT2B',-5) 
wrf/external/fftpack/fftpack5/cfft2b.F:      CALL CFFTMB (M, LDIM, L, 1, C, (M-1)*LDIM + L,                    &
wrf/external/fftpack/fftpack5/cfft2b.F:        CALL XERFFT ('CFFT2B',-5) 
wrf/external/fftpack/fftpack5/mradb3.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/cmf3kf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinqmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/sinqmf.F:        CALL XERFFT ('SINQMF', 6) 
wrf/external/fftpack/fftpack5/sinqmf.F:        CALL XERFFT ('SINQMF', 8) 
wrf/external/fftpack/fftpack5/sinqmf.F:        CALL XERFFT ('SINQMF', 10) 
wrf/external/fftpack/fftpack5/sinqmf.F:        CALL XERFFT ('SINQMF', -1) 
wrf/external/fftpack/fftpack5/sinqmf.F:        CALL XERFFT ('SINQMF',-5) 
wrf/external/fftpack/fftpack5/costmf.F:!   FFTPACK 5.0                                                         
wrf/external/fftpack/fftpack5/costmf.F:        CALL XERFFT ('COSTMF', 6) 
wrf/external/fftpack/fftpack5/costmf.F:        CALL XERFFT ('COSTMF', 8) 
wrf/external/fftpack/fftpack5/costmf.F:        CALL XERFFT ('COSTMF', 10) 
wrf/external/fftpack/fftpack5/costmf.F:        CALL XERFFT ('COSTMF', -1) 
wrf/external/fftpack/fftpack5/costmf.F:        CALL XERFFT ('COSTMF',-5) 
wrf/external/fftpack/.svn/entries:svn+ssh://jhe@everest.msrc.sunysb.edu/ptmp/jhe/ccsm4_wrf_cam/models/atm/wrf/external/fftpack
wrf/external/fftpack/.svn/entries:fftpack5
wrf/external/fftpack/.svn/text-base/77to90.csh.svn-base:#	The NCAR CISL fftpack (version 5)
wrf/external/fftpack/.svn/text-base/77to90.csh.svn-base:cd fftpack5
wrf/external/fftpack/.svn/text-base/README.svn-base:Web site for fftpack5:
wrf/external/fftpack/.svn/text-base/README.svn-base:http://www.cisl.ucar.edu/css/software/fftpack5/
wrf/external/fftpack/.svn/text-base/README.svn-base:FFTPACK is a Fortran subroutine library of Fast Fourier Transforms (FFT's) 
wrf/external/fftpack/.svn/text-base/README.svn-base:1990's. This release of FFTPACK includes single and multiple instance 
wrf/external/fftpack/.svn/text-base/README.svn-base:(3) Symmetric FFTs, by P. N. Swarztrauber, Mathematics of Computation 47(1986), 
wrf/external/fftpack/.svn/text-base/README.svn-base:The WRF usage of the fftpack5 package is for filtering high-latitude
wrf/external/fftpack/.svn/text-base/README.svn-base:The fftpack source has been changed by the convert.f90 program, turning
wrf/external/fftpack/77to90.csh:#	The NCAR CISL fftpack (version 5)
wrf/external/fftpack/77to90.csh:cd fftpack5
wrf/configure.wrf.bk.midnight.v32:                     -L$(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 -lfftpack \
wrf/configure.wrf.bk.midnight.v32:bundled:  wrf_ioapi_includes wrfio_grib_share wrfio_grib1 wrfio_int esmf_time fftpack
wrf/configure.wrf.bk.midnight.v32:fftpack :
wrf/configure.wrf.bk.midnight.v32:	( cd $(WRF_SRC_ROOT_DIR)/external/fftpack/fftpack5 ; \
wrf/test22.txt:dyn_em/.svn/text-base/module_polarfft.F.svn-base:   USE module_dm, ONLY : local_communicator, mytask, ntasks, ntasks_x, ntasks_y &
wrf/test22.txt:dyn_em/.svn/text-base/module_polarfft.F.svn-base:                       , local_communicator_periodic, itrace                    &
wrf/test22.txt:dyn_em/.svn/text-base/module_polarfft.F.svn-base:                       , local_communicator_x 
wrf/test22.txt:dyn_em/module_polarfft.F:   USE module_dm, ONLY : local_communicator, mytask, ntasks, ntasks_x, ntasks_y &
wrf/test22.txt:dyn_em/module_polarfft.F:                       , local_communicator_periodic, itrace                    &
wrf/test22.txt:dyn_em/module_polarfft.F:                       , local_communicator_x 
wrf/test22.txt:var/da/da_ffts/da_ffts.f90:   use module_dm, only : local_communicator, &
wrf/test22.txt:var/da/da_ffts/.svn/text-base/da_ffts.f90.svn-base:   use module_dm, only : local_communicator, &
