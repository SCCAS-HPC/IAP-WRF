dyn_em/shift_domain_em.F:   grid%imask_nostag(ips:min(ide-1,ipe),jps:min(jde-1,jpe)) = 0
dyn_em/shift_domain_em.F:   grid%imask_xstag(ips:ipe,jps:min(jde-1,jpe)) = 0
dyn_em/shift_domain_em.F:   grid%imask_ystag(ips:min(ide-1,ipe),jps:jpe) = 0
dyn_em/shift_domain_em.F:   grid%imask_xystag(ips:ipe,jps:jpe) = 0
dyn_em/module_polarfft.F:       grid%u_2(ips:ipe,kde,jps:jpe) = grid%mu_2(ips:ipe,jps:jpe) 
dyn_em/module_polarfft.F:       grid%mu_2(ips:ipe,jps:jpe) = grid%u_2(ips:ipe,kde,jps:jpe)
dyn_em/module_polarfft.F:       grid%t_2(ips:ipe,kde,jps:jpe) = grid%mu_2(ips:ipe,jps:jpe)
dyn_em/module_polarfft.F:       grid%mu_2(ips:ipe,jps:jpe) = grid%t_2(ips:ipe,kde,jps:jpe)
dyn_em/module_polarfft.F:       grid%ru_m(ips:ipe,kde,jps:jpe) = grid%mut(ips:ipe,jps:jpe)
dyn_em/module_polarfft.F:       grid%mut(ips:ipe,jps:jpe) = grid%ru_m(ips:ipe,kde,jps:jpe)
dyn_em/.svn/text-base/shift_domain_em.F.svn-base:   grid%imask_nostag(ips:min(ide-1,ipe),jps:min(jde-1,jpe)) = 0
dyn_em/.svn/text-base/shift_domain_em.F.svn-base:   grid%imask_xstag(ips:ipe,jps:min(jde-1,jpe)) = 0
dyn_em/.svn/text-base/shift_domain_em.F.svn-base:   grid%imask_ystag(ips:min(ide-1,ipe),jps:jpe) = 0
dyn_em/.svn/text-base/shift_domain_em.F.svn-base:   grid%imask_xystag(ips:ipe,jps:jpe) = 0
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%u_2(ips:ipe,kde,jps:jpe) = grid%mu_2(ips:ipe,jps:jpe) 
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%mu_2(ips:ipe,jps:jpe) = grid%u_2(ips:ipe,kde,jps:jpe)
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%t_2(ips:ipe,kde,jps:jpe) = grid%mu_2(ips:ipe,jps:jpe)
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%mu_2(ips:ipe,jps:jpe) = grid%t_2(ips:ipe,kde,jps:jpe)
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%ru_m(ips:ipe,kde,jps:jpe) = grid%mut(ips:ipe,jps:jpe)
dyn_em/.svn/text-base/module_polarfft.F.svn-base:       grid%mut(ips:ipe,jps:jpe) = grid%ru_m(ips:ipe,kde,jps:jpe)
dyn_em/.svn/text-base/start_em.F.svn-base:!write(0,*)__FILE__,__LINE__,' clat ',ids,j,grid%clat(ips,j)
dyn_em/.svn/text-base/start_em.F.svn-base:     grid%clat_xxx(ipsx:ipex,jpsx:jpex) = clat_glob(ipsx:ipex,jpsx:jpex)
dyn_em/.svn/text-base/start_em.F.svn-base:   CALL set_tiles ( grid , grid%imask_nostag, ims, ime, jms, jme, ips, ipe, jps, jpe )
dyn_em/start_em.F:!write(0,*)__FILE__,__LINE__,' clat ',ids,j,grid%clat(ips,j)
dyn_em/start_em.F:     grid%clat_xxx(ipsx:ipex,jpsx:jpex) = clat_glob(ipsx:ipex,jpsx:jpex)
dyn_em/start_em.F:   CALL set_tiles ( grid , grid%imask_nostag, ims, ime, jms, jme, ips, ipe, jps, jpe )
dyn_exp/solve_exp.F:   ips             = grid%sp31 ! grid%sp32
dyn_exp/.svn/text-base/solve_exp.F.svn-base:   ips             = grid%sp31 ! grid%sp32
dyn_nmm/.svn/text-base/shift_domain_nmm.F.svn-base:!   grid%imask_nostag(ips:min(ide-4,ipe),jps:min(jde-1,jpe)) = 1
dyn_nmm/.svn/text-base/shift_domain_nmm.F.svn-base:!   grid%imask_nostag(ips+1:min(ide-2,ipe),jps+1:min(jde-2,jpe)) = 1
dyn_nmm/.svn/text-base/shift_domain_nmm.F.svn-base:!   grid%imask_nostag(ips+1:min(ide-1,ipe-1),jps+2:min(jde-1,jpe-2)) = 1
dyn_nmm/shift_domain_nmm.F:!   grid%imask_nostag(ips:min(ide-4,ipe),jps:min(jde-1,jpe)) = 1
dyn_nmm/shift_domain_nmm.F:!   grid%imask_nostag(ips+1:min(ide-2,ipe),jps+1:min(jde-2,jpe)) = 1
dyn_nmm/shift_domain_nmm.F:!   grid%imask_nostag(ips+1:min(ide-1,ipe-1),jps+2:min(jde-1,jpe-2)) = 1
external/RSL_LITE/module_dm.F:      ips_save = ngrid%i_parent_start   ! used in feedback_domain_em_part2 below
external/RSL_LITE/module_dm.F:      ips_save = ngrid%i_parent_start  ! +1 not used in ipe_save & jpe_save
external/RSL_LITE/gen_comms.c:      fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:    fprintf(fp,"CALL rsl_comm_iter_init(%s,ips,ipe)\n",maxstenwidth) ;
external/RSL_LITE/gen_comms.c:    fprintf(fp,"                         1 , ids,ide,ips,ipe, grid%%nids, grid%%nide , & \n" ) ;
external/RSL_LITE/gen_comms.c:      fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:                      fprintf(fp,"ips, ipe, jps, jpe, %s, %s              )\n",s,e) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%s,%s)\n",s,e) ;
external/RSL_LITE/gen_comms.c:                      fprintf(fp,"ips, ipe, jps, jpe, %d, %d              )\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%d,%d)\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,1,1)\n") ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/gen_comms.c:                      fprintf(fp,"ips, ipe, jps, jpe, %s, %s              )\n",s,e) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%s,%s)\n",s,e) ;
external/RSL_LITE/gen_comms.c:                      fprintf(fp,"ips, ipe, jps, jpe, %d, %d              )\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%d,%d)\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,1,1)\n") ;
external/RSL_LITE/gen_comms.c:    fprintf(stderr,"WARNING: gen_comm_descrips in registry cannot open %s for writing\n",fname ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme,:%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme,:%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe),:%sitrace) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px,:%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),:,jms:jme%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,:,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (jms:jme,:,ips:min(ide%s,ipe)%sitrace) = grid%%%s (jms:jme,:,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (:,ips:min(ide%s,ipe),jms:jme%sitrace) = grid%%%s (:,ips+px:min(ide%s,ipe)+px,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (:,jms:jme,ips:min(ide%s,ipe)%sitrace) = grid%%%s (:,jms:jme,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                    fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe)%sitrace) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme,:) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme,:)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe),:) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px,:)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),:,jms:jme) = grid%%%s (ips+px:min(ide%s,ipe)+px,:,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (jms:jme,:,ips:min(ide%s,ipe)) = grid%%%s (jms:jme,:,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (:,ips:min(ide%s,ipe),jms:jme) = grid%%%s (:,ips+px:min(ide%s,ipe)+px,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (:,jms:jme,ips:min(ide%s,ipe)) = grid%%%s (:,jms:jme,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:                  fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe)) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/gen_comms.c:fprintf(fp,"IF ( cd_feedback_mask%s( pig, ips_save, ipe_save , pjg, jps_save, jpe_save, %s, %s ) ) THEN\n",
external/RSL_LITE/.svn/text-base/task_for_point.c.svn-base:/*    fprintf(stderr,"%3d. ips %d ipe %d (%d) jps %d jpe %d (%d)\n", i, ips[i], ipe[i], ipe[i]-ips[i]+1, jps[i], jpe[i], jpe[i]-jps[i]+1 ) ; */
external/RSL_LITE/.svn/text-base/module_dm.F.svn-base:      ips_save = ngrid%i_parent_start   ! used in feedback_domain_em_part2 below
external/RSL_LITE/.svn/text-base/module_dm.F.svn-base:      ips_save = ngrid%i_parent_start  ! +1 not used in ipe_save & jpe_save
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:      fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:    fprintf(fp,"CALL rsl_comm_iter_init(%s,ips,ipe)\n",maxstenwidth) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:    fprintf(fp,"                         1 , ids,ide,ips,ipe, grid%%nids, grid%%nide , & \n" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:      fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                      fprintf(fp,"ips, ipe, jps, jpe, %s, %s              )\n",s,e) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%s,%s)\n",s,e) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                      fprintf(fp,"ips, ipe, jps, jpe, %d, %d              )\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%d,%d)\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,1,1)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,kps,kpe)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                      fprintf(fp,"ips, ipe, jps, jpe, %s, %s              )\n",s,e) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%s,%s)\n",s,e) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                      fprintf(fp,"ips, ipe, jps, jpe, %d, %d              )\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,%d,%d)\n",dimd->coord_start,dimd->coord_end) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"(ips-1)*grid%%sr_x+1,ipe*grid%%sr_x,(jps-1)*grid%%sr_y+1,jpe*grid%%sr_y,1,1)\n") ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:    fprintf(stderr,"WARNING: gen_comm_descrips in registry cannot open %s for writing\n",fname ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme,:%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme,:%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe),:%sitrace) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px,:%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),:,jms:jme%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,:,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (jms:jme,:,ips:min(ide%s,ipe)%sitrace) = grid%%%s (jms:jme,:,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (:,ips:min(ide%s,ipe),jms:jme%sitrace) = grid%%%s (:,ips+px:min(ide%s,ipe)+px,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (:,jms:jme,ips:min(ide%s,ipe)%sitrace) = grid%%%s (:,jms:jme,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme%sitrace) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                    fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe)%sitrace) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px%sitrace)\n", vname, stag, moredims, vname, stag, moredims ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme,:) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme,:)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe),:) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px,:)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),:,jms:jme) = grid%%%s (ips+px:min(ide%s,ipe)+px,:,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (jms:jme,:,ips:min(ide%s,ipe)) = grid%%%s (jms:jme,:,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (:,ips:min(ide%s,ipe),jms:jme) = grid%%%s (:,ips+px:min(ide%s,ipe)+px,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (:,jms:jme,ips:min(ide%s,ipe)) = grid%%%s (:,jms:jme,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (ips:min(ide%s,ipe),jms:jme) = grid%%%s (ips+px:min(ide%s,ipe)+px,jms:jme)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:                  fprintf(fp,"grid%%%s (jms:jme,ips:min(ide%s,ipe)) = grid%%%s (jms:jme,ips+px:min(ide%s,ipe)+px)\n", vname,  p->stag_x?"":"-1", vname, p->stag_x?"":"-1" ) ;
external/RSL_LITE/.svn/text-base/gen_comms.c.svn-base:fprintf(fp,"IF ( cd_feedback_mask%s( pig, ips_save, ipe_save , pjg, jps_save, jpe_save, %s, %s ) ) THEN\n",
external/RSL_LITE/task_for_point.c:/*    fprintf(stderr,"%3d. ips %d ipe %d (%d) jps %d jpe %d (%d)\n", i, ips[i], ipe[i], ipe[i]-ips[i]+1, jps[i], jpe[i], jpe[i]-jps[i]+1 ) ; */
frame/module_domain.F.0513:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F.0513:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F.0513:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F.0513:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F.0513:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F.0513:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F.0513:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F.0513:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F.0513:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F.0513:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F.0513:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F.0513:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F.0513:           ips = grid%sp31 ; ipe = grid%ep31 ; jps = grid%sp32 ; jpe = grid%ep32 ; kps = grid%sp33 ; kpe = grid%ep33 ; 
frame/module_domain.F.0513:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp33  ; kpe = grid%ep33  ; 
frame/module_domain.F.0513:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F.0513:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp32  ; jpe = grid%ep32  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F.0513:           ips = grid%sp31  ; ipe = grid%ep31  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F.0513:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F.0513:     ips0 = (ips-1)*grid%sr_x+1
frame/module_domain.F.0513:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F.0513:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F.0513:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F.0513:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F.0513:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F.0513:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F.0513:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F.0513:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F.0513:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F.0513:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F.0513:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F.0513:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F.0513:     ips0 = (ips-1)*grid%sr_x+1
frame/module_domain.F:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F:           ips = grid%sp31 ; ipe = grid%ep31 ; jps = grid%sp32 ; jpe = grid%ep32 ; kps = grid%sp33 ; kpe = grid%ep33 ; 
frame/module_domain.F:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp33  ; kpe = grid%ep33  ; 
frame/module_domain.F:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp32  ; jpe = grid%ep32  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F:           ips = grid%sp31  ; ipe = grid%ep31  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F:     ips0 = (ips-1)*grid%sr_x+1
frame/module_domain.F:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F:     ips0 = (ips-1)*grid%sr_x+1
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%rfield_2d(ips:ipf,jms:jme) = p%rfield_2d(ips+px:ipf+px,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%dfield_2d(ips:ipf,jms:jme) = p%dfield_2d(ips+px:ipf+px,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%ifield_2d(ips:ipf,jms:jme) = p%ifield_2d(ips+px:ipf+px,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%lfield_2d(ips:ipf,jms:jme) = p%lfield_2d(ips+px:ipf+px,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%rfield_3d(ips:ipf,:,jms:jme) = p%rfield_3d(ips+px:ipf+px,:,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%dfield_3d(ips:ipf,:,jms:jme) = p%dfield_3d(ips+px:ipf+px,:,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%ifield_3d(ips:ipf,:,jms:jme) = p%ifield_3d(ips+px:ipf+px,:,jms:jme)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%rfield_3d(ips:ipf,jms:jme,:) = p%rfield_3d(ips+px:ipf+px,jms:jme,:)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%dfield_3d(ips:ipf,jms:jme,:) = p%dfield_3d(ips+px:ipf+px,jms:jme,:)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                  p%ifield_3d(ips:ipf,jms:jme,:) = p%ifield_3d(ips+px:ipf+px,jms:jme,:)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%rfield_4d(ips:ipf,:,jms:jme,itrace) = p%rfield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%dfield_4d(ips:ipf,:,jms:jme,itrace) = p%dfield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%ifield_4d(ips:ipf,:,jms:jme,itrace) = p%ifield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%rfield_4d(ips:ipf,jms:jme,:,itrace) = p%rfield_4d(ips+px:ipf+px,jms:jme,:,itrace)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%dfield_4d(ips:ipf,jms:jme,:,itrace) = p%dfield_4d(ips+px:ipf+px,jms:jme,:,itrace)
frame/.svn/text-base/loop_based_x_shift_code.h.svn-base:                    p%ifield_4d(ips:ipf,jms:jme,:,itrace) = p%ifield_4d(ips+px:ipf+px,jms:jme,:,itrace)
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp31 ; ipe = grid%ep31 ; jps = grid%sp32 ; jpe = grid%ep32 ; kps = grid%sp33 ; kpe = grid%ep33 ; 
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp33  ; kpe = grid%ep33  ; 
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp32  ; jpe = grid%ep32  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp31  ; ipe = grid%ep31  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/.svn/text-base/module_domain.F.svn-base:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/.svn/text-base/module_domain.F.svn-base:     ips0 = (ips-1)*grid%sr_x+1
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/.svn/text-base/module_domain.F.svn-base:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/.svn/text-base/module_domain.F.svn-base:     ips0 = (ips-1)*grid%sr_x+1
frame/module_domain.F~:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F~:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F~:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F~:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F~:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F~:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F~:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F~:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F~:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F~:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F~:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F~:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F~:           ips = grid%sp31 ; ipe = grid%ep31 ; jps = grid%sp32 ; jpe = grid%ep32 ; kps = grid%sp33 ; kpe = grid%ep33 ; 
frame/module_domain.F~:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp33  ; kpe = grid%ep33  ; 
frame/module_domain.F~:           ips = grid%sp32  ; ipe = grid%ep32  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F~:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp32  ; jpe = grid%ep32  ; kps = grid%sp31  ; kpe = grid%ep31  ; 
frame/module_domain.F~:           ips = grid%sp31  ; ipe = grid%ep31  ; jps = grid%sp33  ; jpe = grid%ep33  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F~:           ips = grid%sp33  ; ipe = grid%ep33  ; jps = grid%sp31  ; jpe = grid%ep31  ; kps = grid%sp32  ; kpe = grid%ep32  ; 
frame/module_domain.F~:     ips0 = (ips-1)*grid%sr_x+1
frame/module_domain.F~:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F~:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F~:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp33x ; kpex = grid%ep33x ;
frame/module_domain.F~:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp33y ; kpey = grid%ep33y ;
frame/module_domain.F~:           ipsx = grid%sp32x ; ipex = grid%ep32x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F~:           ipsy = grid%sp32y ; ipey = grid%ep32y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F~:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp32x ; jpex = grid%ep32x ; kpsx = grid%sp31x ; kpex = grid%ep31x ;
frame/module_domain.F~:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp32y ; jpey = grid%ep32y ; kpsy = grid%sp31y ; kpey = grid%ep31y ;
frame/module_domain.F~:           ipsx = grid%sp31x ; ipex = grid%ep31x ; jpsx = grid%sp33x ; jpex = grid%ep33x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F~:           ipsy = grid%sp31y ; ipey = grid%ep31y ; jpsy = grid%sp33y ; jpey = grid%ep33y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F~:           ipsx = grid%sp33x ; ipex = grid%ep33x ; jpsx = grid%sp31x ; jpex = grid%ep31x ; kpsx = grid%sp32x ; kpex = grid%ep32x ;
frame/module_domain.F~:           ipsy = grid%sp33y ; ipey = grid%ep33y ; jpsy = grid%sp31y ; jpey = grid%ep31y ; kpsy = grid%sp32y ; kpey = grid%ep32y ;
frame/module_domain.F~:     ips0 = (ips-1)*grid%sr_x+1
frame/loop_based_x_shift_code.h:                  p%rfield_2d(ips:ipf,jms:jme) = p%rfield_2d(ips+px:ipf+px,jms:jme)
frame/loop_based_x_shift_code.h:                  p%dfield_2d(ips:ipf,jms:jme) = p%dfield_2d(ips+px:ipf+px,jms:jme)
frame/loop_based_x_shift_code.h:                  p%ifield_2d(ips:ipf,jms:jme) = p%ifield_2d(ips+px:ipf+px,jms:jme)
frame/loop_based_x_shift_code.h:                  p%lfield_2d(ips:ipf,jms:jme) = p%lfield_2d(ips+px:ipf+px,jms:jme)
frame/loop_based_x_shift_code.h:                  p%rfield_3d(ips:ipf,:,jms:jme) = p%rfield_3d(ips+px:ipf+px,:,jms:jme)
frame/loop_based_x_shift_code.h:                  p%dfield_3d(ips:ipf,:,jms:jme) = p%dfield_3d(ips+px:ipf+px,:,jms:jme)
frame/loop_based_x_shift_code.h:                  p%ifield_3d(ips:ipf,:,jms:jme) = p%ifield_3d(ips+px:ipf+px,:,jms:jme)
frame/loop_based_x_shift_code.h:                  p%rfield_3d(ips:ipf,jms:jme,:) = p%rfield_3d(ips+px:ipf+px,jms:jme,:)
frame/loop_based_x_shift_code.h:                  p%dfield_3d(ips:ipf,jms:jme,:) = p%dfield_3d(ips+px:ipf+px,jms:jme,:)
frame/loop_based_x_shift_code.h:                  p%ifield_3d(ips:ipf,jms:jme,:) = p%ifield_3d(ips+px:ipf+px,jms:jme,:)
frame/loop_based_x_shift_code.h:                    p%rfield_4d(ips:ipf,:,jms:jme,itrace) = p%rfield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/loop_based_x_shift_code.h:                    p%dfield_4d(ips:ipf,:,jms:jme,itrace) = p%dfield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/loop_based_x_shift_code.h:                    p%ifield_4d(ips:ipf,:,jms:jme,itrace) = p%ifield_4d(ips+px:ipf+px,:,jms:jme,itrace)
frame/loop_based_x_shift_code.h:                    p%rfield_4d(ips:ipf,jms:jme,:,itrace) = p%rfield_4d(ips+px:ipf+px,jms:jme,:,itrace)
frame/loop_based_x_shift_code.h:                    p%dfield_4d(ips:ipf,jms:jme,:,itrace) = p%dfield_4d(ips+px:ipf+px,jms:jme,:,itrace)
frame/loop_based_x_shift_code.h:                    p%ifield_4d(ips:ipf,jms:jme,:,itrace) = p%ifield_4d(ips+px:ipf+px,jms:jme,:,itrace)
main/wrf_comp_mct.F.0721:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0721:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0721:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0721:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0721:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0721:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0721:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0721:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0721:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0721:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0721:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.0721:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.0721:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0721:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0721:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0721:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0721:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0721:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0721:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0721:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0721:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0721:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0721:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0721:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0721:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0721:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0721:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0721:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0721:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.0513:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0513:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0513:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0513:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0513:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0513:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0513:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0513:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0513:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0513:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0513:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.0513:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.0513:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0513:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0513:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0513:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0513:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0513:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0513:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0513:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0513:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0513:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0513:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0513:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0513:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0513:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0513:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0513:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0513:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/nup_em.F:  ips = parent_grid%sp31
main/nup_em.F:         IF      ( ( parent_grid%ivgtyp(ips,jps) .GT. 0 ) .AND. &
main/nup_em.F:                   ( parent_grid%isltyp(ips,jps) .GT. 0 ) ) THEN
main/nup_em.F:         ELSE IF ( ( parent_grid% vegcat(ips,jps) .GT. 0.5 ) .AND. &
main/nup_em.F:                   ( parent_grid%soilcat(ips,jps) .GT. 0.5 ) ) THEN
main/tc_em.F:   ips = grid%sp31
main/wrf_comp_mct.F.xiugai:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.xiugai:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.xiugai:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.xiugai:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.xiugai:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.xiugai:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.xiugai:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.xiugai:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.xiugai:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.xiugai:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.xiugai:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.xiugai:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.xiugai:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.xiugai:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.xiugai:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.xiugai:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.xiugai:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.xiugai:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.xiugai:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.xiugai:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.xiugai:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.xiugai:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.xiugai:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.xiugai:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.xiugai:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.xiugai:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.xiugai:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.xiugai:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.xiugai:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/.svn/text-base/nup_em.F.svn-base:  ips = parent_grid%sp31
main/.svn/text-base/nup_em.F.svn-base:         IF      ( ( parent_grid%ivgtyp(ips,jps) .GT. 0 ) .AND. &
main/.svn/text-base/nup_em.F.svn-base:                   ( parent_grid%isltyp(ips,jps) .GT. 0 ) ) THEN
main/.svn/text-base/nup_em.F.svn-base:         ELSE IF ( ( parent_grid% vegcat(ips,jps) .GT. 0.5 ) .AND. &
main/.svn/text-base/nup_em.F.svn-base:                   ( parent_grid%soilcat(ips,jps) .GT. 0.5 ) ) THEN
main/.svn/text-base/real_nmm.F.svn-base:   ips = grid%sp31
main/.svn/text-base/ndown_em.F.svn-base:         ips = nested_grid%sp31
main/.svn/text-base/ndown_em.F.svn-base:      WRITE ( message , * ) 'MOUSTA_L', nested_grid%mu_2(ips,jps) , nested_grid%u_2(ips,kde-2,jps)
main/.svn/text-base/ndown_em.F.svn-base:      WRITE ( message , * ) 'MOUSTA_V', nested_grid%mu_2(ips,jps) , nested_grid%u_2(ips,kde-2,jps)
main/.svn/text-base/ndown_em.F.svn-base:         IF      ( ( nested_grid%ivgtyp(ips,jps) .GT. 0 ) .AND. &
main/.svn/text-base/ndown_em.F.svn-base:                   ( nested_grid%isltyp(ips,jps) .GT. 0 ) ) THEN
main/.svn/text-base/ndown_em.F.svn-base:         ELSE IF ( ( nested_grid% vegcat(ips,jps) .GT. 0.5 ) .AND. &
main/.svn/text-base/ndown_em.F.svn-base:                   ( nested_grid%soilcat(ips,jps) .GT. 0.5 ) ) THEN
main/.svn/text-base/ndown_em.F.svn-base:         cbdy3dtemp1(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/.svn/text-base/ndown_em.F.svn-base:         cbdy3dtemp2(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/.svn/text-base/ndown_em.F.svn-base:         cbdy3dtemp2(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/.svn/text-base/tc_em.F.svn-base:   ips = grid%sp31
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(z3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(u3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(v3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(w3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(t3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(q3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(p3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/.svn/text-base/wrf_comp_mct.F.svn-base:      allocate(q3d(ips:ipe,1:config_flags%num_metgrid_levels,jps:jpe))
main/ndown_em.F:         ips = nested_grid%sp31
main/ndown_em.F:      WRITE ( message , * ) 'MOUSTA_L', nested_grid%mu_2(ips,jps) , nested_grid%u_2(ips,kde-2,jps)
main/ndown_em.F:      WRITE ( message , * ) 'MOUSTA_V', nested_grid%mu_2(ips,jps) , nested_grid%u_2(ips,kde-2,jps)
main/ndown_em.F:         IF      ( ( nested_grid%ivgtyp(ips,jps) .GT. 0 ) .AND. &
main/ndown_em.F:                   ( nested_grid%isltyp(ips,jps) .GT. 0 ) ) THEN
main/ndown_em.F:         ELSE IF ( ( nested_grid% vegcat(ips,jps) .GT. 0.5 ) .AND. &
main/ndown_em.F:                   ( nested_grid%soilcat(ips,jps) .GT. 0.5 ) ) THEN
main/ndown_em.F:         cbdy3dtemp1(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/ndown_em.F:         cbdy3dtemp2(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/ndown_em.F:         cbdy3dtemp2(ips:ipe,kps:kpe,jps:jpe)=nested_grid%chem(ips:ipe,kps:kpe,jps:jpe,nvchem)
main/real_nmm.F:   ips = grid%sp31
main/wrf_comp_mct.F.0522.right:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522.right:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522.right:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522.right:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0522.right:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0522.right:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0522.right:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0522.right:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0522.right:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0522.right:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0522.right:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.0522.right:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.0522.right:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522.right:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522.right:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522.right:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522.right:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522.right:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522.right:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522.right:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522.right:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522.right:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522.right:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522.right:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522.right:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0522.right:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522.right:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522.right:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0522.right:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.w.F:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,k)
main/wrf_comp_mct.w.F:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,k)
main/wrf_comp_mct.w.F:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,k)
main/wrf_comp_mct.w.F:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.w.F:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.w.F:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.w.F:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.w.F:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.w.F:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.w.F:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.w.F:	    rhsf(i-ips+1,j-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.w.F:	    usf(i-ips+1,j-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.w.F:	    vsf(i-ips+1,j-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.w.F:	    tsf(i-ips+1,j-jps+1)  = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.w.F:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.w.F:            psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.w.F:	    hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.w.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.w.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.w.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.w.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.w.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.w.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.w.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.w.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.w.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.w.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.w.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.w.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.w.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.w.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.w.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.w.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.w.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.0519:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0519:!            u3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%u(i,k)  !by Huiqun Hao
main/wrf_comp_mct.F.0519:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0519:!            v3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%v(i,k)  !by Huiqun Hao
main/wrf_comp_mct.F.0519:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0519:!            t3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%t(i,k)  !by Huiqun Hao
main/wrf_comp_mct.F.0519:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0519:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%pmid(i,k)*b(grid%num_metgrid_levels-k+1)  !by Huiqun Hao
main/wrf_comp_mct.F.0519:            rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0519:!	    rh3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%rh(i,k) ! relative humidity, use w3d  !by Huiqun Hao
main/wrf_comp_mct.F.0519:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:!            rhsf(i-ips+1,j-jps+1) = cam_state(j)%rh(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:!            usf(i-ips+1,j-jps+1) = cam_state(j)%u(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:!            vsf(i-ips+1,j-jps+1) = cam_state(j)%v(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0519:!            tsf(i-ips+1,j-jps+1) = cam_state(j)%q(i,2,1) ! record the lowest level as surface          
main/wrf_comp_mct.F.0519:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0519:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.0519:!           psfcg(i-ips+1,j-jps+1) = cam_state(j)%ps(i)
main/wrf_comp_mct.F.0519:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.0519:!           hsf(i-ips+1,j-jps+1) = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.0519:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0519:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0519:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0519:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0519:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0519:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0519:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0519:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0519:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0519:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0519:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0519:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0519:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0519:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0519:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0519:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0519:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.ouhe:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,k)
main/wrf_comp_mct.F.ouhe:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,k)
main/wrf_comp_mct.F.ouhe:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,k)
main/wrf_comp_mct.F.ouhe:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.ouhe:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F.ouhe:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.ouhe:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.ouhe:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.ouhe:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.ouhe:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.ouhe:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.ouhe:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.ouhe:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.ouhe:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F.ouhe:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.ouhe:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F.ouhe:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.ouhe:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.ouhe:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.ouhe:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.ouhe:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.ouhe:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.ouhe:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.ouhe:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.ouhe:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.ouhe:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.ouhe:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.ouhe:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.ouhe:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.ouhe:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.ouhe:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.ouhe:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.ouhe:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.ouhe:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.wang.F:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.wang.F:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.wang.F:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.wang.F:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.wang.F:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.wang.F:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.wang.F:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.wang.F:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.wang.F:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.wang.F:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.wang.F:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.wang.F:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.wang.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.wang.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.wang.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.wang.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.wang.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.wang.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.wang.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.wang.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.wang.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.wang.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.wang.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.wang.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.wang.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.wang.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.wang.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.wang.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.wang.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.h.F:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.h.F:!            u3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%u(i,k)  !by Huiqun Hao
main/wrf_comp_mct.h.F:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.h.F:!            v3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%v(i,k)  !by Huiqun Hao
main/wrf_comp_mct.h.F:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.h.F:!            t3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%t(i,k)  !by Huiqun Hao
main/wrf_comp_mct.h.F:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.h.F:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%pmid(i,k)*b(grid%num_metgrid_levels-k+1)  !by Huiqun Hao
main/wrf_comp_mct.h.F:            rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.h.F:!	    rh3d(i-ips+1,k-1,j-jps+1) = cam_state(j)%rh(i,k) ! relative humidity, use w3d  !by Huiqun Hao
main/wrf_comp_mct.h.F:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.h.F:!            rhsf(i-ips+1,j-jps+1) = cam_state(j)%rh(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.h.F:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.h.F:!            usf(i-ips+1,j-jps+1) = cam_state(j)%u(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.h.F:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.h.F:!            vsf(i-ips+1,j-jps+1) = cam_state(j)%v(i,k-1) ! record the lowest level as surface
main/wrf_comp_mct.h.F:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.h.F:!            tsf(i-ips+1,j-jps+1) = cam_state(j)%q(i,2,1) ! record the lowest level as surface          
main/wrf_comp_mct.h.F:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.h.F:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.h.F:!           psfcg(i-ips+1,j-jps+1) = cam_state(j)%ps(i)
main/wrf_comp_mct.h.F:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.h.F:!           hsf(i-ips+1,j-jps+1) = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.h.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.h.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.h.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.h.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.h.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.h.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.h.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.h.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.h.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.h.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.h.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.h.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.h.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.h.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.h.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.h.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.h.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.tongguo.F:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,k)
main/wrf_comp_mct.tongguo.F:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,k)
main/wrf_comp_mct.tongguo.F:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,k)
main/wrf_comp_mct.tongguo.F:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.tongguo.F:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.tongguo.F:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.tongguo.F:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.tongguo.F:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.tongguo.F:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.tongguo.F:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.tongguo.F:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.tongguo.F:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.tongguo.F:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.tongguo.F:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.tongguo.F:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.tongguo.F:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.tongguo.F:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.tongguo.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.tongguo.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.tongguo.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.tongguo.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.tongguo.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.tongguo.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.tongguo.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.tongguo.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.tongguo.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.tongguo.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.tongguo.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.tongguo.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.tongguo.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.tongguo.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.tongguo.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.tongguo.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.tongguo.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.mine.F:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.mine.F:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.mine.F:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.mine.F:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.mine.F:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.mine.F:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.mine.F:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.mine.F:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.mine.F:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.mine.F:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.mine.F:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.mine.F:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.mine.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.mine.F:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.mine.F:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.mine.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.mine.F:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.mine.F:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.mine.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.mine.F:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.mine.F:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.mine.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.mine.F:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.mine.F:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.mine.F:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.mine.F:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.mine.F:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.mine.F:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.mine.F:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.yuanshi:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.yuanshi:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.yuanshi:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.yuanshi:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.yuanshi:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.yuanshi:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.yuanshi:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.yuanshi:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.yuanshi:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.yuanshi:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.yuanshi:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.yuanshi:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.yuanshi:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.yuanshi:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.yuanshi:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.yuanshi:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.yuanshi:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.yuanshi:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.yuanshi:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.yuanshi:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.yuanshi:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.yuanshi:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.yuanshi:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.yuanshi:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.yuanshi:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.yuanshi:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.yuanshi:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.yuanshi:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.yuanshi:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.beifen0605:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,k)
main/wrf_comp_mct.F.beifen0605:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,k)
main/wrf_comp_mct.F.beifen0605:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,k)
main/wrf_comp_mct.F.beifen0605:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.beifen0605:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F.beifen0605:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.beifen0605:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.beifen0605:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.beifen0605:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.beifen0605:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.beifen0605:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.beifen0605:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.beifen0605:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.beifen0605:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F.beifen0605:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.beifen0605:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F.beifen0605:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.beifen0605:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.beifen0605:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.beifen0605:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.beifen0605:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.beifen0605:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.beifen0605:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.beifen0605:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.beifen0605:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.beifen0605:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.beifen0605:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.beifen0605:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.beifen0605:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.beifen0605:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.beifen0605:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.beifen0605:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.beifen0605:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.beifen0605:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.111:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.111:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.111:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.111:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.111:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F.111:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.111:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.111:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.111:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.111:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F.111:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.111:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F.111:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.111:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.111:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.111:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.111:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.111:	  mgrid_wrf%ips = mgrid_atm%ips
main/wrf_comp_mct.F.111:	  mgrid_wrf%ipsx = mgrid_atm%ipsx
main/wrf_comp_mct.F.111:	  mgrid_wrf%ipsy = mgrid_atm%ipsy
main/wrf_comp_mct.F.111:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.0720:            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0720:	    rhsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    usf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    vsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-1)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    tsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_q3d(2)     ,ig) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:                                  287.0/9.81*(grid%psfc(i,j)/p3d(i-ips+1,1,j-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0720:           psfcg(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_ps      ,ig)
main/wrf_comp_mct.F.0720:	   hsf(i-ips+1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_phis  ,ig)/g ! record the terrain
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0720:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0720:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0720:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0720:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F.0720:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0720:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F.0720:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0720:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0720:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0720:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0720:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0720:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
main/wrf_comp_mct.F.0522:            u3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%u(i,k)
main/wrf_comp_mct.F.0522:            v3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%v(i,k)
main/wrf_comp_mct.F.0522:            t3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%t(i,k)
main/wrf_comp_mct.F.0522:            p3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + cam_state(j)%ps(i)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0522:	    rh3d(lons(i)-ips+1,k-1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-k+1) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0522:!            u3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_u3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522:!            v3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_v3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522:!            t3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_t3d(grid%num_metgrid_levels-k+1)     ,ig)
main/wrf_comp_mct.F.0522:!            p3d(i-ips+1,k-1,j-jps+1) = 100000.0_8*a(grid%num_metgrid_levels-k+1) + x2c_c%rAttr(index_x2w_Sx_ps      ,ig)*b(grid%num_metgrid_levels-k+1)
main/wrf_comp_mct.F.0522:!	    rh3d(i-ips+1,k-1,j-jps+1) = x2c_c%rAttr(index_x2w_Sx_w3d(grid%num_metgrid_levels-k+1)     ,ig) ! relative humidity, use w3d 
main/wrf_comp_mct.F.0522:	    rhsf(lons(i)-ips+1,lats(i)-jps+1) = cam_state(j)%rh(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0522:	    usf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%u(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0522:	    vsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%v(i,grid%num_metgrid_levels-1) ! record the lowest level as surface
main/wrf_comp_mct.F.0522:	    tsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_in(j)%tref(i) ! record the lowest level as surface
main/wrf_comp_mct.F.0522:                                  287.0/9.81*(grid%psfc(lons(i),lats(i))/p3d(lons(i)-ips+1,1,lats(i)-jps+1)-1)) !calculate the lowest level temperature
main/wrf_comp_mct.F.0522:            psfcg(lons(i)-ips+1,lats(i)-jps+1)= cam_state(j)%ps(i)
main/wrf_comp_mct.F.0522:	    hsf(lons(i)-ips+1,lats(i)-jps+1)  = cam_state(j)%phis(i)/g ! record the terrain
main/wrf_comp_mct.F.0522:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522:           grid%u3d(i,k,j) = u3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522:           grid%u3d(i,1,j) =usf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522:           grid%v3d(i,k,j) = v3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522:           grid%v3d(i,1,j) =vsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522:           grid%t3d(i,k,j) = t3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522:           grid%t3d(i,1,j) =tsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522:           grid%rh3d(i,k,j) = rh3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522:           grid%rh3d(i,1,j) =rhsf(i-ips+1,j-jps+1)
main/wrf_comp_mct.F.0522:           z3d(i-ips+1,k,j-jps+1) = grid%z3d(i,kstart+k-1,j)* 1.0_8
main/wrf_comp_mct.F.0522:               ,ipe-ips+1,jpe-jps+1,grid%num_metgrid_levels-1 &
main/wrf_comp_mct.F.0522:           grid%z3d(i,k,j) = z3d_int(i-ips+1,k,j-jps+1)
main/wrf_comp_mct.F.0522:               call geogrid(new_nest%id, ips, ipe, jps ,jpe, kps, kpe, &
main/wrf_comp_mct.F.0522:     real(8),dimension(mips:mipe,1:grid%num_metgrid_levels,mjps:mjpe) :: u1, u2, v1, v2, t1, t2, q1, q2 
prep/module_geogrid.F.badexample3:          print *, grid%xlat(ips,jps)
prep/.svn/text-base/module_real.F.svn-base:   ips = grid%sp31
prep/module_metgrid.F.0515-2:!         write(fort_test,*) 'jjr test: n=',n,'mgrid ips, ipe, jps, jpe, kps,kpe=',mgrid%ips,mgrid%ipe,mgrid%jps,mgrid%jpe,mgrid%kps,mgrid%kpe
prep/module_metgrid.F.0515-2:!         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsx, ipex, jpsx, jpex, kpsx,kpex=',mgrid%ipsx,mgrid%ipex,mgrid%jpsx,mgrid%jpex,mgrid%kpsx,mgrid%kpex
prep/module_metgrid.F.0515-2:!         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsy, ipey, jpsy, jpey, kpsy,kpey=',mgrid%ipsy,mgrid%ipey,mgrid%jpsy,mgrid%jpey,mgrid%kpsy,mgrid%kpey
prep/module_metgrid.F.0515:         write(fort_test,*) 'jjr test: n=',n,'mgrid ips, ipe, jps, jpe, kps,kpe=',mgrid%ips,mgrid%ipe,mgrid%jps,mgrid%jpe,mgrid%kps,mgrid%kpe
prep/module_metgrid.F.0515:         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsx, ipex, jpsx, jpex, kpsx,kpex=',mgrid%ipsx,mgrid%ipex,mgrid%jpsx,mgrid%jpex,mgrid%kpsx,mgrid%kpex
prep/module_metgrid.F.0515:         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsy, ipey, jpsy, jpey, kpsy,kpey=',mgrid%ipsy,mgrid%ipey,mgrid%jpsy,mgrid%jpey,mgrid%kpsy,mgrid%kpey
prep/module_real.F:         ips = grid%sp31
prep/module_bdy_prep.F:   ips = grid%sp31
prep/module_bdy_prep.F:   ips = grid%sp31
prep/module_bdy_prep.F:        ips = grid%sp31
share/mediation_integrate.F:    IPS = parent%sp31
share/mediation_integrate.F:    IPS = nest%sp31
share/wrf_timeseries.F:            IF (grid%itsloc(k) < ips .OR. grid%itsloc(k) > ipe .OR. &
share/.svn/text-base/wrf_timeseries.F.svn-base:            IF (grid%itsloc(k) < ips .OR. grid%itsloc(k) > ipe .OR. &
share/.svn/text-base/mediation_nest_move.F.svn-base:!    write(0,"(I3,1X,1000(I3))") J, (nest%imask_nostag(I,J), I = IPS, MIN(IPE,IDE-1) )
share/.svn/text-base/mediation_nest_move.F.svn-base:!    write(0,"(I3,3X,1000(I3))") J, (nest%imask_nostag(I,J), I = IPS, MIN(IPE,IDE-1) )
share/.svn/text-base/mediation_integrate.F.svn-base:    IPS = parent%sp31
share/.svn/text-base/mediation_integrate.F.svn-base:    IPS = nest%sp31
share/mediation_integrate.F.nocoupling:    IPS = parent%sp31
share/mediation_integrate.F.nocoupling:    IPS = nest%sp31
share/mediation_integrate.F.coupling:    IPS = parent%sp31
share/mediation_integrate.F.coupling:    IPS = nest%sp31
share/mediation_nest_move.F:!    write(0,"(I3,1X,1000(I3))") J, (nest%imask_nostag(I,J), I = IPS, MIN(IPE,IDE-1) )
share/mediation_nest_move.F:!    write(0,"(I3,3X,1000(I3))") J, (nest%imask_nostag(I,J), I = IPS, MIN(IPE,IDE-1) )
temp.txt:prep/module_metgrid.F:         write(fort_test,*) 'jjr test: n=',n,'mgrid ips, ipe, jps, jpe, kps,kpe=',mgrid%ips,mgrid%ipe,mgrid%jps,mgrid%jpe,mgrid%kps,mgrid%kpe
temp.txt:prep/module_metgrid.F:         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsx, ipex, jpsx, jpex, kpsx,kpex=',mgrid%ipsx,mgrid%ipex,mgrid%jpsx,mgrid%jpex,mgrid%kpsx,mgrid%kpex
temp.txt:prep/module_metgrid.F:         write(fort_test,*) 'jjr test: n=',n,'mgrid ipsy, ipey, jpsy, jpey, kpsy,kpey=',mgrid%ipsy,mgrid%ipey,mgrid%jpsy,mgrid%jpey,mgrid%kpsy,mgrid%kpey
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:         err (i) % ships % height = intplin (err (i) % level, err_k (1:JPERR),&
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:         err (i) % ships % pres = intplin (err (i) % level, err_k (1:JPERR),&
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:         err (i) % ships % temp = intplog (err (i) % level, err_k (1:JPERR), &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:         err (i) % ships % rh = intplog (err (i) % level, err_k  (1:JPERR), &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:         err_wind (i) % ships % wind = intplin (err_wind (i) % level, &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                        err_wind % ships % wind)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                err_wind % ships % wind)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                err_wind % ships % wind)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                        err % ships % pres)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                     err % ships % height)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                          err % ships % temp)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                                                 err % ships % rh)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line1, fmt_err) (err (i) % ships % height, i =  1,  5)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line2, fmt_err) (err (i) % ships % height, i =  6, 10)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line3, fmt_err) (err (i) % ships % height, i = 11, 15)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                err (i) % ships % height, &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line1, fmt_err) (err (i) % ships % wind, i = 26, 20,-1)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line2, fmt_err) (err (i) % ships % wind, i = 19, 13,-1)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line3, fmt_err) (err (i) % ships % wind, i = 12,  6,-1)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line4, fmt_err) (err (i) % ships % wind, i =  5,  1,-1), &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                err (i) % ships % wind, &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line1, fmt_err) (err (i) % ships % temp, i =  1,  5)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line2, fmt_err) (err (i) % ships % temp, i =  6, 10)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line3, fmt_err) (err (i) % ships % temp, i = 11, 15)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                err (i) % ships % temp, &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line1, fmt_err) (err (i) % ships % rh, i =  1,  5)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line2, fmt_err) (err (i) % ships % rh, i =  6, 10)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line3, fmt_err) (err (i) % ships % rh, i = 11, 15)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                err (i) % ships % rh, &
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line1, fmt_err) (err (i) % ships % pres, i =  1,  5)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line2, fmt_err) (err (i) % ships % pres, i =  6, 10)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                READ (line3, fmt_err) (err (i) % ships % pres, i = 11, 15)
var/obsproc/src/.svn/text-base/module_err_afwa.F90.svn-base:                err (i) % ships % pres / 100., &
var/obsproc/src/module_err_afwa.F90:         err (i) % ships % height = intplin (err (i) % level, err_k (1:JPERR),&
var/obsproc/src/module_err_afwa.F90:         err (i) % ships % pres = intplin (err (i) % level, err_k (1:JPERR),&
var/obsproc/src/module_err_afwa.F90:         err (i) % ships % temp = intplog (err (i) % level, err_k (1:JPERR), &
var/obsproc/src/module_err_afwa.F90:         err (i) % ships % rh = intplog (err (i) % level, err_k  (1:JPERR), &
var/obsproc/src/module_err_afwa.F90:         err_wind (i) % ships % wind = intplin (err_wind (i) % level, &
var/obsproc/src/module_err_afwa.F90:                                                        err_wind % ships % wind)
var/obsproc/src/module_err_afwa.F90:                                                err_wind % ships % wind)
var/obsproc/src/module_err_afwa.F90:                                                err_wind % ships % wind)
var/obsproc/src/module_err_afwa.F90:                                                        err % ships % pres)
var/obsproc/src/module_err_afwa.F90:                                                     err % ships % height)
var/obsproc/src/module_err_afwa.F90:                                                          err % ships % temp)
var/obsproc/src/module_err_afwa.F90:                                                 err % ships % rh)
var/obsproc/src/module_err_afwa.F90:                READ (line1, fmt_err) (err (i) % ships % height, i =  1,  5)
var/obsproc/src/module_err_afwa.F90:                READ (line2, fmt_err) (err (i) % ships % height, i =  6, 10)
var/obsproc/src/module_err_afwa.F90:                READ (line3, fmt_err) (err (i) % ships % height, i = 11, 15)
var/obsproc/src/module_err_afwa.F90:                err (i) % ships % height, &
var/obsproc/src/module_err_afwa.F90:                READ (line1, fmt_err) (err (i) % ships % wind, i = 26, 20,-1)
var/obsproc/src/module_err_afwa.F90:                READ (line2, fmt_err) (err (i) % ships % wind, i = 19, 13,-1)
var/obsproc/src/module_err_afwa.F90:                READ (line3, fmt_err) (err (i) % ships % wind, i = 12,  6,-1)
var/obsproc/src/module_err_afwa.F90:                READ (line4, fmt_err) (err (i) % ships % wind, i =  5,  1,-1), &
var/obsproc/src/module_err_afwa.F90:                err (i) % ships % wind, &
var/obsproc/src/module_err_afwa.F90:                READ (line1, fmt_err) (err (i) % ships % temp, i =  1,  5)
var/obsproc/src/module_err_afwa.F90:                READ (line2, fmt_err) (err (i) % ships % temp, i =  6, 10)
var/obsproc/src/module_err_afwa.F90:                READ (line3, fmt_err) (err (i) % ships % temp, i = 11, 15)
var/obsproc/src/module_err_afwa.F90:                err (i) % ships % temp, &
var/obsproc/src/module_err_afwa.F90:                READ (line1, fmt_err) (err (i) % ships % rh, i =  1,  5)
var/obsproc/src/module_err_afwa.F90:                READ (line2, fmt_err) (err (i) % ships % rh, i =  6, 10)
var/obsproc/src/module_err_afwa.F90:                READ (line3, fmt_err) (err (i) % ships % rh, i = 11, 15)
var/obsproc/src/module_err_afwa.F90:                err (i) % ships % rh, &
var/obsproc/src/module_err_afwa.F90:                READ (line1, fmt_err) (err (i) % ships % pres, i =  1,  5)
var/obsproc/src/module_err_afwa.F90:                READ (line2, fmt_err) (err (i) % ships % pres, i =  6, 10)
var/obsproc/src/module_err_afwa.F90:                READ (line3, fmt_err) (err (i) % ships % pres, i = 11, 15)
var/obsproc/src/module_err_afwa.F90:                err (i) % ships % pres / 100., &
var/obsproc/MAP_plot/Dir_map/Map.F.new:      IF (ob % num_ships .GT. 0) 
var/obsproc/MAP_plot/Dir_map/Map.F.new:     >CALL PLSTN1(mmi,mmj,ob % num_ships, ob % ships(:) % info % lat,
var/obsproc/MAP_plot/Dir_map/Map.F.new:     >                                    ob % ships(:) % info % lon,
var/obsproc/MAP_plot/Dir_map/Map.F.new:     >                                    ob % ships(:) % info %  id,
var/obsproc/MAP_plot/Dir_map/Map.F.new:     >                     ob % ships(:) % info % date_char(1:19), 
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:   ob % num_ships = 0
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:         if(ob % num_ships >= max_ships_input) cycle reports
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:         ob % num_ships  = ob % num_ships  + 1
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:         ob % ships  ( ob % num_ships  ) % info = platform % info
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:         ob % ships  ( ob % num_ships  ) % loc  = platform % loc
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:         ob % ships  ( ob % num_ships  ) % each = platform % each(1)
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:        'Read:  ', ob % num_ships ,' SHIP  reports,', &
var/obsproc/MAP_plot/Dir_map/DA_Read_Obs.inc:                 - ob % num_metar - ob % num_ships &
var/obsproc/MAP_plot/Dir_map/Map.F:      IF (ob % num_ships .GT. 0) 
var/obsproc/MAP_plot/Dir_map/Map.F:     >CALL PLSTN1(mmi,mmj,ob % num_ships, ob % ships(:) % info % lat,
var/obsproc/MAP_plot/Dir_map/Map.F:     >                                    ob % ships(:) % info % lon,
var/obsproc/MAP_plot/Dir_map/Map.F:     >                                    ob % ships(:) % info %  id,
var/obsproc/MAP_plot/Dir_map/Map.F:     >                     ob % ships(:) % info % date_char(1:19), 
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.svn-base:      IF (ob % num_ships .GT. 0) 
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.svn-base:     >CALL PLSTN1(mmi,mmj,ob % num_ships, ob % ships(:) % info % lat,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.svn-base:     >                                    ob % ships(:) % info % lon,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.svn-base:     >                                    ob % ships(:) % info %  id,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.svn-base:     >                     ob % ships(:) % info % date_char(1:19), 
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:   ob % num_ships = 0
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:         if(ob % num_ships >= max_ships_input) cycle reports
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:         ob % num_ships  = ob % num_ships  + 1
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:         ob % ships  ( ob % num_ships  ) % info = platform % info
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:         ob % ships  ( ob % num_ships  ) % loc  = platform % loc
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:         ob % ships  ( ob % num_ships  ) % each = platform % each(1)
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:        'Read:  ', ob % num_ships ,' SHIP  reports,', &
var/obsproc/MAP_plot/Dir_map/.svn/text-base/DA_Read_Obs.inc.svn-base:                 - ob % num_metar - ob % num_ships &
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.new.svn-base:      IF (ob % num_ships .GT. 0) 
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.new.svn-base:     >CALL PLSTN1(mmi,mmj,ob % num_ships, ob % ships(:) % info % lat,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.new.svn-base:     >                                    ob % ships(:) % info % lon,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.new.svn-base:     >                                    ob % ships(:) % info %  id,
var/obsproc/MAP_plot/Dir_map/.svn/text-base/Map.F.new.svn-base:     >                     ob % ships(:) % info % date_char(1:19), 
var/convertor/kma_netcdf/.svn/text-base/module_kma2netcdf_interface.f90.svn-base:   ips = grid%sp31 
var/convertor/kma_netcdf/.svn/text-base/module_kma2netcdf_interface.f90.svn-base:   xp%ipsx = grid%sp31x
var/convertor/kma_netcdf/.svn/text-base/module_kma2netcdf_interface.f90.svn-base:   xp%ipsy = grid%sp31y
var/convertor/kma_netcdf/.svn/text-base/module_kma2netcdf_interface.f90.svn-base:   xp%ips = ips
var/convertor/kma_netcdf/module_kma2netcdf_interface.f90:   ips = grid%sp31 
var/convertor/kma_netcdf/module_kma2netcdf_interface.f90:   xp%ipsx = grid%sp31x
var/convertor/kma_netcdf/module_kma2netcdf_interface.f90:   xp%ipsy = grid%sp31y
var/convertor/kma_netcdf/module_kma2netcdf_interface.f90:   xp%ips = ips
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      allocate (model_psfc(iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_transform_xtoy_ships_adj.inc:         model_u(1,n)  = jo_grad_y%ships(n)%u
var/da/da_ships/da_transform_xtoy_ships_adj.inc:         model_v(1,n)  = jo_grad_y%ships(n)%v
var/da/da_ships/da_transform_xtoy_ships_adj.inc:         model_t(1,n)  = jo_grad_y%ships(n)%t
var/da/da_ships/da_transform_xtoy_ships_adj.inc:         model_q(1,n)  = jo_grad_y%ships(n)%q
var/da/da_ships/da_transform_xtoy_ships_adj.inc:         model_psfc(n) = jo_grad_y%ships(n)%p
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%u, iv%info(ships), model_u,'u')
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%v, iv%info(ships), model_v,'v')
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%u, iv%info(ships), model_u)
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%v, iv%info(ships), model_v)
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%t, iv%info(ships), model_t)
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_3d_adj (jo_grad_x%q, iv%info(ships), model_q)
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_interp_lin_2d_adj (jo_grad_x%psfc, iv%info(ships), 1, model_psfc)
var/da/da_ships/da_transform_xtoy_ships_adj.inc:      call da_transform_xtopsfc_adj(grid,iv,ships,iv%ships(:), jo_grad_y%ships(:),jo_grad_x)
var/da/da_ships/da_check_max_iv_ships.inc:   do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%ships(n)%u%qc >= obs_qc_pointer ) then 
var/da/da_ships/da_check_max_iv_ships.inc:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%u, max_error_uv, failed)
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/da_check_max_iv_ships.inc:           'ships',ob_vars(1),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%ships(n)%v%qc >= obs_qc_pointer )  then 
var/da/da_ships/da_check_max_iv_ships.inc:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%v, max_error_uv, failed)             
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/da_check_max_iv_ships.inc:           'ships',ob_vars(2),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%ships(n)%t%qc >= obs_qc_pointer )  then
var/da/da_ships/da_check_max_iv_ships.inc:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%t, max_error_t , failed)
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/da_check_max_iv_ships.inc:           'ships',ob_vars(3),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%ships(n)%p%qc >= obs_qc_pointer ) then 
var/da/da_ships/da_check_max_iv_ships.inc:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%p, max_error_p , failed)         
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/da_check_max_iv_ships.inc:           'ships',ob_vars(5),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%ships(n)%q%qc >= obs_qc_pointer ) then
var/da/da_ships/da_check_max_iv_ships.inc:       if( iv%ships(n)%t%qc == fails_error_max .or. iv%ships(n)%p%qc == fails_error_max) then
var/da/da_ships/da_check_max_iv_ships.inc:       iv%ships(n)%q%qc  = fails_error_max
var/da/da_ships/da_check_max_iv_ships.inc:       iv%ships(n)%q%inv = 0.0
var/da/da_ships/da_check_max_iv_ships.inc:       call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%q, max_error_q , failed)
var/da/da_ships/da_check_max_iv_ships.inc:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/da_check_max_iv_ships.inc:           'ships',ob_vars(4),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_u = 0.0
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_v = 0.0
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_t = 0.0
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_p = 0.0
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_q = 0.0
var/da/da_ships/da_jo_and_grady_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/da_jo_and_grady_ships.inc:      jo_grad_y%ships(n)%u = -re%ships(n)%u / &
var/da/da_ships/da_jo_and_grady_ships.inc:         (iv%ships(n)%u%error * iv%ships(n)%u%error)
var/da/da_ships/da_jo_and_grady_ships.inc:      jo_grad_y%ships(n)%v = -re%ships(n)%v / &
var/da/da_ships/da_jo_and_grady_ships.inc:         (iv%ships(n)%v%error * iv%ships(n)%v%error)
var/da/da_ships/da_jo_and_grady_ships.inc:      jo_grad_y%ships(n)%t = -re%ships(n)%t / &
var/da/da_ships/da_jo_and_grady_ships.inc:         (iv%ships(n)%t%error * iv%ships(n)%t%error)
var/da/da_ships/da_jo_and_grady_ships.inc:      jo_grad_y%ships(n)%p = -re%ships(n)%p / &
var/da/da_ships/da_jo_and_grady_ships.inc:         (iv%ships(n)%p%error * iv%ships(n)%p%error)
var/da/da_ships/da_jo_and_grady_ships.inc:      jo_grad_y%ships(n)%q = -re%ships(n)%q / &
var/da/da_ships/da_jo_and_grady_ships.inc:         (iv%ships(n)%q%error * iv%ships(n)%q%error)
var/da/da_ships/da_jo_and_grady_ships.inc:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/da_jo_and_grady_ships.inc:         jo % ships_u = jo % ships_u - re%ships(n)%u * jo_grad_y%ships(n)%u
var/da/da_ships/da_jo_and_grady_ships.inc:         jo % ships_v = jo % ships_v - re%ships(n)%v * jo_grad_y%ships(n)%v
var/da/da_ships/da_jo_and_grady_ships.inc:         jo % ships_t = jo % ships_t - re%ships(n)%t * jo_grad_y%ships(n)%t
var/da/da_ships/da_jo_and_grady_ships.inc:         jo % ships_p = jo % ships_p - re%ships(n)%p * jo_grad_y%ships(n)%p
var/da/da_ships/da_jo_and_grady_ships.inc:         jo % ships_q = jo % ships_q - re%ships(n)%q * jo_grad_y%ships(n)%q
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_u = 0.5 * jo % ships_u
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_v = 0.5 * jo % ships_v
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_t = 0.5 * jo % ships_t
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_p = 0.5 * jo % ships_p
var/da/da_ships/da_jo_and_grady_ships.inc:   jo % ships_q = 0.5 * jo % ships_q
var/da/da_ships/da_oi_stats_ships.inc:   stats%average = residual_ships1_type(0.0, 0.0, 0.0, 0.0, 0.0)
var/da/da_ships/da_oi_stats_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/da_oi_stats_ships.inc:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/da_oi_stats_ships.inc:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/da_oi_stats_ships.inc:            0, iv%ships(n)%u%qc, &
var/da/da_ships/da_oi_stats_ships.inc:            iv%ships(n)%u%inv, nu, &
var/da/da_ships/da_oi_stats_ships.inc:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/da_oi_stats_ships.inc:            0, iv%ships(n)%v%qc, &
var/da/da_ships/da_oi_stats_ships.inc:            iv%ships(n)%v%inv, nv, &
var/da/da_ships/da_oi_stats_ships.inc:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/da_oi_stats_ships.inc:            0, iv%ships(n)%t%qc, &
var/da/da_ships/da_oi_stats_ships.inc:            iv%ships(n)%t%inv, nt, &
var/da/da_ships/da_oi_stats_ships.inc:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/da_oi_stats_ships.inc:            0, iv%ships(n)%p%qc, &
var/da/da_ships/da_oi_stats_ships.inc:            iv%ships(n)%p%inv, np, &
var/da/da_ships/da_oi_stats_ships.inc:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/da_oi_stats_ships.inc:            0, iv%ships(n)%q%qc, &
var/da/da_ships/da_oi_stats_ships.inc:            iv%ships(n)%q%inv, nq, &
var/da/da_ships/da_oi_stats_ships.inc:      end if    ! end if (iv%info(ships)%proc_domain(1,n))
var/da/da_ships/da_calculate_grady_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/da_calculate_grady_ships.inc:      if (iv%ships(n)%u%qc < obs_qc_pointer) re%ships(n)%u = 0.0
var/da/da_ships/da_calculate_grady_ships.inc:      if (iv%ships(n)%v%qc < obs_qc_pointer) re%ships(n)%v = 0.0
var/da/da_ships/da_calculate_grady_ships.inc:      if (iv%ships(n)%t%qc < obs_qc_pointer) re%ships(n)%t = 0.0
var/da/da_ships/da_calculate_grady_ships.inc:      if (iv%ships(n)%p%qc < obs_qc_pointer) re%ships(n)%p = 0.0
var/da/da_ships/da_calculate_grady_ships.inc:      if (iv%ships(n)%q%qc < obs_qc_pointer) re%ships(n)%q = 0.0
var/da/da_ships/da_calculate_grady_ships.inc:      jo_grad_y%ships(n)%u = -re%ships(n)%u / (iv%ships(n)%u%error * iv%ships(n)%u%error)
var/da/da_ships/da_calculate_grady_ships.inc:      jo_grad_y%ships(n)%v = -re%ships(n)%v / (iv%ships(n)%v%error * iv%ships(n)%v%error)
var/da/da_ships/da_calculate_grady_ships.inc:      jo_grad_y%ships(n)%t = -re%ships(n)%t / (iv%ships(n)%t%error * iv%ships(n)%t%error)
var/da/da_ships/da_calculate_grady_ships.inc:      jo_grad_y%ships(n)%p = -re%ships(n)%p / (iv%ships(n)%p%error * iv%ships(n)%p%error)
var/da/da_ships/da_calculate_grady_ships.inc:      jo_grad_y%ships(n)%q = -re%ships(n)%q / (iv%ships(n)%q%error * iv%ships(n)%q%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_u = 0.0
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_v = 0.0
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_t = 0.0
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_p = 0.0
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_q = 0.0
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%u = -re%ships(n)%u / &
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         (iv%ships(n)%u%error * iv%ships(n)%u%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%v = -re%ships(n)%v / &
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         (iv%ships(n)%v%error * iv%ships(n)%v%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%t = -re%ships(n)%t / &
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         (iv%ships(n)%t%error * iv%ships(n)%t%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%p = -re%ships(n)%p / &
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         (iv%ships(n)%p%error * iv%ships(n)%p%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%q = -re%ships(n)%q / &
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         (iv%ships(n)%q%error * iv%ships(n)%q%error)
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         jo % ships_u = jo % ships_u - re%ships(n)%u * jo_grad_y%ships(n)%u
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         jo % ships_v = jo % ships_v - re%ships(n)%v * jo_grad_y%ships(n)%v
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         jo % ships_t = jo % ships_t - re%ships(n)%t * jo_grad_y%ships(n)%t
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         jo % ships_p = jo % ships_p - re%ships(n)%p * jo_grad_y%ships(n)%p
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:         jo % ships_q = jo % ships_q - re%ships(n)%q * jo_grad_y%ships(n)%q
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_u = 0.5 * jo % ships_u
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_v = 0.5 * jo % ships_v
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_t = 0.5 * jo % ships_t
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_p = 0.5 * jo % ships_p
var/da/da_ships/.svn/text-base/da_jo_and_grady_ships.inc.svn-base:   jo % ships_q = 0.5 * jo % ships_q
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      if (iv%ships(n)%u%qc < obs_qc_pointer) re%ships(n)%u = 0.0
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      if (iv%ships(n)%v%qc < obs_qc_pointer) re%ships(n)%v = 0.0
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      if (iv%ships(n)%t%qc < obs_qc_pointer) re%ships(n)%t = 0.0
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      if (iv%ships(n)%p%qc < obs_qc_pointer) re%ships(n)%p = 0.0
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      if (iv%ships(n)%q%qc < obs_qc_pointer) re%ships(n)%q = 0.0
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%u = -re%ships(n)%u / (iv%ships(n)%u%error * iv%ships(n)%u%error)
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%v = -re%ships(n)%v / (iv%ships(n)%v%error * iv%ships(n)%v%error)
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%t = -re%ships(n)%t / (iv%ships(n)%t%error * iv%ships(n)%t%error)
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%p = -re%ships(n)%p / (iv%ships(n)%p%error * iv%ships(n)%p%error)
var/da/da_ships/.svn/text-base/da_calculate_grady_ships.inc.svn-base:      jo_grad_y%ships(n)%q = -re%ships(n)%q / (iv%ships(n)%q%error * iv%ships(n)%q%error)
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:   stats%average = residual_ships1_type(0.0, 0.0, 0.0, 0.0, 0.0)
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            0, iv%ships(n)%u%qc, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            iv%ships(n)%u%inv, nu, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            0, iv%ships(n)%v%qc, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            iv%ships(n)%v%inv, nv, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            0, iv%ships(n)%t%qc, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            iv%ships(n)%t%inv, nt, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            0, iv%ships(n)%p%qc, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            iv%ships(n)%p%inv, np, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:         call da_stats_calculate(iv%info(ships)%obs_global_index(n), &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            0, iv%ships(n)%q%qc, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:            iv%ships(n)%q%inv, nq, &
var/da/da_ships/.svn/text-base/da_oi_stats_ships.inc.svn-base:      end if    ! end if (iv%info(ships)%proc_domain(1,n))
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:   stats%average = residual_ships1_type(0.0, 0.0, 0.0, 0.0, 0.0)
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:         call da_stats_calculate (n, 0, iv%ships(n)%u%qc, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:             re%ships(n)%u, nu, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:         call da_stats_calculate (n, 0, iv%ships(n)%v%qc, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:            re%ships(n)%v, nv, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:         call da_stats_calculate (n, 0, iv%ships(n)%t%qc, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:            re%ships(n)%t, nt, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:         call da_stats_calculate (n, 0, iv%ships(n)%p%qc, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:            re%ships(n)%p, np, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:         call da_stats_calculate (n, 0, iv%ships(n)%q%qc, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:            re%ships(n)%q, nq, & 
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:      end if    ! end if (iv%info(ships)%proc_domain(1,n))
var/da/da_ships/.svn/text-base/da_ao_stats_ships.inc.svn-base:   iv%nstats(ships) = nu + nv + nt + np + nq
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_p(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   allocate (model_hsm(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%u%qc == fails_error_max) iv%ships(n)%u%qc = 0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%v%qc == fails_error_max) iv%ships(n)%v%qc = 0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%t%qc == fails_error_max) iv%ships(n)%t%qc = 0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%p%qc == fails_error_max) iv%ships(n)%p%qc = 0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%q%qc == fails_error_max) iv%ships(n)%q%qc = 0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         i   = iv%info(ships)%i(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         j   = iv%info(ships)%j(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         dx  = iv%info(ships)%dx(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         dy  = iv%info(ships)%dy(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         dxm = iv%info(ships)%dxm(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         dym = iv%info(ships)%dym(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%p%inv = ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%t%inv = ob%ships(n)%t
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%q%inv = ob%ships(n)%q
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%u%inv = ob%ships(n)%u
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%v%inv = ob%ships(n)%v
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv % ships(n) % h > missing_r) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            hd = v_h(kts) - iv % ships(n) % h
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               if (iv % ships(n) % h < v_h(kts)) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:                  iv%info(ships)%zk(:,n) = 1.0+1.0e-6
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:                  call da_obs_sfc_correction(iv%info(ships), iv%ships(n), n, grid%xb)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:                  call da_to_zk(iv % ships(n) % h, v_h, v_interp_h, iv%info(ships)%zk(1,n))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         else if (ob % ships(n) % p > 1.0) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            call da_to_zk(ob % ships(n) % p, v_p, v_interp_p, iv%info(ships)%zk(1,n))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            if (iv%info(ships)%zk(1,n) < 0.0 .and.  .not.anal_type_verify) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % p % inv = missing_r
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % p % qc  = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv%info(ships)%zk(:,n) = 1.0+1.0e-6
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_convert_zk (iv%info(ships))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            if (iv%info(ships)%zk(1,n) < 0.0) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % u % qc = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % v % qc = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % t % qc = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % q % qc = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               iv % ships(n) % p % qc = missing_data
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%u, iv%info(ships), model_u,'u')
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%v, iv%info(ships), model_v,'v')
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%u, iv%info(ships), model_u)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%v, iv%info(ships), model_v)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%t, iv%info(ships), model_t)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%q, iv%info(ships), model_q)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_3d (grid%xb%p, iv%info(ships), model_p)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_2d (grid%xb%u10,  iv%info(ships), 1, model_u)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_2d (grid%xb%v10,  iv%info(ships), 1, model_v)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_2d (grid%xb%t2,   iv%info(ships), 1, model_t)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_2d (grid%xb%q2,   iv%info(ships), 1, model_q)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      call da_interp_lin_2d (grid%xb%psfc, iv%info(ships), 1, model_p)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%p%inv = ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%t%inv = ob%ships(n)%t
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%q%inv = ob%ships(n)%q
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%u%inv = ob%ships(n)%u
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv%ships(n)%v%inv = ob%ships(n)%v
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         if (iv%ships(n)%p%qc >= 0) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            call da_interp_lin_2d_partial (grid%xb%terr, iv%info(ships), 1, n, n, model_hsm(:,n))
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            ho = iv%ships(n)%h
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            if (iv%ships(n)%t%qc >= 0 .and. iv%ships(n)%q%qc >= 0) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               to = ob%ships(n)%t
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:               qo = ob%ships(n)%q
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:            else if (iv%ships(n)%t%qc >= 0 .and. iv%ships(n)%q%qc < 0) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:                to = ob%ships(n)%t
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:   do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      if (ob % ships(n) % u > missing_r .AND. iv % ships(n) % u % qc >= obs_qc_pointer) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % u % inv = iv%ships(n)%u%inv - model_u(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % u % inv = 0.0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      if (ob % ships(n) % v > missing_r .AND. iv % ships(n) % v % qc >= obs_qc_pointer) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % v % inv = iv%ships(n)%v%inv - model_v(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % v % inv = 0.0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      if (ob % ships(n) % p > 0.0 .AND. iv % ships(n) % p % qc >= obs_qc_pointer) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % p % inv = iv%ships(n)%p%inv - model_p(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % p % inv = 0.0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      if (ob % ships(n) % t > 0.0 .AND. iv % ships(n) % t % qc >= obs_qc_pointer) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % t % inv = iv%ships(n)%t%inv - model_t(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % t % inv = 0.0
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:      if (ob % ships(n) % q > 0.0 .AND. iv % ships(n) % q % qc >= obs_qc_pointer) then
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % q % inv = iv%ships(n)%q%inv - model_q(1,n)
var/da/da_ships/.svn/text-base/da_get_innov_vector_ships.inc.svn-base:         iv % ships(n) % q % inv = 0.0
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:      ' Minimum(n,k): ', ships%minimum%u, ships%minimum%v, ships%minimum%t, &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         ships%minimum%p, ships%minimum%q, &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:      ' Maximum(n,k): ', ships%maximum%u, ships%maximum%v, ships%maximum%t, &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         ships%maximum%p, ships%maximum%q
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:      ' Average     : ', ships%average%u/real(nu), ships%average%v/real(nv), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         ships%average%t/real(nt), ships%average%p/real(np), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         ships%average%q/real(nq), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:      '    RMSE     : ', sqrt(ships%rms_err%u/real(nu)), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         sqrt(ships%rms_err%v/real(nv)), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         sqrt(ships%rms_err%t/real(nt)), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         sqrt(ships%rms_err%p/real(np)), &
var/da/da_ships/.svn/text-base/da_print_stats_ships.inc.svn-base:                         sqrt(ships%rms_err%q/real(nq))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      allocate (model_psfc(iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:         model_u(1,n)  = jo_grad_y%ships(n)%u
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:         model_v(1,n)  = jo_grad_y%ships(n)%v
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:         model_t(1,n)  = jo_grad_y%ships(n)%t
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:         model_q(1,n)  = jo_grad_y%ships(n)%q
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:         model_psfc(n) = jo_grad_y%ships(n)%p
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%u, iv%info(ships), model_u,'u')
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%v, iv%info(ships), model_v,'v')
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%u, iv%info(ships), model_u)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%v, iv%info(ships), model_v)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%t, iv%info(ships), model_t)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_3d_adj (jo_grad_x%q, iv%info(ships), model_q)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_interp_lin_2d_adj (jo_grad_x%psfc, iv%info(ships), 1, model_psfc)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships_adj.inc.svn-base:      call da_transform_xtopsfc_adj(grid,iv,ships,iv%ships(:), jo_grad_y%ships(:),jo_grad_x)
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:      re%ships(n)%u = da_residual(n, 0, y%ships(n)%u, iv%ships(n)%u, n_obs_bad % u)
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:      re%ships(n)%v = da_residual(n, 0, y%ships(n)%v, iv%ships(n)%v, n_obs_bad % v)
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:      re%ships(n)%t = da_residual(n, 0, y%ships(n)%t, iv%ships(n)%t, n_obs_bad % t)
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:      re%ships(n)%p = da_residual(n, 0, y%ships(n)%p, iv%ships(n)%p, n_obs_bad % p)
var/da/da_ships/.svn/text-base/da_residual_ships.inc.svn-base:      re%ships(n)%q = da_residual(n, 0, y%ships(n)%q, iv%ships(n)%q, n_obs_bad % q)
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:   do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%ships(n)%u%qc >= obs_qc_pointer ) then 
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%u, max_error_uv, failed)
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:           'ships',ob_vars(1),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%ships(n)%v%qc >= obs_qc_pointer )  then 
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%v, max_error_uv, failed)             
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:           'ships',ob_vars(2),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%ships(n)%t%qc >= obs_qc_pointer )  then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%t, max_error_t , failed)
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:           'ships',ob_vars(3),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%ships(n)%p%qc >= obs_qc_pointer ) then 
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%p, max_error_p , failed)         
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:           'ships',ob_vars(5),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%ships(n)%q%qc >= obs_qc_pointer ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:       if( iv%ships(n)%t%qc == fails_error_max .or. iv%ships(n)%p%qc == fails_error_max) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:       iv%ships(n)%q%qc  = fails_error_max
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:       iv%ships(n)%q%inv = 0.0
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:       call da_max_error_qc (it, iv%info(ships), n, iv%ships(n)%q, max_error_q , failed)
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:      if( iv%info(ships)%proc_domain(1,n) ) then
var/da/da_ships/.svn/text-base/da_check_max_iv_ships.inc.svn-base:           'ships',ob_vars(4),iv%info(ships)%lat(1,n),iv%info(ships)%lon(1,n),0.01*ob%ships(n)%p
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      allocate (model_psfc(iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%u, iv%info(ships), model_u,'u')
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%v, iv%info(ships), model_v,'v')
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%u, iv%info(ships), model_u)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%v, iv%info(ships), model_v)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%t, iv%info(ships), model_t)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_3d (grid%xa%q, iv%info(ships), model_q)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_interp_lin_2d (grid%xa%psfc, iv%info(ships), 1, model_psfc)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:         y%ships(n)%u = model_u(1,n)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:         y%ships(n)%v = model_v(1,n)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:         y%ships(n)%t = model_t(1,n)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:         y%ships(n)%q = model_q(1,n)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:         y%ships(n)%p = model_psfc(n)
var/da/da_ships/.svn/text-base/da_transform_xtoy_ships.inc.svn-base:      call da_transform_xtopsfc(grid,iv,ships,iv%ships(:),y%ships(:))
var/da/da_ships/da_transform_xtoy_ships.inc:      allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships.inc:      allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships.inc:      allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships.inc:      allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships.inc:      allocate (model_psfc(iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%u, iv%info(ships), model_u,'u')
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%v, iv%info(ships), model_v,'v')
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%u, iv%info(ships), model_u)
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%v, iv%info(ships), model_v)
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%t, iv%info(ships), model_t)
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_3d (grid%xa%q, iv%info(ships), model_q)
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_interp_lin_2d (grid%xa%psfc, iv%info(ships), 1, model_psfc)
var/da/da_ships/da_transform_xtoy_ships.inc:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_transform_xtoy_ships.inc:         y%ships(n)%u = model_u(1,n)
var/da/da_ships/da_transform_xtoy_ships.inc:         y%ships(n)%v = model_v(1,n)
var/da/da_ships/da_transform_xtoy_ships.inc:         y%ships(n)%t = model_t(1,n)
var/da/da_ships/da_transform_xtoy_ships.inc:         y%ships(n)%q = model_q(1,n)
var/da/da_ships/da_transform_xtoy_ships.inc:         y%ships(n)%p = model_psfc(n)
var/da/da_ships/da_transform_xtoy_ships.inc:      call da_transform_xtopsfc(grid,iv,ships,iv%ships(:),y%ships(:))
var/da/da_ships/da_ao_stats_ships.inc:   stats%average = residual_ships1_type(0.0, 0.0, 0.0, 0.0, 0.0)
var/da/da_ships/da_ao_stats_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/da_ao_stats_ships.inc:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_ships/da_ao_stats_ships.inc:         call da_stats_calculate (n, 0, iv%ships(n)%u%qc, & 
var/da/da_ships/da_ao_stats_ships.inc:             re%ships(n)%u, nu, & 
var/da/da_ships/da_ao_stats_ships.inc:         call da_stats_calculate (n, 0, iv%ships(n)%v%qc, & 
var/da/da_ships/da_ao_stats_ships.inc:            re%ships(n)%v, nv, & 
var/da/da_ships/da_ao_stats_ships.inc:         call da_stats_calculate (n, 0, iv%ships(n)%t%qc, & 
var/da/da_ships/da_ao_stats_ships.inc:            re%ships(n)%t, nt, & 
var/da/da_ships/da_ao_stats_ships.inc:         call da_stats_calculate (n, 0, iv%ships(n)%p%qc, & 
var/da/da_ships/da_ao_stats_ships.inc:            re%ships(n)%p, np, & 
var/da/da_ships/da_ao_stats_ships.inc:         call da_stats_calculate (n, 0, iv%ships(n)%q%qc, & 
var/da/da_ships/da_ao_stats_ships.inc:            re%ships(n)%q, nq, & 
var/da/da_ships/da_ao_stats_ships.inc:      end if    ! end if (iv%info(ships)%proc_domain(1,n))
var/da/da_ships/da_ao_stats_ships.inc:   iv%nstats(ships) = nu + nv + nt + np + nq
var/da/da_ships/da_print_stats_ships.inc:      ' Minimum(n,k): ', ships%minimum%u, ships%minimum%v, ships%minimum%t, &
var/da/da_ships/da_print_stats_ships.inc:                         ships%minimum%p, ships%minimum%q, &
var/da/da_ships/da_print_stats_ships.inc:      ' Maximum(n,k): ', ships%maximum%u, ships%maximum%v, ships%maximum%t, &
var/da/da_ships/da_print_stats_ships.inc:                         ships%maximum%p, ships%maximum%q
var/da/da_ships/da_print_stats_ships.inc:      ' Average     : ', ships%average%u/real(nu), ships%average%v/real(nv), &
var/da/da_ships/da_print_stats_ships.inc:                         ships%average%t/real(nt), ships%average%p/real(np), &
var/da/da_ships/da_print_stats_ships.inc:                         ships%average%q/real(nq), &
var/da/da_ships/da_print_stats_ships.inc:      '    RMSE     : ', sqrt(ships%rms_err%u/real(nu)), &
var/da/da_ships/da_print_stats_ships.inc:                         sqrt(ships%rms_err%v/real(nv)), &
var/da/da_ships/da_print_stats_ships.inc:                         sqrt(ships%rms_err%t/real(nt)), &
var/da/da_ships/da_print_stats_ships.inc:                         sqrt(ships%rms_err%p/real(np)), &
var/da/da_ships/da_print_stats_ships.inc:                         sqrt(ships%rms_err%q/real(nq))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_u(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_v(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_t(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_p(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_q(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:   allocate (model_hsm(1,iv%info(ships)%n1:iv%info(ships)%n2))
var/da/da_ships/da_get_innov_vector_ships.inc:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%u%qc == fails_error_max) iv%ships(n)%u%qc = 0
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%v%qc == fails_error_max) iv%ships(n)%v%qc = 0
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%t%qc == fails_error_max) iv%ships(n)%t%qc = 0
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%p%qc == fails_error_max) iv%ships(n)%p%qc = 0
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%q%qc == fails_error_max) iv%ships(n)%q%qc = 0
var/da/da_ships/da_get_innov_vector_ships.inc:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_get_innov_vector_ships.inc:         i   = iv%info(ships)%i(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         j   = iv%info(ships)%j(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         dx  = iv%info(ships)%dx(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         dy  = iv%info(ships)%dy(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         dxm = iv%info(ships)%dxm(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         dym = iv%info(ships)%dym(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%p%inv = ob%ships(n)%p
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%t%inv = ob%ships(n)%t
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%q%inv = ob%ships(n)%q
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%u%inv = ob%ships(n)%u
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%v%inv = ob%ships(n)%v
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv % ships(n) % h > missing_r) then
var/da/da_ships/da_get_innov_vector_ships.inc:            hd = v_h(kts) - iv % ships(n) % h
var/da/da_ships/da_get_innov_vector_ships.inc:               if (iv % ships(n) % h < v_h(kts)) then
var/da/da_ships/da_get_innov_vector_ships.inc:                  iv%info(ships)%zk(:,n) = 1.0+1.0e-6
var/da/da_ships/da_get_innov_vector_ships.inc:                  call da_obs_sfc_correction(iv%info(ships), iv%ships(n), n, grid%xb)
var/da/da_ships/da_get_innov_vector_ships.inc:                  call da_to_zk(iv % ships(n) % h, v_h, v_interp_h, iv%info(ships)%zk(1,n))
var/da/da_ships/da_get_innov_vector_ships.inc:         else if (ob % ships(n) % p > 1.0) then
var/da/da_ships/da_get_innov_vector_ships.inc:            call da_to_zk(ob % ships(n) % p, v_p, v_interp_p, iv%info(ships)%zk(1,n))
var/da/da_ships/da_get_innov_vector_ships.inc:            if (iv%info(ships)%zk(1,n) < 0.0 .and.  .not.anal_type_verify) then
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % p % inv = missing_r
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % p % qc  = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:               iv%info(ships)%zk(:,n) = 1.0+1.0e-6
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_convert_zk (iv%info(ships))
var/da/da_ships/da_get_innov_vector_ships.inc:         do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_get_innov_vector_ships.inc:            if (iv%info(ships)%zk(1,n) < 0.0) then
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % u % qc = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % v % qc = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % t % qc = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % q % qc = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:               iv % ships(n) % p % qc = missing_data
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%u, iv%info(ships), model_u,'u')
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%v, iv%info(ships), model_v,'v')
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%u, iv%info(ships), model_u)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%v, iv%info(ships), model_v)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%t, iv%info(ships), model_t)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%q, iv%info(ships), model_q)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_3d (grid%xb%p, iv%info(ships), model_p)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_2d (grid%xb%u10,  iv%info(ships), 1, model_u)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_2d (grid%xb%v10,  iv%info(ships), 1, model_v)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_2d (grid%xb%t2,   iv%info(ships), 1, model_t)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_2d (grid%xb%q2,   iv%info(ships), 1, model_q)
var/da/da_ships/da_get_innov_vector_ships.inc:      call da_interp_lin_2d (grid%xb%psfc, iv%info(ships), 1, model_p)
var/da/da_ships/da_get_innov_vector_ships.inc:      do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%p%inv = ob%ships(n)%p
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%t%inv = ob%ships(n)%t
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%q%inv = ob%ships(n)%q
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%u%inv = ob%ships(n)%u
var/da/da_ships/da_get_innov_vector_ships.inc:         iv%ships(n)%v%inv = ob%ships(n)%v
var/da/da_ships/da_get_innov_vector_ships.inc:         if (iv%ships(n)%p%qc >= 0) then
var/da/da_ships/da_get_innov_vector_ships.inc:            call da_interp_lin_2d_partial (grid%xb%terr, iv%info(ships), 1, n, n, model_hsm(:,n))
var/da/da_ships/da_get_innov_vector_ships.inc:            ho = iv%ships(n)%h
var/da/da_ships/da_get_innov_vector_ships.inc:            if (iv%ships(n)%t%qc >= 0 .and. iv%ships(n)%q%qc >= 0) then
var/da/da_ships/da_get_innov_vector_ships.inc:               to = ob%ships(n)%t
var/da/da_ships/da_get_innov_vector_ships.inc:               qo = ob%ships(n)%q
var/da/da_ships/da_get_innov_vector_ships.inc:            else if (iv%ships(n)%t%qc >= 0 .and. iv%ships(n)%q%qc < 0) then
var/da/da_ships/da_get_innov_vector_ships.inc:                to = ob%ships(n)%t
var/da/da_ships/da_get_innov_vector_ships.inc:   do n=iv%info(ships)%n1,iv%info(ships)%n2
var/da/da_ships/da_get_innov_vector_ships.inc:      if (ob % ships(n) % u > missing_r .AND. iv % ships(n) % u % qc >= obs_qc_pointer) then
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % u % inv = iv%ships(n)%u%inv - model_u(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % u % inv = 0.0
var/da/da_ships/da_get_innov_vector_ships.inc:      if (ob % ships(n) % v > missing_r .AND. iv % ships(n) % v % qc >= obs_qc_pointer) then
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % v % inv = iv%ships(n)%v%inv - model_v(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % v % inv = 0.0
var/da/da_ships/da_get_innov_vector_ships.inc:      if (ob % ships(n) % p > 0.0 .AND. iv % ships(n) % p % qc >= obs_qc_pointer) then
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % p % inv = iv%ships(n)%p%inv - model_p(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % p % inv = 0.0
var/da/da_ships/da_get_innov_vector_ships.inc:      if (ob % ships(n) % t > 0.0 .AND. iv % ships(n) % t % qc >= obs_qc_pointer) then
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % t % inv = iv%ships(n)%t%inv - model_t(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % t % inv = 0.0
var/da/da_ships/da_get_innov_vector_ships.inc:      if (ob % ships(n) % q > 0.0 .AND. iv % ships(n) % q % qc >= obs_qc_pointer) then
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % q % inv = iv%ships(n)%q%inv - model_q(1,n)
var/da/da_ships/da_get_innov_vector_ships.inc:         iv % ships(n) % q % inv = 0.0
var/da/da_ships/da_residual_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_ships/da_residual_ships.inc:      re%ships(n)%u = da_residual(n, 0, y%ships(n)%u, iv%ships(n)%u, n_obs_bad % u)
var/da/da_ships/da_residual_ships.inc:      re%ships(n)%v = da_residual(n, 0, y%ships(n)%v, iv%ships(n)%v, n_obs_bad % v)
var/da/da_ships/da_residual_ships.inc:      re%ships(n)%t = da_residual(n, 0, y%ships(n)%t, iv%ships(n)%t, n_obs_bad % t)
var/da/da_ships/da_residual_ships.inc:      re%ships(n)%p = da_residual(n, 0, y%ships(n)%p, iv%ships(n)%p, n_obs_bad % p)
var/da/da_ships/da_residual_ships.inc:      re%ships(n)%q = da_residual(n, 0, y%ships(n)%q, iv%ships(n)%q, n_obs_bad % q)
var/da/da_obs_io/da_read_obs_ascii.inc:            if (nlocal(ships) > iv%info(ships)%nlocal) cycle reports
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%h = platform%each(1)%height
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%u = platform%each(1)%u
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%v = platform%each(1)%v
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%t = platform%each(1)%t
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%p = platform%each(1)%p
var/da/da_obs_io/da_read_obs_ascii.inc:            iv%ships(nlocal(ships))%q = platform%each(1)%q
var/da/da_obs_io/da_write_noise_to_ob.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_write_noise_to_ob.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_noise_to_ob.inc:         if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_write_modified_filtered_obs.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            ' writing filtered obs for ships ',iv%info(ships)%nlocal
var/da/da_obs_io/da_write_modified_filtered_obs.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs_io/da_write_modified_filtered_obs.inc:!cys     if (iv%info(ships)%zk(1,n) == missing_r) cycle
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         nlevels = iv%info(ships)%levels(n)
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%info(ships)%levels(n) > 1) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:               ' for SHIP station ',iv%info(ships)%name(n),' got levels ',&
var/da/da_obs_io/da_write_modified_filtered_obs.inc:               iv%info(ships)%levels(n) ,' but wrote only one level'
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%platform(n),    &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%date_char(n),   &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%name(n),        &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%lat(1,n),       &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%lon(1,n),       &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%elv(n),         &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%id(n)
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            slp_inv= iv%info(ships)%slp(n)%inv
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            slp_qc = iv%info(ships)%slp(n)%qc
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            slp_inv,slp_qc,iv%info(ships)%slp(n)%error, &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%pw(n)%inv, iv%info(ships)%pw(n)%qc, iv%info(ships)%pw(n)%error
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%ships(n)%u%qc >= obs_qc_pointer .and. &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:             iv%ships(n)%v%qc >= obs_qc_pointer) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            uu = ob%ships(n)%u
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            vv = ob%ships(n)%v
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            call da_ffdduv(speed, dir, uu, vv, iv%info(ships)%lon(1,n), &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            speed_qc  = iv%ships(n)%u%qc
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            speed_err = iv%ships(n)%u%error
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%ships(n)%q%qc >= obs_qc_pointer .and.  &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:             abs(iv%ships(n)%q%error - missing_r) > 1. .and.  &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:             abs(ob%ships(n)%t       - missing_r) > 1. .and.  &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:             abs(ob%ships(n)%p       - missing_r) > 1.   ) then 
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            call da_tp_to_qs(ob%ships(n)%t, ob%ships(n)%p, es, qs)
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            rh = (ob%ships(n)%q/qs) * 100.
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            rh_qc = iv%ships(n)%q%qc
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            q = ob%ships(n)%q * 1e3    !g/kg		!cys_add
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            q_qc = iv%ships(n)%q%qc			!cys_add
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            q_err = max(0.01, iv%ships(n)%q%error * 1e3) !g/kg			!cys_add
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         p     = ob%ships(n)%p
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         p_qc  = iv%ships(n)%p%qc
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         t    =  ob%ships(n)%t
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         t_qc =  iv%ships(n)%t%qc
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         t_err =  iv%ships(n)%t%error			!cys_add
var/da/da_obs_io/da_write_modified_filtered_obs.inc:         if (iv%ships(n)%t%qc <= fails_error_max) then
var/da/da_obs_io/da_write_modified_filtered_obs.inc:!cys        iv%info(ships)%elv(n), zero, elv_error,             &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:!cys        t, t_qc, iv%ships(n)%t%error,                      &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%info(ships)%elv(n), zero, elv_error,        &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%ships(n)%u%inv, iv%ships(n)%v%inv, &
var/da/da_obs_io/da_write_modified_filtered_obs.inc:            iv%ships(n)%t%inv, iv%ships(n)%q%inv*1e3            ! q%inv in g/kg
var/da/da_obs_io/da_write_obs_etkf.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_write_obs_etkf.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_obs_etkf.inc:         if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_write_obs_etkf.inc:         do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_obs_etkf.inc:            if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/da_write_obs_etkf.inc:               if ( iv%ships(n)%u%qc >= 0 ) then
var/da/da_obs_io/da_write_obs_etkf.inc:                  write(ounit,'(3f17.7)') ob%ships(n)%u, iv%ships(n)%u%inv, iv%ships(n)%u%error
var/da/da_obs_io/da_write_obs_etkf.inc:               if ( iv%ships(n)%v%qc >= 0 ) then
var/da/da_obs_io/da_write_obs_etkf.inc:                  write(ounit,'(3f17.7)') ob%ships(n)%v, iv%ships(n)%v%inv, iv%ships(n)%v%error
var/da/da_obs_io/da_write_obs_etkf.inc:               if ( iv%ships(n)%t%qc >= 0 ) then
var/da/da_obs_io/da_write_obs_etkf.inc:                  write(ounit,'(3f17.7)') ob%ships(n)%t, iv%ships(n)%t%inv, iv%ships(n)%t%error
var/da/da_obs_io/da_write_obs_etkf.inc:               if ( iv%ships(n)%p%qc >= 0 ) then
var/da/da_obs_io/da_write_obs_etkf.inc:                  write(ounit,'(3f17.7)') ob%ships(n)%p, iv%ships(n)%p%inv, iv%ships(n)%p%error
var/da/da_obs_io/da_write_obs_etkf.inc:               if ( iv%ships(n)%q%qc >= 0 ) then
var/da/da_obs_io/da_write_obs_etkf.inc:                  write(ounit,'(3f17.7)') ob%ships(n)%q, iv%ships(n)%q%inv, iv%ships(n)%q%error
var/da/da_obs_io/da_read_iv_for_multi_inc.inc:   if (iv%info(ships)%plocal(iv%time)-iv%info(ships)%plocal(iv%time-1) > 0) then
var/da/da_obs_io/da_read_iv_for_multi_inc.inc:       do n = iv%info(ships)%plocal(iv%time-1) + 1, &
var/da/da_obs_io/da_read_iv_for_multi_inc.inc:              iv%info(ships)%plocal(iv%time)
var/da/da_obs_io/da_read_iv_for_multi_inc.inc:       if (gn /= iv%info(ships)%plocal(iv%time)-iv%info(ships)%plocal(iv%time-1)) &
var/da/da_obs_io/da_write_y.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_write_y.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_y.inc:        if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_write_y.inc:         do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_y.inc:            if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/da_write_y.inc:               call da_check_missing(iv%ships(n)%u%qc, y%ships(n)%u, f1)
var/da/da_obs_io/da_write_y.inc:               call da_check_missing(iv%ships(n)%v%qc, y%ships(n)%v, f2)
var/da/da_obs_io/da_write_y.inc:               call da_check_missing(iv%ships(n)%t%qc, y%ships(n)%t, f3)
var/da/da_obs_io/da_write_y.inc:               call da_check_missing(iv%ships(n)%p%qc, y%ships(n)%p, f4)
var/da/da_obs_io/da_write_y.inc:               call da_check_missing(iv%ships(n)%q%qc, y%ships(n)%q, f5)
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:   if (iv%info(ships)%plocal(iv%time) - iv%info(ships)%plocal(iv%time-1) > 0) then
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:      write(ounit,'(a20,i8)')'ships', iv%info(ships)%plocal(iv%time) - &
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                                       iv%info(ships)%plocal(iv%time-1)
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:      do n = iv%info(ships)%plocal(iv%time-1) + 1, &
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:             iv%info(ships)%plocal(iv%time)
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 n, iv%info(ships)%id(n), &  ! Station
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%info(ships)%lat(1,n), &       ! Latitude
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%info(ships)%lon(1,n)          ! Longitude
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%h, &
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%u, &! O-B u
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%v, &! O-B v
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%t, &! O-B t
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%p, &! O-B p
var/da/da_obs_io/da_write_iv_for_multi_inc.inc:                 iv%ships(n)%q   ! O-B q
var/da/da_obs_io/da_final_write_y.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_final_write_y.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_final_write_y.inc:        if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_write_obs.inc:  do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_obs.inc:     if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_write_obs.inc:     do n = 1, iv%info(ships)%nlocal  
var/da/da_obs_io/da_write_obs.inc:        if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/da_write_obs.inc:              num_obs,1, iv%info(ships)%id(n), &  ! Station
var/da/da_obs_io/da_write_obs.inc:              iv%info(ships)%lat(1,n), &       ! Latitude
var/da/da_obs_io/da_write_obs.inc:              iv%info(ships)%lon(1,n), &       ! Longitude
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%p,           &       ! Obs Pressure
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%u,           &
var/da/da_obs_io/da_write_obs.inc:              iv%ships(n)%u%inv, iv%ships(n)%u%qc, iv%ships(n)%u%error, &
var/da/da_obs_io/da_write_obs.inc:              re%ships(n)%u,           &
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%v,           &
var/da/da_obs_io/da_write_obs.inc:              iv%ships(n)%v%inv, iv%ships(n)%v%qc, iv%ships(n)%v%error, &
var/da/da_obs_io/da_write_obs.inc:              re%ships(n)%v,           &
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%t,           &
var/da/da_obs_io/da_write_obs.inc:              iv%ships(n)%t%inv, iv%ships(n)%t%qc, iv%ships(n)%t%error, &
var/da/da_obs_io/da_write_obs.inc:              re%ships(n)%t,           &
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%p,           &
var/da/da_obs_io/da_write_obs.inc:              iv%ships(n)%p%inv, iv%ships(n)%p%qc, iv%ships(n)%p%error, &
var/da/da_obs_io/da_write_obs.inc:              re%ships(n)%p,           &
var/da/da_obs_io/da_write_obs.inc:              ob%ships(n)%q,           &
var/da/da_obs_io/da_write_obs.inc:              iv%ships(n)%q%inv, iv%ships(n)%q%qc, iv%ships(n)%q%error, &
var/da/da_obs_io/da_write_obs.inc:              re%ships(n)%q
var/da/da_obs_io/.svn/text-base/da_read_iv_for_multi_inc.inc.svn-base:   if (iv%info(ships)%plocal(iv%time)-iv%info(ships)%plocal(iv%time-1) > 0) then
var/da/da_obs_io/.svn/text-base/da_read_iv_for_multi_inc.inc.svn-base:       do n = iv%info(ships)%plocal(iv%time-1) + 1, &
var/da/da_obs_io/.svn/text-base/da_read_iv_for_multi_inc.inc.svn-base:              iv%info(ships)%plocal(iv%time)
var/da/da_obs_io/.svn/text-base/da_read_iv_for_multi_inc.inc.svn-base:       if (gn /= iv%info(ships)%plocal(iv%time)-iv%info(ships)%plocal(iv%time-1)) &
var/da/da_obs_io/.svn/text-base/da_final_write_obs.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_final_write_obs.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_final_write_obs.inc.svn-base:         if(iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            ' writing filtered obs for ships ',iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:!cys     if (iv%info(ships)%zk(1,n) == missing_r) cycle
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         nlevels = iv%info(ships)%levels(n)
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%info(ships)%levels(n) > 1) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:               ' for SHIP station ',iv%info(ships)%name(n),' got levels ',&
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:               iv%info(ships)%levels(n) ,' but wrote only one level'
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%platform(n),    &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%date_char(n),   &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%name(n),        &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%lat(1,n),       &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%lon(1,n),       &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%elv(n),         &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%id(n)
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            slp_inv= iv%info(ships)%slp(n)%inv
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            slp_qc = iv%info(ships)%slp(n)%qc
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            slp_inv,slp_qc,iv%info(ships)%slp(n)%error, &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%pw(n)%inv, iv%info(ships)%pw(n)%qc, iv%info(ships)%pw(n)%error
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%ships(n)%u%qc >= obs_qc_pointer .and. &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:             iv%ships(n)%v%qc >= obs_qc_pointer) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            uu = ob%ships(n)%u
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            vv = ob%ships(n)%v
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            call da_ffdduv(speed, dir, uu, vv, iv%info(ships)%lon(1,n), &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            speed_qc  = iv%ships(n)%u%qc
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            speed_err = iv%ships(n)%u%error
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%ships(n)%q%qc >= obs_qc_pointer .and.  &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:             abs(iv%ships(n)%q%error - missing_r) > 1. .and.  &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:             abs(ob%ships(n)%t       - missing_r) > 1. .and.  &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:             abs(ob%ships(n)%p       - missing_r) > 1.   ) then 
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            call da_tp_to_qs(ob%ships(n)%t, ob%ships(n)%p, es, qs)
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            rh = (ob%ships(n)%q/qs) * 100.
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            rh_qc = iv%ships(n)%q%qc
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            q = ob%ships(n)%q * 1e3    !g/kg		!cys_add
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            q_qc = iv%ships(n)%q%qc			!cys_add
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            q_err = max(0.01, iv%ships(n)%q%error * 1e3) !g/kg			!cys_add
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         p     = ob%ships(n)%p
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         p_qc  = iv%ships(n)%p%qc
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         t    =  ob%ships(n)%t
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         t_qc =  iv%ships(n)%t%qc
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         t_err =  iv%ships(n)%t%error			!cys_add
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:         if (iv%ships(n)%t%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:!cys        iv%info(ships)%elv(n), zero, elv_error,             &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:!cys        t, t_qc, iv%ships(n)%t%error,                      &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%info(ships)%elv(n), zero, elv_error,        &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%ships(n)%u%inv, iv%ships(n)%v%inv, &
var/da/da_obs_io/.svn/text-base/da_write_modified_filtered_obs.inc.svn-base:            iv%ships(n)%t%inv, iv%ships(n)%q%inv*1e3            ! q%inv in g/kg
var/da/da_obs_io/.svn/text-base/da_scan_obs_ascii.inc.svn-base:            if (.not.use_shipsobs .or. iv%info(ships)%ntotal == max_ships_input) cycle reports
var/da/da_obs_io/.svn/text-base/da_scan_obs_ascii.inc.svn-base:            if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/.svn/text-base/da_scan_obs_ascii.inc.svn-base:            iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/.svn/text-base/da_scan_obs_ascii.inc.svn-base:   iv%info(ships)%max_lev=1   
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            ' writing filtered obs for ships ',iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%info(ships)%zk(1,n) == missing_r) cycle
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         nlevels = iv%info(ships)%levels(n)
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%info(ships)%levels(n) > 1) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:               ' for SHIP station ',iv%info(ships)%name(n),' got levels ',&
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:               iv%info(ships)%levels(n) ,' but wrote only one level'
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%platform(n),    &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%date_char(n),   &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%name(n),        &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%lat(1,n),       &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%lon(1,n),       &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%elv(n),         &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%id(n)
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            slp_inv= iv%info(ships)%slp(n)%inv
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            slp_qc = iv%info(ships)%slp(n)%qc
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            slp_inv,slp_qc,iv%info(ships)%slp(n)%error, &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%pw(n)%inv, iv%info(ships)%pw(n)%qc, iv%info(ships)%pw(n)%error
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%ships(n)%u%qc >= obs_qc_pointer .and. &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:             iv%ships(n)%v%qc >= obs_qc_pointer) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            uu = ob%ships(n)%u
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            vv = ob%ships(n)%v
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            call da_ffdduv(speed, dir, uu, vv, iv%info(ships)%lon(1,n), &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            speed_qc  = iv%ships(n)%u%qc
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            speed_err = iv%ships(n)%u%error
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%ships(n)%q%qc >= obs_qc_pointer .and.  &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:             abs(iv%ships(n)%q%error - missing_r) > 1. .and.  &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:             abs(ob%ships(n)%t       - missing_r) > 1. .and.  &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:             abs(ob%ships(n)%p       - missing_r) > 1.   ) then 
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            call da_tp_to_qs(ob%ships(n)%t, ob%ships(n)%p, es, qs)
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            rh = (ob%ships(n)%q/qs) * 100.
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            rh_qc = iv%ships(n)%q%qc
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         p     = ob%ships(n)%p
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         p_qc  = iv%ships(n)%p%qc
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         t    =  ob%ships(n)%t
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         t_qc =  iv%ships(n)%t%qc
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:         if (iv%ships(n)%t%qc <= fails_error_max) then
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            iv%info(ships)%elv(n), zero, elv_error,             &
var/da/da_obs_io/.svn/text-base/da_write_filtered_obs.inc.svn-base:            t, t_qc, iv%ships(n)%t%error,                      &
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            if (nlocal(ships) > iv%info(ships)%nlocal) cycle reports
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%h = platform%each(1)%height
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%u = platform%each(1)%u
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%v = platform%each(1)%v
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%t = platform%each(1)%t
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%p = platform%each(1)%p
var/da/da_obs_io/.svn/text-base/da_read_obs_ascii.inc.svn-base:            iv%ships(nlocal(ships))%q = platform%each(1)%q
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:   iv%info(ships)%max_lev     = 1
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % h = plink%platform_BUFR % each(1) % height
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % u = plink%platform_BUFR % each(1) % u
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % v = plink%platform_BUFR % each(1) % v
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % t = plink%platform_BUFR % each(1) % t
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % p = plink%platform_BUFR % each(1) % p
var/da/da_obs_io/.svn/text-base/da_read_obs_bufr.inc.svn-base:            iv % ships (ilocal(ships)) % q = plink%platform_BUFR % each(1) % q
var/da/da_obs_io/.svn/text-base/da_write_noise_to_ob.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_write_noise_to_ob.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_noise_to_ob.inc.svn-base:         if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:         if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:         do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:            if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:               if ( iv%ships(n)%u%qc >= 0 ) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:                  write(ounit,'(3f17.7)') ob%ships(n)%u, iv%ships(n)%u%inv, iv%ships(n)%u%error
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:               if ( iv%ships(n)%v%qc >= 0 ) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:                  write(ounit,'(3f17.7)') ob%ships(n)%v, iv%ships(n)%v%inv, iv%ships(n)%v%error
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:               if ( iv%ships(n)%t%qc >= 0 ) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:                  write(ounit,'(3f17.7)') ob%ships(n)%t, iv%ships(n)%t%inv, iv%ships(n)%t%error
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:               if ( iv%ships(n)%p%qc >= 0 ) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:                  write(ounit,'(3f17.7)') ob%ships(n)%p, iv%ships(n)%p%inv, iv%ships(n)%p%error
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:               if ( iv%ships(n)%q%qc >= 0 ) then
var/da/da_obs_io/.svn/text-base/da_write_obs_etkf.inc.svn-base:                  write(ounit,'(3f17.7)') ob%ships(n)%q, iv%ships(n)%q%inv, iv%ships(n)%q%error
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:      if ( iv%info(ships)%id(nth)  == stn_id .and.  &
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:           iv%info(ships)%lat(1,nth) == lat    .and.  &
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:           iv%info(ships)%lon(1,nth) == lon ) then
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%h, &
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%u, &!  O-B u
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%v, &!  O-B v
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%t, &!  O-B t
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%p, &!  O-B p
var/da/da_obs_io/.svn/text-base/da_search_obs.inc.svn-base:                  iv%ships(nth)%q  !  O-B q
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:        if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:         do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:            if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:               call da_check_missing(iv%ships(n)%u%qc, y%ships(n)%u, f1)
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:               call da_check_missing(iv%ships(n)%v%qc, y%ships(n)%v, f2)
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:               call da_check_missing(iv%ships(n)%t%qc, y%ships(n)%t, f3)
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:               call da_check_missing(iv%ships(n)%p%qc, y%ships(n)%p, f4)
var/da/da_obs_io/.svn/text-base/da_write_y.inc.svn-base:               call da_check_missing(iv%ships(n)%q%qc, y%ships(n)%q, f5)
var/da/da_obs_io/.svn/text-base/da_final_write_y.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/.svn/text-base/da_final_write_y.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_final_write_y.inc.svn-base:        if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:   if (iv%info(ships)%plocal(iv%time) - iv%info(ships)%plocal(iv%time-1) > 0) then
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:      write(ounit,'(a20,i8)')'ships', iv%info(ships)%plocal(iv%time) - &
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                                       iv%info(ships)%plocal(iv%time-1)
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:      do n = iv%info(ships)%plocal(iv%time-1) + 1, &
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:             iv%info(ships)%plocal(iv%time)
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 n, iv%info(ships)%id(n), &  ! Station
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%info(ships)%lat(1,n), &       ! Latitude
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%info(ships)%lon(1,n)          ! Longitude
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%h, &
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%u, &! O-B u
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%v, &! O-B v
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%t, &! O-B t
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%p, &! O-B p
var/da/da_obs_io/.svn/text-base/da_write_iv_for_multi_inc.inc.svn-base:                 iv%ships(n)%q   ! O-B q
var/da/da_obs_io/.svn/text-base/da_scan_obs_bufr.inc.svn-base:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/.svn/text-base/da_scan_obs_bufr.inc.svn-base:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/.svn/text-base/da_scan_obs_bufr.inc.svn-base:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/.svn/text-base/da_scan_obs_bufr.inc.svn-base:   iv%info(ships)%max_lev     = 1
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:  do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:     if (iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:     do n = 1, iv%info(ships)%nlocal  
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:        if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              num_obs,1, iv%info(ships)%id(n), &  ! Station
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%info(ships)%lat(1,n), &       ! Latitude
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%info(ships)%lon(1,n), &       ! Longitude
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%p,           &       ! Obs Pressure
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%u,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%ships(n)%u%inv, iv%ships(n)%u%qc, iv%ships(n)%u%error, &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              re%ships(n)%u,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%v,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%ships(n)%v%inv, iv%ships(n)%v%qc, iv%ships(n)%v%error, &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              re%ships(n)%v,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%t,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%ships(n)%t%inv, iv%ships(n)%t%qc, iv%ships(n)%t%error, &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              re%ships(n)%t,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%p,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%ships(n)%p%inv, iv%ships(n)%p%qc, iv%ships(n)%p%error, &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              re%ships(n)%p,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              ob%ships(n)%q,           &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              iv%ships(n)%q%inv, iv%ships(n)%q%qc, iv%ships(n)%q%error, &
var/da/da_obs_io/.svn/text-base/da_write_obs.inc.svn-base:              re%ships(n)%q
var/da/da_obs_io/da_search_obs.inc:      if ( iv%info(ships)%id(nth)  == stn_id .and.  &
var/da/da_obs_io/da_search_obs.inc:           iv%info(ships)%lat(1,nth) == lat    .and.  &
var/da/da_obs_io/da_search_obs.inc:           iv%info(ships)%lon(1,nth) == lon ) then
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%h, &
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%u, &!  O-B u
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%v, &!  O-B v
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%t, &!  O-B t
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%p, &!  O-B p
var/da/da_obs_io/da_search_obs.inc:                  iv%ships(nth)%q  !  O-B q
var/da/da_obs_io/da_scan_obs_ascii.inc:            if (.not.use_shipsobs .or. iv%info(ships)%ntotal == max_ships_input) cycle reports
var/da/da_obs_io/da_scan_obs_ascii.inc:            if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/da_scan_obs_ascii.inc:            iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/da_scan_obs_ascii.inc:   iv%info(ships)%max_lev=1   
var/da/da_obs_io/da_final_write_obs.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_final_write_obs.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_final_write_obs.inc:         if(iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs_io/da_read_obs_bufr.inc:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/da_read_obs_bufr.inc:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/da_read_obs_bufr.inc:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/da_read_obs_bufr.inc:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/da_read_obs_bufr.inc:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/da_read_obs_bufr.inc:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/da_read_obs_bufr.inc:   iv%info(ships)%max_lev     = 1
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % h = plink%platform_BUFR % each(1) % height
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % u = plink%platform_BUFR % each(1) % u
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % v = plink%platform_BUFR % each(1) % v
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % t = plink%platform_BUFR % each(1) % t
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % p = plink%platform_BUFR % each(1) % p
var/da/da_obs_io/da_read_obs_bufr.inc:            iv % ships (ilocal(ships)) % q = plink%platform_BUFR % each(1) % q
var/da/da_obs_io/da_write_filtered_obs.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs_io/da_write_filtered_obs.inc:            ' writing filtered obs for ships ',iv%info(ships)%nlocal
var/da/da_obs_io/da_write_filtered_obs.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs_io/da_write_filtered_obs.inc:         if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%info(ships)%zk(1,n) == missing_r) cycle
var/da/da_obs_io/da_write_filtered_obs.inc:         nlevels = iv%info(ships)%levels(n)
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%info(ships)%levels(n) > 1) then
var/da/da_obs_io/da_write_filtered_obs.inc:               ' for SHIP station ',iv%info(ships)%name(n),' got levels ',&
var/da/da_obs_io/da_write_filtered_obs.inc:               iv%info(ships)%levels(n) ,' but wrote only one level'
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%platform(n),    &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%date_char(n),   &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%name(n),        &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%lat(1,n),       &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%lon(1,n),       &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%elv(n),         &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%id(n)
var/da/da_obs_io/da_write_filtered_obs.inc:            slp_inv= iv%info(ships)%slp(n)%inv
var/da/da_obs_io/da_write_filtered_obs.inc:            slp_qc = iv%info(ships)%slp(n)%qc
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/da_write_filtered_obs.inc:            slp_inv,slp_qc,iv%info(ships)%slp(n)%error, &
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%pw(n)%inv, iv%info(ships)%pw(n)%qc, iv%info(ships)%pw(n)%error
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%ships(n)%u%qc >= obs_qc_pointer .and. &
var/da/da_obs_io/da_write_filtered_obs.inc:             iv%ships(n)%v%qc >= obs_qc_pointer) then
var/da/da_obs_io/da_write_filtered_obs.inc:            uu = ob%ships(n)%u
var/da/da_obs_io/da_write_filtered_obs.inc:            vv = ob%ships(n)%v
var/da/da_obs_io/da_write_filtered_obs.inc:            call da_ffdduv(speed, dir, uu, vv, iv%info(ships)%lon(1,n), &
var/da/da_obs_io/da_write_filtered_obs.inc:            speed_qc  = iv%ships(n)%u%qc
var/da/da_obs_io/da_write_filtered_obs.inc:            speed_err = iv%ships(n)%u%error
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%ships(n)%q%qc >= obs_qc_pointer .and.  &
var/da/da_obs_io/da_write_filtered_obs.inc:             abs(iv%ships(n)%q%error - missing_r) > 1. .and.  &
var/da/da_obs_io/da_write_filtered_obs.inc:             abs(ob%ships(n)%t       - missing_r) > 1. .and.  &
var/da/da_obs_io/da_write_filtered_obs.inc:             abs(ob%ships(n)%p       - missing_r) > 1.   ) then 
var/da/da_obs_io/da_write_filtered_obs.inc:            call da_tp_to_qs(ob%ships(n)%t, ob%ships(n)%p, es, qs)
var/da/da_obs_io/da_write_filtered_obs.inc:            rh = (ob%ships(n)%q/qs) * 100.
var/da/da_obs_io/da_write_filtered_obs.inc:            rh_qc = iv%ships(n)%q%qc
var/da/da_obs_io/da_write_filtered_obs.inc:         p     = ob%ships(n)%p
var/da/da_obs_io/da_write_filtered_obs.inc:         p_qc  = iv%ships(n)%p%qc
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%ships(n)%p%qc <= fails_error_max) then
var/da/da_obs_io/da_write_filtered_obs.inc:         t    =  ob%ships(n)%t
var/da/da_obs_io/da_write_filtered_obs.inc:         t_qc =  iv%ships(n)%t%qc
var/da/da_obs_io/da_write_filtered_obs.inc:         if (iv%ships(n)%t%qc <= fails_error_max) then
var/da/da_obs_io/da_write_filtered_obs.inc:            iv%info(ships)%elv(n), zero, elv_error,             &
var/da/da_obs_io/da_write_filtered_obs.inc:            t, t_qc, iv%ships(n)%t%error,                      &
var/da/da_obs_io/da_scan_obs_bufr.inc:               if (n==1) iv%info(ships)%ntotal = iv%info(ships)%ntotal + 1
var/da/da_obs_io/da_scan_obs_bufr.inc:                  call map2grids_conv(ships,dlat_earth,dlon_earth,crit,iv%info(ships)%nlocal,itx,1,itt,iout,iuse)
var/da/da_obs_io/da_scan_obs_bufr.inc:                  iv%info(ships)%nlocal = iv%info(ships)%nlocal + 1
var/da/da_obs_io/da_scan_obs_bufr.inc:   iv%info(ships)%max_lev     = 1
var/da/da_obs/da_transform_xtoy_adj.inc:   if (iv%info(ships)%nlocal    > 0) call da_transform_xtoy_ships_adj    (grid, iv, jo_grad_y, jo_grad_x)
var/da/da_obs/da_fill_obs_structures.inc:   iv % ships_ef_u = 1.0
var/da/da_obs/da_fill_obs_structures.inc:   iv % ships_ef_v = 1.0
var/da/da_obs/da_fill_obs_structures.inc:   iv % ships_ef_t = 1.0
var/da/da_obs/da_fill_obs_structures.inc:   iv % ships_ef_p = 1.0
var/da/da_obs/da_fill_obs_structures.inc:   iv % ships_ef_q = 1.0
var/da/da_obs/da_fill_obs_structures.inc:   if (iv%info(ships)%nlocal > 0) then   
var/da/da_obs/da_fill_obs_structures.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/da_fill_obs_structures.inc:         ob % ships(n) % u = iv % ships(n) % u % inv
var/da/da_obs/da_fill_obs_structures.inc:         ob % ships(n) % v = iv % ships(n) % v % inv
var/da/da_obs/da_fill_obs_structures.inc:         ob % ships(n) % t = iv % ships(n) % t % inv
var/da/da_obs/da_fill_obs_structures.inc:         ob % ships(n) % q = iv % ships(n) % q % inv
var/da/da_obs/da_fill_obs_structures.inc:         ob % ships(n) % p = iv % ships(n) % p % inv
var/da/da_obs/da_fill_obs_structures.inc:         rh_error = iv%ships(n)%q%error ! q error is rh at this stage!
var/da/da_obs/da_fill_obs_structures.inc:         call da_get_q_error(iv % ships(n) % p % inv, &
var/da/da_obs/da_fill_obs_structures.inc:                              ob % ships(n) % t, &
var/da/da_obs/da_fill_obs_structures.inc:                              ob % ships(n) % q, &
var/da/da_obs/da_fill_obs_structures.inc:                              iv % ships(n) % t % error, &
var/da/da_obs/da_fill_obs_structures.inc:         iv % ships(n) % q % error = q_error
var/da/da_obs/da_fill_obs_structures.inc:         if(iv%ships(n)% q % error == missing_r) iv%ships(n)% q % qc = missing_data
var/da/da_obs/da_transform_xtoy.inc:   if (iv%info(ships)%nlocal          > 0) call da_transform_xtoy_ships    (grid, iv, y)
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%h = missing_r
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%u = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%v = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%t = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%p = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/.svn/text-base/da_set_obs_missing.inc.svn-base:            iv%ships(i)%q = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   iv % ships_ef_u = 1.0
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   iv % ships_ef_v = 1.0
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   iv % ships_ef_t = 1.0
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   iv % ships_ef_p = 1.0
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   iv % ships_ef_q = 1.0
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then   
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         ob % ships(n) % u = iv % ships(n) % u % inv
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         ob % ships(n) % v = iv % ships(n) % v % inv
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         ob % ships(n) % t = iv % ships(n) % t % inv
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         ob % ships(n) % q = iv % ships(n) % q % inv
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         ob % ships(n) % p = iv % ships(n) % p % inv
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         rh_error = iv%ships(n)%q%error ! q error is rh at this stage!
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         call da_get_q_error(iv % ships(n) % p % inv, &
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:                              ob % ships(n) % t, &
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:                              ob % ships(n) % q, &
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:                              iv % ships(n) % t % error, &
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         iv % ships(n) % q % error = q_error
var/da/da_obs/.svn/text-base/da_fill_obs_structures.inc.svn-base:         if(iv%ships(n)% q % error == missing_r) iv%ships(n)% q % qc = missing_data
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:         call da_random_omb(iv % ships(n) % u % error, ob % ships(n) % u, &
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:                           iv % ships(n) % u % qc, iv % ships(n) % u % inv)
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:         call da_random_omb(iv % ships(n) % v % error, ob % ships(n) % v, &
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:                           iv % ships(n) % v % qc, iv % ships(n) % v % inv)
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:         call da_random_omb(iv % ships(n) % t % error, ob % ships(n) % t, &
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:                           iv % ships(n) % t % qc, iv % ships(n) % t % inv)
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:         call da_random_omb(iv % ships(n) % p % error, ob % ships(n) % p, &
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:                           iv % ships(n) % p % qc, iv % ships(n) % p % inv)
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:         call da_random_omb(iv % ships(n) % q % error, ob % ships(n) % q, &
var/da/da_obs/.svn/text-base/da_random_omb_all.inc.svn-base:                           iv % ships(n) % q % qc, iv % ships(n) % q % inv)
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:   if ( iv%info(ships)%nlocal > 0 ) then
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:       if(iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:      do n = 1, iv%info(ships)%nlocal 
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:       if(iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:         call da_add_noise( iv % ships(n) % u, ob % ships(n) % u, z1 )
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:         call da_add_noise( iv % ships(n) % v, ob % ships(n) % v, z2 )
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:         call da_add_noise( iv % ships(n) % t, ob % ships(n) % t, z3 )
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:         call da_add_noise( iv % ships(n) % p, ob % ships(n) % p, z4 )
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:         call da_add_noise( iv % ships(n) % q, ob % ships(n) % q, z5 )
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:                                  iv % ships(n) % u % error, z1, &
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:                                  iv % ships(n) % v % error, z2, &
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:                                  iv % ships(n) % t % error, z3, &
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:                                  iv % ships(n) % p % error, z4, &
var/da/da_obs/.svn/text-base/da_add_noise_to_ob.inc.svn-base:                                  iv % ships(n) % q % error, z5
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:   call da_read_errfac('ships', iv % ships_ef_u, &
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:                        iv % ships_ef_v, iv % ships_ef_t, &
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:                        iv % ships_ef_p, iv % ships_ef_q)
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:         iv % ships(n) % u % error = iv % ships(n) % u % error * iv % ships_ef_u
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:         iv % ships(n) % v % error = iv % ships(n) % v % error * iv % ships_ef_v
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:         iv % ships(n) % t % error = iv % ships(n) % t % error * iv % ships_ef_t
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:         iv % ships(n) % p % error = iv % ships(n) % p % error * iv % ships_ef_p
var/da/da_obs/.svn/text-base/da_use_obs_errfac.inc.svn-base:         iv % ships(n) % q % error = iv % ships(n) % q % error * iv % ships_ef_q
var/da/da_obs/.svn/text-base/da_transform_xtoy_adj.inc.svn-base:   if (iv%info(ships)%nlocal    > 0) call da_transform_xtoy_ships_adj    (grid, iv, jo_grad_y, jo_grad_x)
var/da/da_obs/.svn/text-base/da_transform_xtoy.inc.svn-base:   if (iv%info(ships)%nlocal          > 0) call da_transform_xtoy_ships    (grid, iv, y)
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:         if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:            do n=1, iv%info(ships)%nlocal
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%u%sens = ktr%ships(n)%u / (iv%ships(n)%u%error **2)
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%v%sens = ktr%ships(n)%v / (iv%ships(n)%v%error **2)
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%t%sens = ktr%ships(n)%t / (iv%ships(n)%t%error **2)
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%p%sens = ktr%ships(n)%p / (iv%ships(n)%p%error **2)
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%q%sens = ktr%ships(n)%q / (iv%ships(n)%q%error **2)	        	       
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%u%inv  = iv%ships(n)%u%inv * iv%ships(n)%u%sens
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%v%inv  = iv%ships(n)%v%inv * iv%ships(n)%v%sens
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%t%inv  = iv%ships(n)%t%inv * iv%ships(n)%t%sens
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%p%inv  = iv%ships(n)%p%inv * iv%ships(n)%p%sens
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       iv%ships(n)%q%inv  = iv%ships(n)%q%inv * iv%ships(n)%q%sens	  
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       ktd(ships,u) = ktd(ships,u) + iv%ships(n)%u%inv
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:               ktd(ships,v) = ktd(ships,v) + iv%ships(n)%v%inv 
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       ktd(ships,t) = ktd(ships,t) + iv%ships(n)%t%inv 
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:               ktd(ships,p) = ktd(ships,p) + iv%ships(n)%p%inv 
var/da/da_obs/.svn/text-base/da_obs_sensitivity.inc.svn-base:	       ktd(ships,q) = ktd(ships,q) + iv%ships(n)%q%inv	       	             	       	            	       
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%h = missing_r
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%u = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%v = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%t = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%p = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/da_set_obs_missing.inc:            iv%ships(i)%q = field_type(missing_r, missing_data, xmiss, missing_r, missing_r)
var/da/da_obs/da_random_omb_all.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/da_random_omb_all.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/da_random_omb_all.inc:         call da_random_omb(iv % ships(n) % u % error, ob % ships(n) % u, &
var/da/da_obs/da_random_omb_all.inc:                           iv % ships(n) % u % qc, iv % ships(n) % u % inv)
var/da/da_obs/da_random_omb_all.inc:         call da_random_omb(iv % ships(n) % v % error, ob % ships(n) % v, &
var/da/da_obs/da_random_omb_all.inc:                           iv % ships(n) % v % qc, iv % ships(n) % v % inv)
var/da/da_obs/da_random_omb_all.inc:         call da_random_omb(iv % ships(n) % t % error, ob % ships(n) % t, &
var/da/da_obs/da_random_omb_all.inc:                           iv % ships(n) % t % qc, iv % ships(n) % t % inv)
var/da/da_obs/da_random_omb_all.inc:         call da_random_omb(iv % ships(n) % p % error, ob % ships(n) % p, &
var/da/da_obs/da_random_omb_all.inc:                           iv % ships(n) % p % qc, iv % ships(n) % p % inv)
var/da/da_obs/da_random_omb_all.inc:         call da_random_omb(iv % ships(n) % q % error, ob % ships(n) % q, &
var/da/da_obs/da_random_omb_all.inc:                           iv % ships(n) % q % qc, iv % ships(n) % q % inv)
var/da/da_obs/da_add_noise_to_ob.inc:   if ( iv%info(ships)%nlocal > 0 ) then
var/da/da_obs/da_add_noise_to_ob.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/da_add_noise_to_ob.inc:       if(iv%info(ships)%proc_domain(1,n)) num_obs = num_obs + 1
var/da/da_obs/da_add_noise_to_ob.inc:      do n = 1, iv%info(ships)%nlocal 
var/da/da_obs/da_add_noise_to_ob.inc:       if(iv%info(ships)%proc_domain(1,n)) then
var/da/da_obs/da_add_noise_to_ob.inc:         call da_add_noise( iv % ships(n) % u, ob % ships(n) % u, z1 )
var/da/da_obs/da_add_noise_to_ob.inc:         call da_add_noise( iv % ships(n) % v, ob % ships(n) % v, z2 )
var/da/da_obs/da_add_noise_to_ob.inc:         call da_add_noise( iv % ships(n) % t, ob % ships(n) % t, z3 )
var/da/da_obs/da_add_noise_to_ob.inc:         call da_add_noise( iv % ships(n) % p, ob % ships(n) % p, z4 )
var/da/da_obs/da_add_noise_to_ob.inc:         call da_add_noise( iv % ships(n) % q, ob % ships(n) % q, z5 )
var/da/da_obs/da_add_noise_to_ob.inc:                                  iv % ships(n) % u % error, z1, &
var/da/da_obs/da_add_noise_to_ob.inc:                                  iv % ships(n) % v % error, z2, &
var/da/da_obs/da_add_noise_to_ob.inc:                                  iv % ships(n) % t % error, z3, &
var/da/da_obs/da_add_noise_to_ob.inc:                                  iv % ships(n) % p % error, z4, &
var/da/da_obs/da_add_noise_to_ob.inc:                                  iv % ships(n) % q % error, z5
var/da/da_obs/da_use_obs_errfac.inc:   call da_read_errfac('ships', iv % ships_ef_u, &
var/da/da_obs/da_use_obs_errfac.inc:                        iv % ships_ef_v, iv % ships_ef_t, &
var/da/da_obs/da_use_obs_errfac.inc:                        iv % ships_ef_p, iv % ships_ef_q)
var/da/da_obs/da_use_obs_errfac.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/da_use_obs_errfac.inc:      do n = 1, iv%info(ships)%nlocal
var/da/da_obs/da_use_obs_errfac.inc:         iv % ships(n) % u % error = iv % ships(n) % u % error * iv % ships_ef_u
var/da/da_obs/da_use_obs_errfac.inc:         iv % ships(n) % v % error = iv % ships(n) % v % error * iv % ships_ef_v
var/da/da_obs/da_use_obs_errfac.inc:         iv % ships(n) % t % error = iv % ships(n) % t % error * iv % ships_ef_t
var/da/da_obs/da_use_obs_errfac.inc:         iv % ships(n) % p % error = iv % ships(n) % p % error * iv % ships_ef_p
var/da/da_obs/da_use_obs_errfac.inc:         iv % ships(n) % q % error = iv % ships(n) % q % error * iv % ships_ef_q
var/da/da_obs/da_obs_sensitivity.inc:         if (iv%info(ships)%nlocal > 0) then
var/da/da_obs/da_obs_sensitivity.inc:            do n=1, iv%info(ships)%nlocal
var/da/da_obs/da_obs_sensitivity.inc:	       if (.not. iv%info(ships)%proc_domain(1,n)) cycle
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%u%sens = ktr%ships(n)%u / (iv%ships(n)%u%error **2)
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%v%sens = ktr%ships(n)%v / (iv%ships(n)%v%error **2)
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%t%sens = ktr%ships(n)%t / (iv%ships(n)%t%error **2)
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%p%sens = ktr%ships(n)%p / (iv%ships(n)%p%error **2)
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%q%sens = ktr%ships(n)%q / (iv%ships(n)%q%error **2)	        	       
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%u%inv  = iv%ships(n)%u%inv * iv%ships(n)%u%sens
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%v%inv  = iv%ships(n)%v%inv * iv%ships(n)%v%sens
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%t%inv  = iv%ships(n)%t%inv * iv%ships(n)%t%sens
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%p%inv  = iv%ships(n)%p%inv * iv%ships(n)%p%sens
var/da/da_obs/da_obs_sensitivity.inc:	       iv%ships(n)%q%inv  = iv%ships(n)%q%inv * iv%ships(n)%q%sens	  
var/da/da_obs/da_obs_sensitivity.inc:	       ktd(ships,u) = ktd(ships,u) + iv%ships(n)%u%inv
var/da/da_obs/da_obs_sensitivity.inc:               ktd(ships,v) = ktd(ships,v) + iv%ships(n)%v%inv 
var/da/da_obs/da_obs_sensitivity.inc:	       ktd(ships,t) = ktd(ships,t) + iv%ships(n)%t%inv 
var/da/da_obs/da_obs_sensitivity.inc:               ktd(ships,p) = ktd(ships,p) + iv%ships(n)%p%inv 
var/da/da_obs/da_obs_sensitivity.inc:	       ktd(ships,q) = ktd(ships,q) + iv%ships(n)%q%inv	       	             	       	            	       
var/da/da_minimisation/da_calculate_j.inc:      is = grid%xp%ips
var/da/da_minimisation/da_get_var_diagnostics.inc:   temp(11) = j % jo % ships_u
var/da/da_minimisation/da_get_var_diagnostics.inc:   temp(12) = j % jo % ships_v
var/da/da_minimisation/da_get_var_diagnostics.inc:   temp(13) = j % jo % ships_t
var/da/da_minimisation/da_get_var_diagnostics.inc:   temp(14) = j % jo % ships_p
var/da/da_minimisation/da_get_var_diagnostics.inc:   temp(15) = j % jo % ships_q
var/da/da_minimisation/da_get_var_diagnostics.inc:   j % jo % ships_u         = temp(11) 
var/da/da_minimisation/da_get_var_diagnostics.inc:   j % jo % ships_v         = temp(12) 
var/da/da_minimisation/da_get_var_diagnostics.inc:   j % jo % ships_t         = temp(13) 
var/da/da_minimisation/da_get_var_diagnostics.inc:   j % jo % ships_p         = temp(14) 
var/da/da_minimisation/da_get_var_diagnostics.inc:   j % jo % ships_q         = temp(15) 
var/da/da_minimisation/da_get_var_diagnostics.inc:      if (iv%info(ships)%ntotal > 0) then
var/da/da_minimisation/da_get_var_diagnostics.inc:                               iv%info(ships)%ntotal, iv%nstats(ships), &
var/da/da_minimisation/da_get_var_diagnostics.inc:                               j % jo % ships_u, iv % ships_ef_u, &
var/da/da_minimisation/da_get_var_diagnostics.inc:                               j % jo % ships_v, iv % ships_ef_v, &
var/da/da_minimisation/da_get_var_diagnostics.inc:                               j % jo % ships_t, iv % ships_ef_t, &
var/da/da_minimisation/da_get_var_diagnostics.inc:                               j % jo % ships_p, iv % ships_ef_p, &
var/da/da_minimisation/da_get_var_diagnostics.inc:                               j % jo % ships_q, iv % ships_ef_q                                
var/da/da_minimisation/da_write_diagnostics.inc:   if (iv%info(ships)%ntotal    > 0) call da_oi_stats_ships    (stats_unit, iv)
var/da/da_minimisation/da_write_diagnostics.inc:   if (iv%info(ships)%ntotal    > 0) call da_ao_stats_ships    (stats_unit, iv, re)
var/da/da_minimisation/.svn/text-base/da_write_diagnostics.inc.svn-base:   if (iv%info(ships)%ntotal    > 0) call da_oi_stats_ships    (stats_unit, iv)
var/da/da_minimisation/.svn/text-base/da_write_diagnostics.inc.svn-base:   if (iv%info(ships)%ntotal    > 0) call da_ao_stats_ships    (stats_unit, iv, re)
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   temp(11) = j % jo % ships_u
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   temp(12) = j % jo % ships_v
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   temp(13) = j % jo % ships_t
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   temp(14) = j % jo % ships_p
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   temp(15) = j % jo % ships_q
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   j % jo % ships_u         = temp(11) 
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   j % jo % ships_v         = temp(12) 
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   j % jo % ships_t         = temp(13) 
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   j % jo % ships_p         = temp(14) 
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:   j % jo % ships_q         = temp(15) 
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:      if (iv%info(ships)%ntotal > 0) then
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               iv%info(ships)%ntotal, iv%nstats(ships), &
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               j % jo % ships_u, iv % ships_ef_u, &
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               j % jo % ships_v, iv % ships_ef_v, &
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               j % jo % ships_t, iv % ships_ef_t, &
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               j % jo % ships_p, iv % ships_ef_p, &
var/da/da_minimisation/.svn/text-base/da_get_var_diagnostics.inc.svn-base:                               j % jo % ships_q, iv % ships_ef_q                                
var/da/da_minimisation/.svn/text-base/da_calculate_grady.inc.svn-base:   if (iv%info(ships)%nlocal     > 0) call da_calculate_grady_ships    (iv, re, jo_grad_y)
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:   if (iv%info(ships)%nlocal > 0) then
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo_ships = jo%ships_u + jo%ships_v + jo%ships_t + jo%ships_p + jo%ships_q
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo % ships_u = 0.0
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo % ships_v = 0.0
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo % ships_t = 0.0
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo % ships_p = 0.0
var/da/da_minimisation/.svn/text-base/da_jo_and_grady.inc.svn-base:      jo % ships_q = 0.0
var/da/da_minimisation/.svn/text-base/da_calculate_j.inc.svn-base:      is = grid%xp%ips
var/da/da_minimisation/.svn/text-base/da_calculate_residual.inc.svn-base:   if (iv%info(ships)%nlocal > 0) &
var/da/da_minimisation/.svn/text-base/da_get_innov_vector.inc.svn-base:      if (iv%info(ships)%nlocal     > 0) &
var/da/da_minimisation/da_calculate_residual.inc:   if (iv%info(ships)%nlocal > 0) &
var/da/da_minimisation/da_calculate_grady.inc:   if (iv%info(ships)%nlocal     > 0) call da_calculate_grady_ships    (iv, re, jo_grad_y)
var/da/da_minimisation/da_jo_and_grady.inc:   if (iv%info(ships)%nlocal > 0) then
var/da/da_minimisation/da_jo_and_grady.inc:      jo_ships = jo%ships_u + jo%ships_v + jo%ships_t + jo%ships_p + jo%ships_q
var/da/da_minimisation/da_jo_and_grady.inc:      jo % ships_u = 0.0
var/da/da_minimisation/da_jo_and_grady.inc:      jo % ships_v = 0.0
var/da/da_minimisation/da_jo_and_grady.inc:      jo % ships_t = 0.0
var/da/da_minimisation/da_jo_and_grady.inc:      jo % ships_p = 0.0
var/da/da_minimisation/da_jo_and_grady.inc:      jo % ships_q = 0.0
var/da/da_minimisation/da_get_innov_vector.inc:      if (iv%info(ships)%nlocal     > 0) &
var/da/da_par_util/da_copy_dims.inc:   ips = grid%sp31 
var/da/da_par_util/da_copy_dims.inc:   grid%xp%ipsx = grid%sp31x
var/da/da_par_util/da_copy_dims.inc:   grid%xp%ipsy = grid%sp31y
var/da/da_par_util/da_copy_dims.inc:   grid%xp%ips = ips
var/da/da_par_util/da_copy_dims.inc:           'grid%xp%ips =', grid%xp%ips , 'grid%xp%ipe =', grid%xp%ipe , &
var/da/da_par_util/da_copy_dims.inc:           'grid%xp%ipsx =', grid%xp%ipsx, 'grid%xp%ipex=', grid%xp%ipex, &
var/da/da_par_util/da_copy_dims.inc:           'grid%xp%ipsy =', grid%xp%ipsy, 'grid%xp%ipey=', grid%xp%ipey, &
var/da/da_par_util/.svn/text-base/da_cv_to_global.inc.svn-base:   ips = grid%xp%ips; ipe = grid%xp%ipe; jps = grid%xp%jps; jpe = grid%xp%jpe; kps = grid%xp%kps
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:   ips = grid%sp31 
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:   grid%xp%ipsx = grid%sp31x
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:   grid%xp%ipsy = grid%sp31y
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:   grid%xp%ips = ips
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:           'grid%xp%ips =', grid%xp%ips , 'grid%xp%ipe =', grid%xp%ipe , &
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:           'grid%xp%ipsx =', grid%xp%ipsx, 'grid%xp%ipex=', grid%xp%ipex, &
var/da/da_par_util/.svn/text-base/da_copy_dims.inc.svn-base:           'grid%xp%ipsy =', grid%xp%ipsy, 'grid%xp%ipey=', grid%xp%ipey, &
var/da/da_par_util/da_cv_to_global.inc:   ips = grid%xp%ips; ipe = grid%xp%ipe; jps = grid%xp%jps; jpe = grid%xp%jpe; kps = grid%xp%kps
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:               grid%xp % v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k),&
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:               be%sljy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k,nv),   &
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:               grid%xp % v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k),&
var/da/da_recursive_filter/da_apply_rf_1v_adj.inc:               be%slix(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k,nv),   &
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:               grid%xp % v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:               be%sljy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k,nv),   &
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:               grid%xp % v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v_adj.inc.svn-base:               be%slix(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k,nv),   &
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:           grid%xp%v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,1),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:           be%slipx(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:           grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,1),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf.inc.svn-base:           be%sljpy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:          grid%xp% v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:          be%slix(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k,nv),  &
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:          grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_1v.inc.svn-base:          be%sljy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k,nv), &
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:           grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,1),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:           be%sljpy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:           grid%xp%v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,1),&
var/da/da_recursive_filter/.svn/text-base/da_apply_rf_adj.inc.svn-base:           be%slipx(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex),&
var/da/da_recursive_filter/da_apply_rf_adj.inc:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/da_apply_rf_adj.inc:           grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,1),&
var/da/da_recursive_filter/da_apply_rf_adj.inc:           be%sljpy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey),&
var/da/da_recursive_filter/da_apply_rf_adj.inc:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/da_apply_rf_adj.inc:           grid%xp%v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,1),&
var/da/da_recursive_filter/da_apply_rf_adj.inc:           be%slipx(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex),&
var/da/da_recursive_filter/da_apply_rf_1v.inc:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/da_apply_rf_1v.inc:          grid%xp% v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k),&
var/da/da_recursive_filter/da_apply_rf_1v.inc:          be%slix(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,k,nv),  &
var/da/da_recursive_filter/da_apply_rf_1v.inc:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/da_apply_rf_1v.inc:          grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k),&
var/da/da_recursive_filter/da_apply_rf_1v.inc:          be%sljy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,k,nv), &
var/da/da_recursive_filter/da_apply_rf.inc:   in=grid%xp%ipex-grid%xp%ipsx
var/da/da_recursive_filter/da_apply_rf.inc:           grid%xp%v1x(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex,1),&
var/da/da_recursive_filter/da_apply_rf.inc:           be%slipx(grid%xp%ipsx:grid%xp%ipex,grid%xp%jpsx:grid%xp%jpex),&
var/da/da_recursive_filter/da_apply_rf.inc:   in=grid%xp%ipey-grid%xp%ipsy
var/da/da_recursive_filter/da_apply_rf.inc:           grid%xp%v1y(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey,1),&
var/da/da_recursive_filter/da_apply_rf.inc:           be%sljpy(grid%xp%ipsy:grid%xp%ipey,grid%xp%jpsy:grid%xp%jpey),&
var/da/da_test/da_check_xtoy_adjoint.inc:      if (iv%info(ships)%nlocal    > 0) call da_check_xtoy_adjoint_ships    (iv, y, partial_lhs, pertile_lhs)
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:   do n=1, iv%info(ships)%nlocal
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      if (iv%info(ships)%zk(1,n) < 1.0) then
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         y%ships(n)%u = 0.0
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         y%ships(n)%v = 0.0
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         y%ships(n)%t = 0.0
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         y%ships(n)%p = 0.0
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         y%ships(n)%q = 0.0
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%u = y%ships(n)%u/typical_u_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%v = y%ships(n)%v/typical_v_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%t = y%ships(n)%t/typical_t_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%p = y%ships(n)%p/typical_p_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%q = y%ships(n)%q/typical_q_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:            + (y%ships(n)%u)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:            + (y%ships(n)%v)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:            + (y%ships(n)%t)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:            + (y%ships(n)%p)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:            + (y%ships(n)%q)**2
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         + (y%ships(n)%u)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         + (y%ships(n)%v)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         + (y%ships(n)%t)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         + (y%ships(n)%p)**2 &
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:         + (y%ships(n)%q)**2
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%u = y%ships(n)%u/typical_u_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%v = y%ships(n)%v/typical_v_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%t = y%ships(n)%t/typical_t_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%p = y%ships(n)%p/typical_p_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint_ships.inc.svn-base:      y%ships(n)%q = y%ships(n)%q/typical_q_rms
var/da/da_test/.svn/text-base/da_check_xtoy_adjoint.inc.svn-base:      if (iv%info(ships)%nlocal    > 0) call da_check_xtoy_adjoint_ships    (iv, y, partial_lhs, pertile_lhs)
var/da/da_test/.svn/text-base/da_get_y_lhs_value.inc.svn-base:   if (iv%info(ships)%nlocal          > 0) call da_check_xtoy_adjoint_ships    (iv, y, partial_lhs, pertile_lhs) 
var/da/da_test/da_check_xtoy_adjoint_ships.inc:   do n=1, iv%info(ships)%nlocal
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      if (iv%info(ships)%zk(1,n) < 1.0) then
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         y%ships(n)%u = 0.0
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         y%ships(n)%v = 0.0
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         y%ships(n)%t = 0.0
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         y%ships(n)%p = 0.0
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         y%ships(n)%q = 0.0
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%u = y%ships(n)%u/typical_u_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%v = y%ships(n)%v/typical_v_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%t = y%ships(n)%t/typical_t_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%p = y%ships(n)%p/typical_p_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%q = y%ships(n)%q/typical_q_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      if (iv%info(ships)%proc_domain(1,n)) then
var/da/da_test/da_check_xtoy_adjoint_ships.inc:            + (y%ships(n)%u)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:            + (y%ships(n)%v)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:            + (y%ships(n)%t)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:            + (y%ships(n)%p)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:            + (y%ships(n)%q)**2
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         + (y%ships(n)%u)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         + (y%ships(n)%v)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         + (y%ships(n)%t)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         + (y%ships(n)%p)**2 &
var/da/da_test/da_check_xtoy_adjoint_ships.inc:         + (y%ships(n)%q)**2
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%u = y%ships(n)%u/typical_u_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%v = y%ships(n)%v/typical_v_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%t = y%ships(n)%t/typical_t_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%p = y%ships(n)%p/typical_p_rms
var/da/da_test/da_check_xtoy_adjoint_ships.inc:      y%ships(n)%q = y%ships(n)%q/typical_q_rms
var/da/da_test/da_get_y_lhs_value.inc:   if (iv%info(ships)%nlocal          > 0) call da_check_xtoy_adjoint_ships    (iv, y, partial_lhs, pertile_lhs) 
var/da/da_util/da_tune_obs_hollingsworth1.f90:   if ( ob % num_ships > 0 ) then
var/da/da_util/da_tune_obs_hollingsworth1.f90:      call da_calc_stats( 'ships u  ', ob % num_ships, ob % ships % u )
var/da/da_util/da_tune_obs_hollingsworth1.f90:      call da_calc_stats( 'ships v  ', ob % num_ships, ob % ships % v )
var/da/da_util/da_tune_obs_hollingsworth1.f90:      call da_calc_stats( 'ships t  ', ob % num_ships, ob % ships % t )
var/da/da_util/da_tune_obs_hollingsworth1.f90:      call da_calc_stats( 'ships p  ', ob % num_ships, ob % ships % p )
var/da/da_util/da_tune_obs_hollingsworth1.f90:      call da_calc_stats( 'ships q  ', ob % num_ships, ob % ships % q )
var/da/da_util/da_tune_obs_hollingsworth1.f90:   ob % num_ships = 0
var/da/da_util/da_tune_obs_hollingsworth1.f90:            ob % num_ships = ob % num_ships + num_obs
var/da/da_util/da_tune_obs_hollingsworth1.f90:   if ( ob % num_ships > 0 ) then
var/da/da_util/da_tune_obs_hollingsworth1.f90:      allocate( ob % ships(1:ob % num_ships) )
var/da/da_util/da_tune_obs_hollingsworth1.f90:      write(6,'(a,i8)')' Number of ships obs = ', ob % num_ships
var/da/da_util/da_tune_obs_hollingsworth1.f90:            ndum, kdum, ob % ships(n) % info % id, &        ! Station
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % info % lat, &       ! Latitude
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % info % lon, &       ! Longitude
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % pressure, &         ! Obs height
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % u, &                ! O, O-B, O-A
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % v, &                ! O, O-B, O-A
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % t, &                ! O, O-B, O-A
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % p, &                ! O, O-B, O-A
var/da/da_util/da_tune_obs_hollingsworth1.f90:                        ob % ships(n) % q                   ! O, O-B, O-A
var/da/da_util/da_tune_obs_hollingsworth1.f90:            ob % ships(n) % info % time = shipst
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ! ob % num_ships_tot     = 0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % num_ships = 0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         ob % num_ships = ob % num_ships + num_obs
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   if ( ob % num_ships > 0 ) then
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      allocate( ob % ships(1:ob % num_ships) )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      write(6,'(a,i8)')' Number of ships obs = ', ob % num_ships
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            read(y_unit,'(2i8,7e15.7)')ndum, kdum, ob % ships(iships) % u % y, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                        ob % ships(iships) % v % y, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                        ob % ships(iships) % t % y, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                        ob % ships(iships) % p % y, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                        ob % ships(iships) % q % y
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            read(yp_unit,'(2i8,7e15.7)')ndum, kdum, ob % ships(iships) % u % yp, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:               ob % ships(iships) % v % yp, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:               ob % ships(iships) % t % yp, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:               ob % ships(iships) % p % yp, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:               ob % ships(iships) % q % yp
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ob % ships(iships) % u % error, ob % ships(iships) % u % pert, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ob % ships(iships) % v % error, ob % ships(iships) % v % pert, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ob % ships(iships) % t % error, ob % ships(iships) % t % pert, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ob % ships(iships) % p % error, ob % ships(iships) % p % pert, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ob % ships(iships) % q % error, ob % ships(iships) % q % pert
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % num_ships_tot = 0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % trace_ships   = 0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   if ( ob % num_ships > 0 ) then
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      do n = 1, ob % num_ships
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         call da_calc_trace_single( ob % ships(n) % u, count1, trace1 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         call da_calc_trace_single( ob % ships(n) % v, count2, trace2 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         call da_calc_trace_single( ob % ships(n) % t, count3, trace3 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         call da_calc_trace_single( ob % ships(n) % p, count4, trace4 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         call da_calc_trace_single( ob % ships(n) % q, count5, trace5 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % jo_ships_u = 0.5 * ( count1 - trace1 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % jo_ships_v = 0.5 * ( count2 - trace2 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % jo_ships_t = 0.5 * ( count3 - trace3 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % jo_ships_p = 0.5 * ( count4 - trace4 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % jo_ships_q = 0.5 * ( count5 - trace5 )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % trace_ships   = trace1 + trace2 + trace3 + trace4 + trace5
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      if ( ob % trace_ships < 0.0 ) &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:            ' Warning: ob % trace_ships < 0 = ', ob % trace_ships
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % trace_total = ob % trace_total + ob % trace_ships
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % num_ships_tot = count1 + count2 + count3 + count4 + count5
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      ob % num_ships_tot + ob % num_polaramv_tot + ob % num_geoamv_tot + &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % joa_ships_u = 0.0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % joa_ships_v = 0.0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % joa_ships_t = 0.0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % joa_ships_p = 0.0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   ob % joa_ships_q = 0.0
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                  ob % joa_ships_u, ob % joa_ships_v, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                  ob % joa_ships_t, ob % joa_ships_p, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:                                  ob % joa_ships_q )
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:   if ( ob % num_ships > 0 ) then
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:      call da_calc_new_factors1( 'ships', ob % num_ships, ob % num_ships_tot, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         ob % jo_ships_u, ob % jo_ships_v, ob % jo_ships_t, ob % jo_ships_p, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         ob % jo_ships_q, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         ob % joa_ships_u, ob % joa_ships_v, ob % joa_ships_t, &
var/da/da_util/.svn/text-base/da_tune_obs_desroziers.f90.svn-base:         ob % joa_ships_p, ob % joa_ships_q )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:   if ( ob % num_ships > 0 ) then
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      call da_calc_stats( 'ships u  ', ob % num_ships, ob % ships % u )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      call da_calc_stats( 'ships v  ', ob % num_ships, ob % ships % v )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      call da_calc_stats( 'ships t  ', ob % num_ships, ob % ships % t )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      call da_calc_stats( 'ships p  ', ob % num_ships, ob % ships % p )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      call da_calc_stats( 'ships q  ', ob % num_ships, ob % ships % q )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:   ob % num_ships = 0
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:            ob % num_ships = ob % num_ships + num_obs
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:   if ( ob % num_ships > 0 ) then
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      allocate( ob % ships(1:ob % num_ships) )
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:      write(6,'(a,i8)')' Number of ships obs = ', ob % num_ships
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:            ndum, kdum, ob % ships(n) % info % id, &        ! Station
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % info % lat, &       ! Latitude
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % info % lon, &       ! Longitude
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % pressure, &         ! Obs height
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % u, &                ! O, O-B, O-A
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % v, &                ! O, O-B, O-A
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % t, &                ! O, O-B, O-A
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % p, &                ! O, O-B, O-A
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:                        ob % ships(n) % q                   ! O, O-B, O-A
var/da/da_util/.svn/text-base/da_tune_obs_hollingsworth1.f90.svn-base:            ob % ships(n) % info % time = shipst
var/da/da_util/da_tune_obs_desroziers.f90:   ! ob % num_ships_tot     = 0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % num_ships = 0
var/da/da_util/da_tune_obs_desroziers.f90:         ob % num_ships = ob % num_ships + num_obs
var/da/da_util/da_tune_obs_desroziers.f90:   if ( ob % num_ships > 0 ) then
var/da/da_util/da_tune_obs_desroziers.f90:      allocate( ob % ships(1:ob % num_ships) )
var/da/da_util/da_tune_obs_desroziers.f90:      write(6,'(a,i8)')' Number of ships obs = ', ob % num_ships
var/da/da_util/da_tune_obs_desroziers.f90:            read(y_unit,'(2i8,7e15.7)')ndum, kdum, ob % ships(iships) % u % y, &
var/da/da_util/da_tune_obs_desroziers.f90:                                        ob % ships(iships) % v % y, &
var/da/da_util/da_tune_obs_desroziers.f90:                                        ob % ships(iships) % t % y, &
var/da/da_util/da_tune_obs_desroziers.f90:                                        ob % ships(iships) % p % y, &
var/da/da_util/da_tune_obs_desroziers.f90:                                        ob % ships(iships) % q % y
var/da/da_util/da_tune_obs_desroziers.f90:            read(yp_unit,'(2i8,7e15.7)')ndum, kdum, ob % ships(iships) % u % yp, &
var/da/da_util/da_tune_obs_desroziers.f90:               ob % ships(iships) % v % yp, &
var/da/da_util/da_tune_obs_desroziers.f90:               ob % ships(iships) % t % yp, &
var/da/da_util/da_tune_obs_desroziers.f90:               ob % ships(iships) % p % yp, &
var/da/da_util/da_tune_obs_desroziers.f90:               ob % ships(iships) % q % yp
var/da/da_util/da_tune_obs_desroziers.f90:            ob % ships(iships) % u % error, ob % ships(iships) % u % pert, &
var/da/da_util/da_tune_obs_desroziers.f90:            ob % ships(iships) % v % error, ob % ships(iships) % v % pert, &
var/da/da_util/da_tune_obs_desroziers.f90:            ob % ships(iships) % t % error, ob % ships(iships) % t % pert, &
var/da/da_util/da_tune_obs_desroziers.f90:            ob % ships(iships) % p % error, ob % ships(iships) % p % pert, &
var/da/da_util/da_tune_obs_desroziers.f90:            ob % ships(iships) % q % error, ob % ships(iships) % q % pert
var/da/da_util/da_tune_obs_desroziers.f90:   ob % num_ships_tot = 0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % trace_ships   = 0
var/da/da_util/da_tune_obs_desroziers.f90:   if ( ob % num_ships > 0 ) then
var/da/da_util/da_tune_obs_desroziers.f90:      do n = 1, ob % num_ships
var/da/da_util/da_tune_obs_desroziers.f90:         call da_calc_trace_single( ob % ships(n) % u, count1, trace1 )
var/da/da_util/da_tune_obs_desroziers.f90:         call da_calc_trace_single( ob % ships(n) % v, count2, trace2 )
var/da/da_util/da_tune_obs_desroziers.f90:         call da_calc_trace_single( ob % ships(n) % t, count3, trace3 )
var/da/da_util/da_tune_obs_desroziers.f90:         call da_calc_trace_single( ob % ships(n) % p, count4, trace4 )
var/da/da_util/da_tune_obs_desroziers.f90:         call da_calc_trace_single( ob % ships(n) % q, count5, trace5 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % jo_ships_u = 0.5 * ( count1 - trace1 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % jo_ships_v = 0.5 * ( count2 - trace2 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % jo_ships_t = 0.5 * ( count3 - trace3 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % jo_ships_p = 0.5 * ( count4 - trace4 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % jo_ships_q = 0.5 * ( count5 - trace5 )
var/da/da_util/da_tune_obs_desroziers.f90:      ob % trace_ships   = trace1 + trace2 + trace3 + trace4 + trace5
var/da/da_util/da_tune_obs_desroziers.f90:      if ( ob % trace_ships < 0.0 ) &
var/da/da_util/da_tune_obs_desroziers.f90:            ' Warning: ob % trace_ships < 0 = ', ob % trace_ships
var/da/da_util/da_tune_obs_desroziers.f90:      ob % trace_total = ob % trace_total + ob % trace_ships
var/da/da_util/da_tune_obs_desroziers.f90:      ob % num_ships_tot = count1 + count2 + count3 + count4 + count5
var/da/da_util/da_tune_obs_desroziers.f90:      ob % num_ships_tot + ob % num_polaramv_tot + ob % num_geoamv_tot + &
var/da/da_util/da_tune_obs_desroziers.f90:   ob % joa_ships_u = 0.0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % joa_ships_v = 0.0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % joa_ships_t = 0.0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % joa_ships_p = 0.0
var/da/da_util/da_tune_obs_desroziers.f90:   ob % joa_ships_q = 0.0
var/da/da_util/da_tune_obs_desroziers.f90:                                  ob % joa_ships_u, ob % joa_ships_v, &
var/da/da_util/da_tune_obs_desroziers.f90:                                  ob % joa_ships_t, ob % joa_ships_p, &
var/da/da_util/da_tune_obs_desroziers.f90:                                  ob % joa_ships_q )
var/da/da_util/da_tune_obs_desroziers.f90:   if ( ob % num_ships > 0 ) then
var/da/da_util/da_tune_obs_desroziers.f90:      call da_calc_new_factors1( 'ships', ob % num_ships, ob % num_ships_tot, &
var/da/da_util/da_tune_obs_desroziers.f90:         ob % jo_ships_u, ob % jo_ships_v, ob % jo_ships_t, ob % jo_ships_p, &
var/da/da_util/da_tune_obs_desroziers.f90:         ob % jo_ships_q, &
var/da/da_util/da_tune_obs_desroziers.f90:         ob % joa_ships_u, ob % joa_ships_v, ob % joa_ships_t, &
var/da/da_util/da_tune_obs_desroziers.f90:         ob % joa_ships_p, ob % joa_ships_q )
var/da/da_define_structures/da_deallocate_y.inc:   if (y % nlocal(ships) > 0) deallocate (y % ships)
var/da/da_define_structures/da_allocate_y.inc:   if (y % nlocal(ships) > 0) then
var/da/da_define_structures/da_allocate_y.inc:      allocate (y % ships(1:y % nlocal(ships)))
var/da/da_define_structures/da_allocate_y.inc:      y % ships(1:y % nlocal(ships)) % u = 0.0
var/da/da_define_structures/da_allocate_y.inc:      y % ships(1:y % nlocal(ships)) % v = 0.0
var/da/da_define_structures/da_allocate_y.inc:      y % ships(1:y % nlocal(ships)) % t = 0.0
var/da/da_define_structures/da_allocate_y.inc:      y % ships(1:y % nlocal(ships)) % p = 0.0
var/da/da_define_structures/da_allocate_y.inc:      y % ships(1:y % nlocal(ships)) % q = 0.0
var/da/da_define_structures/da_allocate_observations.inc:   if (iv%info(ships)%nlocal     > 0) allocate(iv%ships    (1:iv%info(ships)%nlocal))
var/da/da_define_structures/da_deallocate_observations.inc:   if (iv%info(ships)%nlocal > 0) deallocate (iv%ships)
var/da/da_define_structures/da_zero_y.inc:   if ( y % nlocal(ships) > 0 ) then
var/da/da_define_structures/da_zero_y.inc:      y % ships(1:y % nlocal(ships)) % u = value
var/da/da_define_structures/da_zero_y.inc:      y % ships(1:y % nlocal(ships)) % v = value
var/da/da_define_structures/da_zero_y.inc:      y % ships(1:y % nlocal(ships)) % t = value
var/da/da_define_structures/da_zero_y.inc:      y % ships(1:y % nlocal(ships)) % p = value
var/da/da_define_structures/da_zero_y.inc:      y % ships(1:y % nlocal(ships)) % q = value
var/da/da_define_structures/.svn/text-base/da_allocate_observations.inc.svn-base:   if (iv%info(ships)%nlocal     > 0) allocate(iv%ships    (1:iv%info(ships)%nlocal))
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:   if (y % nlocal(ships) > 0) then
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      allocate (y % ships(1:y % nlocal(ships)))
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % u = 0.0
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % v = 0.0
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % t = 0.0
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % p = 0.0
var/da/da_define_structures/.svn/text-base/da_allocate_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % q = 0.0
var/da/da_define_structures/.svn/text-base/da_deallocate_y.inc.svn-base:   if (y % nlocal(ships) > 0) deallocate (y % ships)
var/da/da_define_structures/.svn/text-base/da_deallocate_observations.inc.svn-base:   if (iv%info(ships)%nlocal > 0) deallocate (iv%ships)
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:   if ( y % nlocal(ships) > 0 ) then
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % u = value
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % v = value
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % t = value
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % p = value
var/da/da_define_structures/.svn/text-base/da_zero_y.inc.svn-base:      y % ships(1:y % nlocal(ships)) % q = value
var/da/da_radiance/da_read_simulated_rad.inc:   iv%info(radiance)%nlocal    = (min(ipe+simulated_rad_ngrid,ide) - max(ips-simulated_rad_ngrid,ids) + 1) * &
var/da/da_radiance/.svn/text-base/da_read_simulated_rad.inc.svn-base:   iv%info(radiance)%nlocal    = (min(ipe+simulated_rad_ngrid,ide) - max(ips-simulated_rad_ngrid,ids) + 1) * &
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:    ALLOCATE ( be % sljpy ( grid%xp%ipsy: grid%xp%ipey, grid%xp%jpsy: grid%xp%jpey) )
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:    ALLOCATE ( be % sljy ( grid%xp%ipsy: grid%xp%ipey, grid%xp%jpsy: grid%xp%jpey, grid%xp%kpsy: grid%xp%kpey,1:4) )
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:    ALLOCATE ( be % slipx ( grid%xp%ipsx: grid%xp%ipex, grid%xp%jpsx: grid%xp%jpex) )
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:    ALLOCATE ( be % slix ( grid%xp%ipsx: grid%xp%ipex, grid%xp%jpsx: grid%xp%jpex, grid%xp%kpsx: grid%xp%kpex,1:4) )
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:             do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:             do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:       do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:            do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:            do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/.svn/text-base/da_setup_be_ncep_gfs.inc.svn-base:      do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         allocate (iv % ships(1:nlocal(ships)))
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         iv%info(ships)%max_lev = 1
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         iv%info(ships)%nlocal = nlocal_out
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:           iv%info(gpspw)%nlocal+iv%info(metar)%nlocal+iv%info(ships)%nlocal &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:           'Read:  ', iv%info(ships)%nlocal, ' SHIP  reports,'
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:      write(6,*)'SHIPS:  ',iv%info(ships)%nlocal
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:      do i = 1, iv%info(ships)%nlocal
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         write(6,1000)iv%info(ships)%name(i)(1:8), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%date_char(i)(1:16), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%platform(i), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%lat(1,i),iv%info(ships)%lon(1,i), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%elv(i),iv%info(ships)%pstar(i), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%levels(i), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%slp(i)%inv,iv%info(ships)%slp(i)%qc, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%slp(i)%error,iv%info(ships)%pw(i)%inv, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%pw(i)%qc,iv%info(ships)%pw(i)%error
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         write(6,1001)1,' H/Z/U/V',iv%ships(i)%h,missing_data, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%info(ships)%zk(1,i), &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%ships(i)%u%inv,iv%ships(i)%u%qc,iv%ships(i)%u%error, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%ships(i)%v%inv,iv%ships(i)%v%qc,iv%ships(i)%v%error
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:         write(6,1001)1,' P/T/Q  ',iv%ships(i)%p%inv,iv%ships(i)%p%qc, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%ships(i)%p%error,iv%ships(i)%t%inv,iv%ships(i)%t%qc, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%ships(i)%t%error,iv%ships(i)%q%inv,iv%ships(i)%q%qc, &
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:                      iv%ships(i)%q%error
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % h = platform % each(1) % height
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % info(ships) % zk(1,j) = platform % each(1) % zk
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % u = platform % each(1) % u
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % v = platform % each(1) % v
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % t = platform % each(1) % t
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % p = platform % each(1) % p
var/da/da_setup_structures/.svn/text-base/da_setup_obs_structures_madis.inc.svn-base:               iv % ships(j) % q = platform % each(1) % q
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:    ALLOCATE ( be % sljpy ( grid%xp%ipsy: grid%xp%ipey, grid%xp%jpsy: grid%xp%jpey) )
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:    ALLOCATE ( be % sljy ( grid%xp%ipsy: grid%xp%ipey, grid%xp%jpsy: grid%xp%jpey, grid%xp%kpsy: grid%xp%kpey,1:4) )
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:    ALLOCATE ( be % slipx ( grid%xp%ipsx: grid%xp%ipex, grid%xp%jpsx: grid%xp%jpex) )
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:    ALLOCATE ( be % slix ( grid%xp%ipsx: grid%xp%ipex, grid%xp%jpsx: grid%xp%jpex, grid%xp%kpsx: grid%xp%kpex,1:4) )
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:             do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:             do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:       do i= grid%xp%ipsy, grid%xp%ipey
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:            do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:            do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/da_setup_be_ncep_gfs.inc:      do i= grid%xp%ipsx, grid%xp%ipex
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         allocate (iv % ships(1:nlocal(ships)))
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         iv%info(ships)%max_lev = 1
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         iv%info(ships)%nlocal = nlocal_out
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:           iv%info(gpspw)%nlocal+iv%info(metar)%nlocal+iv%info(ships)%nlocal &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:           'Read:  ', iv%info(ships)%nlocal, ' SHIP  reports,'
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:      write(6,*)'SHIPS:  ',iv%info(ships)%nlocal
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:      do i = 1, iv%info(ships)%nlocal
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         write(6,1000)iv%info(ships)%name(i)(1:8), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%date_char(i)(1:16), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%platform(i), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%lat(1,i),iv%info(ships)%lon(1,i), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%elv(i),iv%info(ships)%pstar(i), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%levels(i), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%slp(i)%inv,iv%info(ships)%slp(i)%qc, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%slp(i)%error,iv%info(ships)%pw(i)%inv, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%pw(i)%qc,iv%info(ships)%pw(i)%error
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         write(6,1001)1,' H/Z/U/V',iv%ships(i)%h,missing_data, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%info(ships)%zk(1,i), &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%ships(i)%u%inv,iv%ships(i)%u%qc,iv%ships(i)%u%error, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%ships(i)%v%inv,iv%ships(i)%v%qc,iv%ships(i)%v%error
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:         write(6,1001)1,' P/T/Q  ',iv%ships(i)%p%inv,iv%ships(i)%p%qc, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%ships(i)%p%error,iv%ships(i)%t%inv,iv%ships(i)%t%qc, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%ships(i)%t%error,iv%ships(i)%q%inv,iv%ships(i)%q%qc, &
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:                      iv%ships(i)%q%error
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % h = platform % each(1) % height
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % info(ships) % zk(1,j) = platform % each(1) % zk
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % u = platform % each(1) % u
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % v = platform % each(1) % v
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % t = platform % each(1) % t
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % p = platform % each(1) % p
var/da/da_setup_structures/da_setup_obs_structures_madis.inc:               iv % ships(j) % q = platform % each(1) % q
