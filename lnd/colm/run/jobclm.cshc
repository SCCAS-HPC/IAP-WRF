#!/bin/csh -f

#-------------------------------------------------------
# [1] Set necessary environment variables
#-------------------------------------------------------

#setenv FC xlf
#setenv FC pgi
setenv FC ifort

#setenv CASE AMAZON
#
#setenv EDGE_N  10.
#setenv EDGE_E -40.
#setenv EDGE_S -30.
#setenv EDGE_W -80.

#setenv CASE global

#setenv EDGE_N   90.
#setenv EDGE_E  180.
#setenv EDGE_S  -90.
#setenv EDGE_W -180.

#setenv CASE site13

#setenv EDGE_N  -1.
#setenv EDGE_E  -58.
#setenv EDGE_S  -3.
#setenv EDGE_W  -60.

setenv CASE site15

setenv EDGE_N  3.
setenv EDGE_E  -67.
setenv EDGE_S  2.
setenv EDGE_W  -68.

setenv NLON  1
setenv NLAT  1

setenv TASKS 1

setenv ROOTDIR $HOME/colmCN

# 1. set clm include directory root
setenv CLM_INCDIR $ROOTDIR/include

# 2. set clm raw land data directory root
setenv CLM_RAWDIR $ROOTDIR/rawdata

# 3. set clm surface data rectory root
setenv CLM_SRFDIR $ROOTDIR/mksrfdata

# 4. set clm input data directory root
setenv CLM_DATADIR $ROOTDIR/data

# 5. set clm initial directory root
setenv CLM_INIDIR $ROOTDIR/mkinidatacn

# 6. set clm source directory root
setenv CLM_SRCDIR $ROOTDIR/maincn

# 7. set executable directory
setenv CLM_EXEDIR $ROOTDIR/run

# 8. set output directory
setenv CLM_OUTDIR /p2/zhq/CoLM_PRC/$CASE/OUT

# 9. set restart directory, add by zhq.
setenv CLM_RSTDIR /p2/zhq/CoLM_PRC/$CASE/RSTDAT

mkdir -p $CLM_OUTDIR
mkdir -p $CLM_RSTDIR

#------------------------------------------------------
# [2] Build define.h in ./include directory
#------------------------------------------------------

\cat >! $CLM_INCDIR/define.h << EOF
#undef  coup_atmosmodel
#undef  RDGRID
#undef  SOILINI
#define offline
#define USGS24
#define LANDONLY
#undef  LAND_SEA
#undef  SINGLE_POINT
#define PRINCETON
#undef  GSWP2
EOF

if ($TASKS > 1) then
   \cat >> $CLM_INCDIR/define.h << EOF
#define MPI
EOF
endif

#------------------------------------------------------------------------
# [3] Compling clm surface data making, clm initialization, clm timeloop
#------------------------------------------------------------------------

echo 'Compiling mksrfdata...'
cd $CLM_SRFDIR

make -f Makefile.$FC clean
make -f Makefile.$FC >>& $CLM_EXEDIR/compile.log.clm || exit 5

cp -f $CLM_SRFDIR/srf.x $CLM_EXEDIR/srf.x
cp -f $CLM_SRFDIR/mkpft.x $CLM_EXEDIR/mkpft.x

#re-define CPP token for initial and main program 

\cat >! $CLM_INCDIR/define.h << EOF
#undef  coup_atmosmodel
#undef  RDGRID
#undef  SOILINI
#define offline
#undef  BATS
#undef  SIB2
#undef  IGBP
#undef  USGS24
#define DGVM
#define BARE
#undef  DyN
#define LANDONLY
#undef  LAND_SEA
#undef  SINGLE_POINT
#define PRINCETON
#undef  GSWP2
#define WR_YEARLY
EOF

if ($TASKS > 1) then
   \cat >> $CLM_INCDIR/define.h << EOF
#define MPI
EOF
endif

echo 'Compiling mkinidata...'
cd $CLM_INIDIR

make -f Makefile.$FC clean
make -f Makefile.$FC >>& $CLM_EXEDIR/compile.log.clm || exit 5

cp -f $CLM_INIDIR/initial.x $CLM_EXEDIR/initial.x

echo 'Compiling main...'
cd $CLM_SRCDIR

make -f Makefile.$FC clean
make -f Makefile.$FC >>& $CLM_EXEDIR/compile.log.clm || exit 5

cp -f $CLM_SRCDIR/clm.x $CLM_EXEDIR/clm.x

#------------------------------------------------------------------------
# [4] Executing clm surface data making, clm initialization, clm timeloop
#------------------------------------------------------------------------

cd $CLM_EXEDIR

# Create an input parameter namelist file for srf.x

\cat >! $CLM_EXEDIR/srfdat.$CASE << EOF
&mksrfexp
fgswpmask   = ''
fgridname   = ''
fdemname    = '$CLM_RAWDIR/DEM-USGS.30s'
fmaskname   = '$CLM_RAWDIR/LWMASK-USGS.30s'
flandname   = '$CLM_RAWDIR/VEG-USGS.30s'
fsolaname   = '$CLM_RAWDIR/SOILCAT.30s'
fsolbname   = '$CLM_RAWDIR/SOILCATB.30s'
fsurdat     = '$CLM_RSTDIR/srfdat.$CASE'
lon_points  =  $NLON
lat_points  =  $NLAT
edgen       =  $EDGE_N
edgee       =  $EDGE_E
edges       =  $EDGE_S
edgew       =  $EDGE_W
/
EOF

echo 'Executing CLM Making Surface Data'

if($TASKS > 1)then
   mpirun -np $TASKS $CLM_EXEDIR/srf.x < $CLM_EXEDIR/srfdat.$CASE >& $CLM_EXEDIR/clm.log.srf.$CASE || exit 5
else
   $CLM_EXEDIR/srf.x < $CLM_EXEDIR/srfdat.$CASE >& $CLM_EXEDIR/clm.log.srf.$CASE || exit 5
endif

\cat >! $CLM_EXEDIR/pftdat.$CASE << EOF
&mkpftexp
fmetmask   =  ''
fsurdati   =  '$CLM_RSTDIR/srfdat.$CASE'
fsurdato   =  '$CLM_RSTDIR/srfdat.$CASE.pft'
lon_points =  $NLON
lat_points =  $NLAT
edgen      =  $EDGE_N
edgee      =  $EDGE_E
edges      =  $EDGE_S
edgew      =  $EDGE_W
/
EOF

$CLM_EXEDIR/mkpft.x < $CLM_EXEDIR/pftdat.$CASE >& log.pft.$CASE

echo 'CLM Making Surface Data Completed'

# Create an input parameter namelist file for initial.x

#fmetdat        = '/p2/zhq/princeton_30min'
\cat >! $CLM_EXEDIR/inidat.$CASE << EOF
&clminiexp
site           = '$CASE'
greenwich      = .true.
start_yr       =  1991
start_jday     =  1
start_sec      =  1800
fsurdat        = '$CLM_RSTDIR/srfdat.$CASE.pft'
flaidat        = ' '
fsoildat       = '$CLM_DATADIR/soilini'
fmetdat        = '/home/zhq/data/PRCsingle/$CASE'
fhistTimeConst = '$CLM_RSTDIR/$CASE-rstTimeConst'
fhistTimeVar   = '$CLM_RSTDIR/$CASE-rstTimeVar'
foutdat        = '$CLM_OUTDIR/$CASE'
finfolist      = '$CLM_EXEDIR/clmini.infolist.$CASE'
lon_points     =  $NLON
lat_points     =  $NLAT
deltim         =  1800
mstep          =  175200
/
EOF

echo 'Executing CLM Initialization'

$CLM_EXEDIR/initial.x <$CLM_EXEDIR/inidat.$CASE >& $CLM_EXEDIR/clm.log.initial.$CASE || exit 5

echo 'CLM Initialization Completed'

# Create an input parameter namelist file for clm.x

mv -f $CLM_EXEDIR/clmini.infolist.$CASE $CLM_EXEDIR/timeloop.$CASE

# Create flux export namelist file for clm.x
# Don't change the sequence of the FLUX array elements !*!
#
#set FLUX = ( +taux     +tauy     +fsena    +lfevpa    +fevpa    +fsenl    \
#             +fevpl    +etr      +fseng    +fevpg     +fgrnd    +sabvsun  \
#             +sabvsha  +sabg     +olrg     +rnet      +xerr     +zerr     \
#             +rsur     +rnof     +assim    +respc     +tss_01   +tss_02   \
#             +tss_03   +tss_04   +tss_05   +tss_06    +tss_07   +tss_08   \
#             +tss_09   +tss_10   +wliq_01  +wliq_02   +wliq_03  +wliq_04  \
#             +wliq_05  +wliq_06  +wliq_07  +wliq_08   +wliq_09  +wliq_10  \
#             +wice_01  +wice_02  +wice_03  +wice_04   +wice_05  +wice_06  \
#             +wice_07  +wice_08  +wice_09  +wice_10   +tg       +tlsun    \
#             +tlsha    +ldew     +scv      +snowdp    +fsno     +sigf     \
#             +green    +lai      +sai      +alb_11    +alb_12   +alb_21   \
#             +alb_22   +emis     +z0ma     +trad      +ustar    +tstar    \
#             +qstar    +zol      +rib      +fm        +fh       +fq       \
#             +tref     +qref     +u10m     +v10m      +f10m     +us       \
#             +vs       +tm       +qm       +prc       +prl      +pbot     \
#             +frl      +solar    )
#
#@ i = 0
#
#set flux_exp = "flux_exp="
#
#foreach str ($FLUX)
#   @ i = $i + 1
#   if("$str" =~ +*) then
#      set flux_exp = "$flux_exp +$i"
#   else
#      set flux_exp = "$flux_exp -$i"
#   endif
#end
#
#\cat ># $CLM_EXEDIR/flux.stdin << EOF
#&flux_nml
#$flux_exp
#/
#EOF

echo 'Executing CLM Time-looping'

if($TASKS > 1)then
   mpirun -np $TASKS $CLM_EXEDIR/clm.x < $CLM_EXEDIR/timeloop.$CASE >& $CLM_EXEDIR/clm.log.$CASE || exit 5
else
   $CLM_EXEDIR/clm.x < $CLM_EXEDIR/timeloop.$CASE >& $CLM_EXEDIR/clm.log.$CASE || exit 5
endif

echo 'CLM Running Completed'
